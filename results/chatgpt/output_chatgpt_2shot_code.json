{
    "1": {
        "question": "When a spring does work on an object, we cannot find the work by simply multiplying the spring force by the object's displacement. The reason is that there is no one value for the force-it changes. However, we can split the displacement up into an infinite number of tiny parts and then approximate the force in each as being constant. Integration sums the work done in all those parts. Here we use the generic result of the integration.\r\n\r\nIn Figure, a cumin canister of mass $m=0.40 \\mathrm{~kg}$ slides across a horizontal frictionless counter with speed $v=0.50 \\mathrm{~m} / \\mathrm{s}$. It then runs into and compresses a spring of spring constant $k=750 \\mathrm{~N} / \\mathrm{m}$. When the canister is momentarily stopped by the spring, by what distance $d$ is the spring compressed?",
        "image": "images/1.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "1.2",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "1",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1514,
            "img_height": 720,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: When a spring does work on an object, we cannot find the work by simply multiplying the spring force by the object's displacement. The reason is that there is no one value for the force-it changes. However, we can split the displacement up into an infinite number of tiny parts and then approximate the force in each as being constant. Integration sums the work done in all those parts. Here we use the generic result of the integration.\r\n\r\nIn Figure, a cumin canister of mass $m=0.40 \\mathrm{~kg}$ slides across a horizontal frictionless counter with speed $v=0.50 \\mathrm{~m} / \\mathrm{s}$. It then runs into and compresses a spring of spring constant $k=750 \\mathrm{~N} / \\mathrm{m}$. When the canister is momentarily stopped by the spring, by what distance $d$ is the spring compressed?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "m = 0.40\nv = 0.50\nk = 750\n\nd = (m * v**2) / (2 * k)\nprint(d)",
        "execution": "6.666666666666667e-05",
        "error": "None",
        "extraction": "0.0013",
        "prediction": "0.0",
        "true_false": false
    },
    "2": {
        "question": "what is the total volume of the measuring cup?",
        "image": "images/2.jpg",
        "choices": null,
        "unit": "g",
        "precision": null,
        "answer": "1000",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "2",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 768,
            "source": "TextVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: what is the total volume of the measuring cup? (Unit: g)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "measuring_cup_volume = 250\nprint(measuring_cup_volume)",
        "execution": "250",
        "error": "None",
        "extraction": "250",
        "prediction": "250",
        "true_false": false
    },
    "3": {
        "question": "\u25b3ABC\u7684\u4e24\u5185\u89d2\u5e73\u5206\u7ebfOB\u3001OC\u76f8\u4ea4\u4e8e\u70b9O\uff0c\u82e5\u2220A\uff1d110\u00b0\uff0c\u5219\u2220BOC\uff1d\uff08\uff09",
        "image": "images/3.jpg",
        "choices": [
            "135\u00b0",
            "140\u00b0",
            "145\u00b0",
            "150\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "145\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "3",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 131,
            "img_height": 60,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u25b3ABC\u7684\u4e24\u5185\u89d2\u5e73\u5206\u7ebfOB\u3001OC\u76f8\u4ea4\u4e8e\u70b9O\uff0c\u82e5\u2220A\uff1d110\u00b0\uff0c\u5219\u2220BOC\uff1d\uff08\uff09\nChoices:\n(A) 135\u00b0\n(B) 140\u00b0\n(C) 145\u00b0\n(D) 150\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_A = 110\n    angle_BOC = (180 - angle_A) / 2\n    return angle_BOC\n\nprint(find_angle())",
        "execution": "35.0",
        "error": "None",
        "extraction": "70",
        "prediction": "140\u00b0",
        "true_false": false
    },
    "4": {
        "question": "Subtract all large rubber spheres. Subtract all big shiny cylinders. How many objects are left?",
        "image": "images/4.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "4",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large rubber spheres. Subtract all big shiny cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_rubber_spheres = 5\nbig_shiny_cylinders = 3\n\nobjects_left = large_rubber_spheres - big_shiny_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "5": {
        "question": "Find $m\\angle H$",
        "image": "images/5.jpg",
        "choices": [
            "97",
            "102",
            "107",
            "122"
        ],
        "unit": null,
        "precision": null,
        "answer": "97",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "5",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 322,
            "img_height": 245,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $m\\angle H$\nChoices:\n(A) 97\n(B) 102\n(C) 107\n(D) 122\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(H):\n    angle_H = math.degrees(math.atan(H/12))\n    return round(angle_H)\n\nH = 12\nprint(find_angle(H))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "102",
        "prediction": "102",
        "true_false": false
    },
    "6": {
        "question": "As shown in the figure, if CB = 4.0, DB = 7.0, and D is the midpoint of AC, then the length of AC is ()",
        "image": "images/6.jpg",
        "choices": [
            "6cm",
            "7cm",
            "4cm",
            "5cm"
        ],
        "unit": null,
        "precision": null,
        "answer": "6cm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "6",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 30,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, if CB = 4.0, DB = 7.0, and D is the midpoint of AC, then the length of AC is ()\nChoices:\n(A) 6cm\n(B) 7cm\n(C) 4cm\n(D) 5cm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "CB = 4.0\nDB = 7.0\n\nAC = 2 * DB - CB\nprint(AC)",
        "execution": "10.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": "5cm",
        "true_false": false
    },
    "7": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) after eight.",
        "image": "images/7.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "7",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) after eight.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "time_word = \"quarter\"\nprint(time_word)",
        "execution": "quarter",
        "error": "None",
        "extraction": "quarter",
        "prediction": "quarter",
        "true_false": true
    },
    "8": {
        "question": "Is the number of tiny gray bicycles that are on the left side of the brown metal sedan greater than the number of things that are to the left of the tiny green bicycle?",
        "image": "images/8.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "8",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of tiny gray bicycles that are on the left side of the brown metal sedan greater than the number of things that are to the left of the tiny green bicycle?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_bicycles(bicycles, sedan, green_bicycle):\n    left_gray_bicycles = bicycles.count('gray')\n    left_green_bicycle = bicycles.index('green')\n\n    if left_gray_bicycles > left_green_bicycle:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nbicycles = ['gray', 'gray', 'gray', 'green', 'gray']\nsedan = 'brown'\ngreen_bicycle = 'green'\n\nprint(compare_bicycles(bicycles, sedan, green_bicycle))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "9": {
        "question": "\u5982\u56fe\u662f\u4e00\u682a\u7f8e\u4e3d\u7684\u52fe\u80a1\u6811\uff0c\u5176\u4e2d\u6240\u6709\u56db\u8fb9\u5f62\u90fd\u662f\u6b63\u65b9\u5f62\uff0c\u6240\u6709\u7684\u4e09\u89d2\u5f62\u90fd\u662f\u76f4\u89d2\u4e09\u89d2\u5f62\uff0c\u82e5\u6b63\u65b9\u5f62A\u3001B\u7684\u9762\u79ef\u5206\u522b\u4e3a5\u30013\uff0c\u5219\u6700\u5927\u6b63\u65b9\u5f62C\u7684\u9762\u79ef\u662f\uff08\uff09",
        "image": "images/9.jpg",
        "choices": [
            "15",
            "13",
            "11",
            "8"
        ],
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "9",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 134,
            "img_height": 155,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\u662f\u4e00\u682a\u7f8e\u4e3d\u7684\u52fe\u80a1\u6811\uff0c\u5176\u4e2d\u6240\u6709\u56db\u8fb9\u5f62\u90fd\u662f\u6b63\u65b9\u5f62\uff0c\u6240\u6709\u7684\u4e09\u89d2\u5f62\u90fd\u662f\u76f4\u89d2\u4e09\u89d2\u5f62\uff0c\u82e5\u6b63\u65b9\u5f62A\u3001B\u7684\u9762\u79ef\u5206\u522b\u4e3a5\u30013\uff0c\u5219\u6700\u5927\u6b63\u65b9\u5f62C\u7684\u9762\u79ef\u662f\uff08\uff09\nChoices:\n(A) 15\n(B) 13\n(C) 11\n(D) 8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_max_square_area(square_a_area, square_b_area):\n    # The area of the largest square is the sum of the areas of square A and square B\n    square_c_area = square_a_area + square_b_area\n    return square_c_area\n\nsquare_a_area = 5\nsquare_b_area = 3\n\nmax_square_area = find_max_square_area(square_a_area, square_b_area)\nprint(max_square_area)",
        "execution": "8",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": true
    },
    "10": {
        "question": "Which object comes next?",
        "image": "images/10.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "E",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "10",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 376,
            "img_height": 418,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which object comes next?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "objects = ['A', 'B', 'C', 'D', 'E']\ncurrent_object = 'E'\n\nnext_object = objects[(objects.index(current_object) + 1) % len(objects)]\nprint(next_object)",
        "execution": "A",
        "error": "None",
        "extraction": "A",
        "prediction": "A",
        "true_false": false
    },
    "11": {
        "question": "Subtract all red things. Subtract all tiny matte balls. How many objects are left?",
        "image": "images/11.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "11",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all red things. Subtract all tiny matte balls. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "red_things = 5\ntiny_matte_balls = 3\n\nobjects_left = red_things - tiny_matte_balls\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "12": {
        "question": "Are there fewer metallic fighters than rubber objects?",
        "image": "images/12.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "12",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer metallic fighters than rubber objects?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "metallic_fighters = 10\nrubber_objects = 15\n\nif metallic_fighters < rubber_objects:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "13": {
        "question": "How many objects are preferred by more than 90 percent of people in at least one category?",
        "image": "images/13.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "13",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many objects are preferred by more than 90 percent of people in at least one category?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "objects = {\n    'category1': ['object1', 'object2', 'object3', 'object4'],\n    'category2': ['object2', 'object3', 'object5', 'object6'],\n    'category3': ['object1', 'object3', 'object4', 'object6']\n}\n\ncount = 0\nfor category in objects:\n    for obj in objects[category]:\n        percent = sum([1 for cat in objects if obj in objects[cat]]) / len(objects) * 100\n        if percent > 90:\n            count += 1\n\nprint(count)",
        "execution": "",
        "error": "name 'obj' is not defined",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "14": {
        "question": "Is the number of tiny objects that are behind the small metal jet less than the number of tiny things left of the tiny sedan?",
        "image": "images/14.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "14",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of tiny objects that are behind the small metal jet less than the number of tiny things left of the tiny sedan?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_objects(num_objects_behind_jet, num_objects_left_of_sedan):\n    if num_objects_behind_jet < num_objects_left_of_sedan:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_objects_behind_jet = 5\nnum_objects_left_of_sedan = 8\n\nprint(compare_objects(num_objects_behind_jet, num_objects_left_of_sedan))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "15": {
        "question": "Which organism with be most affected if algae was eliminated?",
        "image": "images/15.jpg",
        "choices": [
            "Tilapia",
            "Common water flea",
            "Great diving beetle",
            "Tadpole"
        ],
        "unit": null,
        "precision": null,
        "answer": "Common water flea",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "15",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 400,
            "img_height": 232,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which organism with be most affected if algae was eliminated?\nChoices:\n(A) Tilapia\n(B) Common water flea\n(C) Great diving beetle\n(D) Tadpole\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_affected_organism():\n    organisms = {\n        'Tilapia': 'algae',\n        'Common water flea': 'algae',\n        'Great diving beetle': 'algae',\n        'Tadpole': 'algae'\n    }\n\n    max_count = 0\n    most_affected = \"\"\n\n    for organism, dependency in organisms.items():\n        count = list(organisms.values()).count(dependency)\n        if count > max_count:\n            max_count = count\n            most_affected = organism\n\n    return most_affected\n\nprint(most_affected_organism())",
        "execution": "Tilapia",
        "error": "None",
        "extraction": "Common water flea",
        "prediction": "Common water flea",
        "true_false": true
    },
    "16": {
        "question": "How many items sold less than 5 units in at least one store?",
        "image": "images/16.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "16",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many items sold less than 5 units in at least one store?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "items_sold = {\n    'item1': [10, 3, 8, 2],\n    'item2': [5, 6, 4, 7],\n    'item3': [9, 2, 6, 5],\n    'item4': [4, 7, 3, 9]\n}\n\ncount = 0\nfor item in items_sold:\n    if min(items_sold[item]) < 5:\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "17": {
        "question": "\u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220ACB\uff1d90\u00b0\uff0cD\u662fAB\u7684\u4e2d\u70b9\uff0cAB\uff1d10\uff0c\u5219CD\u7684\u957f\u4e3a\uff08\uff09",
        "image": "images/17.jpg",
        "choices": [
            "5",
            "6",
            "8",
            "10"
        ],
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "17",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 125,
            "img_height": 172,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220ACB\uff1d90\u00b0\uff0cD\u662fAB\u7684\u4e2d\u70b9\uff0cAB\uff1d10\uff0c\u5219CD\u7684\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 5\n(B) 6\n(C) 8\n(D) 10\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAB = 10\nCD = AB / 2\nprint(CD)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "18": {
        "question": "The passage below describes an experiment. Read the passage and then follow the instructions below.\n\nLinda applied a thin layer of wax to the underside of her snowboard and rode the board straight down a hill. Then, she removed the wax and rode the snowboard straight down the hill again. She repeated the rides four more times, alternating whether she rode with a thin layer of wax on the board or not. Her friend Bob timed each ride. Linda and Bob calculated the average time it took to slide straight down the hill on the snowboard with wax compared to the average time on the snowboard without wax.\nFigure: snowboarding down a hill. Identify the question that Linda and Bob's experiment can best answer.",
        "image": "images/18.jpg",
        "choices": [
            "Does Linda's snowboard slide down a hill in less time when it has a thin layer of wax or a thick layer of wax?",
            "Does Linda's snowboard slide down a hill in less time when it has a layer of wax or when it does not have a layer of wax?"
        ],
        "unit": null,
        "precision": null,
        "answer": "Does Linda's snowboard slide down a hill in less time when it has a layer of wax or when it does not have a layer of wax?",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "18",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 302,
            "img_height": 232,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "natural image",
            "grade": "elementary school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The passage below describes an experiment. Read the passage and then follow the instructions below.\n\nLinda applied a thin layer of wax to the underside of her snowboard and rode the board straight down a hill. Then, she removed the wax and rode the snowboard straight down the hill again. She repeated the rides four more times, alternating whether she rode with a thin layer of wax on the board or not. Her friend Bob timed each ride. Linda and Bob calculated the average time it took to slide straight down the hill on the snowboard with wax compared to the average time on the snowboard without wax.\nFigure: snowboarding down a hill. Identify the question that Linda and Bob's experiment can best answer.\nChoices:\n(A) Does Linda's snowboard slide down a hill in less time when it has a thin layer of wax or a thick layer of wax?\n(B) Does Linda's snowboard slide down a hill in less time when it has a layer of wax or when it does not have a layer of wax?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def calculate_average_time(wax_times, no_wax_times):\n    wax_average = sum(wax_times) / len(wax_times)\n    no_wax_average = sum(no_wax_times) / len(no_wax_times)\n    return wax_average, no_wax_average\n\nwax_times = [10, 12, 11, 13, 10]\nno_wax_times = [15, 14, 16, 13, 15]\n\nwax_average, no_wax_average = calculate_average_time(wax_times, no_wax_times)\nprint(\"Average time with wax:\", wax_average)\nprint(\"Average time without wax:\", no_wax_average)",
        "execution": "Average time with wax: 11.2\nAverage time without wax: 14.6",
        "error": "None",
        "extraction": "(B) Does Linda's snowboard slide down a hill in less time when it has a layer of wax or when it does not have a layer of wax?",
        "prediction": "Does Linda's snowboard slide down a hill in less time when it has a layer of wax or when it does not have a layer of wax?",
        "true_false": true
    },
    "19": {
        "question": "what is the highest amount this class measures?",
        "image": "images/19.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "400",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "19",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 684,
            "source": "TextVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: what is the highest amount this class measures?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "class_measurements = [2.5, 3.2, 2.8, 3.5, 2.9]\nhighest_amount = max(class_measurements)\nprint(highest_amount)",
        "execution": "3.5",
        "error": "None",
        "extraction": "3.5",
        "prediction": null,
        "true_false": false
    },
    "20": {
        "question": "Is the sum of smallest two bar is greater then the largest bar?",
        "image": "images/20.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "20",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the sum of smallest two bar is greater then the largest bar?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def sum_of_smallest_two_bars_greater_than_largest_bar(bar1, bar2, bar3):\n    bars = [bar1, bar2, bar3]\n    bars.sort()\n    if bars[0] + bars[1] > bars[2]:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nprint(sum_of_smallest_two_bars_greater_than_largest_bar(5, 8, 10))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "21": {
        "question": "Fill in the blank to describe the model. The model has 4 dots divided into 2 equal groups. There are (_) dots in each group.",
        "image": "images/21.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "21",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 418,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fill in the blank to describe the model. The model has 4 dots divided into 2 equal groups. There are (_) dots in each group.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dots = 4\ngroups = 2\ndots_in_each_group = dots // groups\nprint(dots_in_each_group)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "22": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/22.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "22",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 555,
            "img_height": 785,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "23": {
        "question": "The derivative of f(x) at x=2 is ____ that at x=5",
        "image": "images/23.jpg",
        "choices": [
            "larger than",
            "equal to",
            "smaller than"
        ],
        "unit": null,
        "precision": null,
        "answer": "equal to",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "23",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 552,
            "img_height": 393,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The derivative of f(x) at x=2 is ____ that at x=5\nChoices:\n(A) larger than\n(B) equal to\n(C) smaller than\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def derivative_ratio(f, x1, x2):\n    derivative_x1 = f(x1)\n    derivative_x2 = f(x2)\n    \n    if derivative_x1 > derivative_x2:\n        return \"larger than\"\n    elif derivative_x1 == derivative_x2:\n        return \"equal to\"\n    else:\n        return \"smaller than\"\n\ndef f(x):\n    return 2*x + 3\n\nx1 = 2\nx2 = 5\n\nprint(derivative_ratio(f, x1, x2))",
        "execution": "smaller than",
        "error": "None",
        "extraction": "larger than",
        "prediction": "larger than",
        "true_false": false
    },
    "24": {
        "question": "Is Periwinkle the maximum?",
        "image": "images/24.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "24",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 709,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Periwinkle the maximum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "max_color = \"Periwinkle\"\nchoices = ['yes', 'no']\n\nif max_color == \"Periwinkle\":\n    answer = 'yes'\nelse:\n    answer = 'no'\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "25": {
        "question": "Is Medium Periwinkle the smoothest?",
        "image": "images/25.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "25",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 770,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Medium Periwinkle the smoothest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "smoothness = {\n    'Medium Periwinkle': 8,\n    'Light Blue': 6,\n    'Dark Indigo': 9,\n    'Pale Lavender': 7\n}\n\nsmoothest_color = max(smoothness, key=smoothness.get)\n\nif smoothest_color == 'Medium Periwinkle':\n    answer = 'yes'\nelse:\n    answer = 'no'\n\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "26": {
        "question": "Is Black greater than Deep Sky Blue?",
        "image": "images/26.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "26",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 761,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Black greater than Deep Sky Blue?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "black = (0, 0, 0)\ndeep_sky_blue = (0, 191, 255)\n\nif black > deep_sky_blue:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "27": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/27.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "11",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "27",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2628,
            "img_height": 1752,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "28": {
        "question": "$\\overline{AB}$ is a diameter, $AC=8$ inches, and $BC=15$ inches. Find the radius of the circle.",
        "image": "images/28.jpg",
        "choices": [
            "7.5",
            "8",
            "8.5",
            "17"
        ],
        "unit": null,
        "precision": null,
        "answer": "8.5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "28",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 519,
            "img_height": 431,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: $\\overline{AB}$ is a diameter, $AC=8$ inches, and $BC=15$ inches. Find the radius of the circle.\nChoices:\n(A) 7.5\n(B) 8\n(C) 8.5\n(D) 17\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_radius(AC, BC):\n    diameter = AC + BC\n    radius = diameter / 2\n    return radius\n\nAC = 8\nBC = 15\n\nradius = find_radius(AC, BC)\nprint(radius)",
        "execution": "11.5",
        "error": "None",
        "extraction": "7.5",
        "prediction": "7.5",
        "true_false": false
    },
    "29": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/29.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "29",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 670,
            "img_height": 440,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "30": {
        "question": "As shown in the figure, the two chords AB and CD in the circle intersect at E, \u2220D = 35.0, \u2220AEC = 105.0, then \u2220C = ()",
        "image": "images/30.jpg",
        "choices": [
            "60\u00b0",
            "70\u00b0",
            "80\u00b0",
            "85\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "70\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "30",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 117,
            "img_height": 113,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the two chords AB and CD in the circle intersect at E, \u2220D = 35.0, \u2220AEC = 105.0, then \u2220C = ()\nChoices:\n(A) 60\u00b0\n(B) 70\u00b0\n(C) 80\u00b0\n(D) 85\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_D, angle_AEC):\n    angle_C = 180 - angle_D - angle_AEC\n    return angle_C\n\nangle_D = 35.0\nangle_AEC = 105.0\n\nangle_C = find_angle(angle_D, angle_AEC)\nprint(angle_C)",
        "execution": "40.0",
        "error": "None",
        "extraction": "80",
        "prediction": "80\u00b0",
        "true_false": false
    },
    "31": {
        "question": "Are there more big red rubber double buss in front of the large red double bus than big green things?",
        "image": "images/31.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "31",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there more big red rubber double buss in front of the large red double bus than big green things?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_red_rubber_double_buss = 5\nlarge_red_double_bus = 3\nbig_green_things = 7\n\nif big_red_rubber_double_buss > large_red_double_bus + big_green_things:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "32": {
        "question": "\u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0cAB\uff1dAC\uff0c\u2220CAB\uff1d40\u00b0\uff0c\u5219\u2220D\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/32.jpg",
        "choices": [
            "40\u00b0",
            "50\u00b0",
            "60\u00b0",
            "70\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "70\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "32",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 168,
            "img_height": 100,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0cAB\uff1dAC\uff0c\u2220CAB\uff1d40\u00b0\uff0c\u5219\u2220D\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 40\u00b0\n(B) 50\u00b0\n(C) 60\u00b0\n(D) 70\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    AB = AC = 1\n    CAB = 40\n\n    # Using law of cosines to find angle D\n    cosD = (AB**2 + AC**2 - 2*AB*AC*math.cos(math.radians(CAB))) / (2*AB*AC)\n    angleD = math.degrees(math.acos(cosD))\n    return angleD\n\nprint(find_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "50",
        "prediction": "50\u00b0",
        "true_false": false
    },
    "33": {
        "question": "Use a sector paper sheet with a central angle of 120.0 and a radius of 6.0 to roll into a conical bottomless paper cap (as shown in the picture), then the bottom perimeter of the paper cap is ()",
        "image": "images/33.jpg",
        "choices": [
            "2\u03c0cm",
            "3\u03c0cm",
            "4\u03c0cm",
            "5\u03c0cm"
        ],
        "unit": null,
        "precision": null,
        "answer": "4\u03c0cm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "33",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 331,
            "img_height": 95,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Use a sector paper sheet with a central angle of 120.0 and a radius of 6.0 to roll into a conical bottomless paper cap (as shown in the picture), then the bottom perimeter of the paper cap is ()\nChoices:\n(A) 2\u03c0cm\n(B) 3\u03c0cm\n(C) 4\u03c0cm\n(D) 5\u03c0cm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ncentral_angle = 120.0\nradius = 6.0\n\n# Calculate the circumference of the base of the cone\ncircumference = 2 * math.pi * radius\n\n# Calculate the length of the arc of the sector paper sheet\narc_length = (central_angle / 360) * circumference\n\n# Calculate the bottom perimeter of the paper cap\nbottom_perimeter = arc_length\n\nprint(bottom_perimeter)",
        "execution": "12.566370614359172",
        "error": "None",
        "extraction": "12.566370614359172",
        "prediction": "2\u03c0cm",
        "true_false": false
    },
    "34": {
        "question": "Is this function continuous at each point?",
        "image": "images/34.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "34",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 479,
            "img_height": 479,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this function continuous at each point?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_continuous(function):\n    try:\n        for x in range(-10, 11):\n            function(x)\n    except:\n        return \"No\"\n    return \"Yes\"\n\n# Example function\ndef example_function(x):\n    return x**2\n\nprint(is_continuous(example_function))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "35": {
        "question": "\u5982\u56fe\uff0cAB\u662f\u2299O\u7684\u76f4\u5f84\uff0cEF\uff0cEB\u662f\u2299O\u7684\u5f26\uff0c\u70b9E\u662fFEB\u7684\u4e2d\u70b9\uff0cEF\u4e0eAB\u4ea4\u4e8e\u70b9C\uff0c\u8fde\u63a5OF\uff0c\u82e5\u2220AOF\uff1d40\u00b0\uff0c\u5219\u2220F\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/35.jpg",
        "choices": [
            "20\u00b0",
            "35\u00b0",
            "40\u00b0",
            "55\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "35\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "35",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 151,
            "img_height": 141,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAB\u662f\u2299O\u7684\u76f4\u5f84\uff0cEF\uff0cEB\u662f\u2299O\u7684\u5f26\uff0c\u70b9E\u662fFEB\u7684\u4e2d\u70b9\uff0cEF\u4e0eAB\u4ea4\u4e8e\u70b9C\uff0c\u8fde\u63a5OF\uff0c\u82e5\u2220AOF\uff1d40\u00b0\uff0c\u5219\u2220F\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 20\u00b0\n(B) 35\u00b0\n(C) 40\u00b0\n(D) 55\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef solve_angle():\n    angle_AOF = 40\n    angle_AOC = 90\n    angle_FOC = 180 - angle_AOC - angle_AOF\n    angle_F = angle_FOC / 2\n    return angle_F\n\nprint(solve_angle())",
        "execution": "25.0",
        "error": "None",
        "extraction": "35",
        "prediction": "35\u00b0",
        "true_false": true
    },
    "36": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/36.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "36",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 480,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "37": {
        "question": "What is the limit as x approaches -1?",
        "image": "images/37.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "37",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 408,
            "img_height": 410,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the limit as x approaches -1?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\nexpr = (x**2 - 1) / (x + 1)\nlimit_expr = sp.limit(expr, x, -1)\nprint(limit_expr)",
        "execution": "-2",
        "error": "None",
        "extraction": "-2",
        "prediction": "-2",
        "true_false": false
    },
    "38": {
        "question": "How many bars have values smaller than 6?",
        "image": "images/38.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "38",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many bars have values smaller than 6?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bars = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\n\ncount = 0\nfor bar in bars:\n    if bar < 6:\n        count += 1\n\nprint(count)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "39": {
        "question": "Is this function odd or even?",
        "image": "images/39.jpg",
        "choices": [
            "odd",
            "even"
        ],
        "unit": null,
        "precision": null,
        "answer": "odd",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "39",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 433,
            "img_height": 304,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this function odd or even?\nChoices:\n(A) odd\n(B) even\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_odd_or_even(num):\n    if num % 2 == 0:\n        return \"even\"\n    else:\n        return \"odd\"\n\nprint(is_odd_or_even(5))",
        "execution": "odd",
        "error": "None",
        "extraction": "odd",
        "prediction": "odd",
        "true_false": true
    },
    "40": {
        "question": "Subtract all brown blocks. Subtract all large blue rubber things. How many objects are left?",
        "image": "images/40.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "40",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all brown blocks. Subtract all large blue rubber things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "brown_blocks = 5\nlarge_blue_rubber_things = 3\n\nobjects_left = brown_blocks - large_blue_rubber_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "41": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/41.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "41",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 5236,
            "img_height": 3491,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "42": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/42.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "42",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 401,
            "img_height": 539,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "43": {
        "question": "Use the graph to answer the question below. Which month is the wettest on average in Christchurch?",
        "image": "images/43.jpg",
        "choices": [
            "August",
            "April",
            "May"
        ],
        "unit": null,
        "precision": null,
        "answer": "May",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "43",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 449,
            "img_height": 323,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "line plot",
            "grade": "elementary school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Use the graph to answer the question below. Which month is the wettest on average in Christchurch?\nChoices:\n(A) August\n(B) April\n(C) May\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\nmonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nrainfall = [30, 25, 20, 15, 10, 5, 5, 10, 15, 20, 25, 30]\n\nplt.plot(months, rainfall)\nplt.xlabel('Month')\nplt.ylabel('Rainfall (mm)')\nplt.title('Average Monthly Rainfall in Christchurch')\nplt.show()\n\nwettest_month = months[rainfall.index(max(rainfall))]\nprint(wettest_month)",
        "execution": "January",
        "error": "None",
        "extraction": "August",
        "prediction": "August",
        "true_false": false
    },
    "44": {
        "question": "Chase wants to buy 4 kilograms of oval beads and 5 kilograms of star-shaped beads. How much will he spend? (Unit: $)",
        "image": "images/44.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "44",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 305,
            "img_height": 226,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Chase wants to buy 4 kilograms of oval beads and 5 kilograms of star-shaped beads. How much will he spend? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "oval_beads_price = 2.50\nstar_beads_price = 3.00\n\ntotal_cost = (4 * oval_beads_price) + (5 * star_beads_price)\nprint(total_cost)",
        "execution": "25.0",
        "error": "None",
        "extraction": "22.5",
        "prediction": null,
        "true_false": false
    },
    "45": {
        "question": "An administrator at the Department of Motor Vehicles (DMV) tracked the average wait time from month to month. According to the table, what was the rate of change between August and September? (Unit: minutes per month)",
        "image": "images/45.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "45",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 273,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: An administrator at the Department of Motor Vehicles (DMV) tracked the average wait time from month to month. According to the table, what was the rate of change between August and September? (Unit: minutes per month)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "august_wait_time = 45\nseptember_wait_time = 60\n\nrate_of_change = (september_wait_time - august_wait_time) / 1\nprint(rate_of_change)",
        "execution": "15.0",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "46": {
        "question": "What would happen to the population of adult spiders if predator ate all the spider eggs?",
        "image": "images/46.jpg",
        "choices": [
            "Adult spider population would remain the same",
            "Adult spider population would double.",
            "Adults spider population would decrease",
            "Adult spider population would increase."
        ],
        "unit": null,
        "precision": null,
        "answer": "Adults spider population would decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "46",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 829,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would happen to the population of adult spiders if predator ate all the spider eggs?\nChoices:\n(A) Adult spider population would remain the same\n(B) Adult spider population would double.\n(C) Adults spider population would decrease\n(D) Adult spider population would increase.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def spider_population(population, eggs_eaten):\n    return population - eggs_eaten\n\npopulation = 100\neggs_eaten = 50\n\nnew_population = spider_population(population, eggs_eaten)\n\nif new_population == population:\n    print(\"Adult spider population would remain the same\")\nelif new_population > population:\n    print(\"Adult spider population would increase\")\nelif new_population < population:\n    print(\"Adult spider population would decrease\")",
        "execution": "Adult spider population would decrease",
        "error": "None",
        "extraction": "Adult spider population would decrease",
        "prediction": "Adults spider population would decrease",
        "true_false": true
    },
    "47": {
        "question": "Subtract all rubber balls. Subtract all yellow shiny things. How many objects are left?",
        "image": "images/47.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "47",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all rubber balls. Subtract all yellow shiny things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "rubber_balls = 5\nyellow_shiny_things = 3\n\nobjects_left = rubber_balls - yellow_shiny_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "48": {
        "question": "Find $m \\angle 3$.",
        "image": "images/48.jpg",
        "choices": [
            "28",
            "38",
            "52",
            "62"
        ],
        "unit": null,
        "precision": null,
        "answer": "38",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "48",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 596,
            "img_height": 426,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $m \\angle 3$.\nChoices:\n(A) 28\n(B) 38\n(C) 52\n(D) 62\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle1, angle2):\n    angle3 = 180 - angle1 - angle2\n    return angle3\n\nangle1 = 90\nangle2 = 50\n\nangle3 = find_angle(angle1, angle2)\nprint(angle3)",
        "execution": "40",
        "error": "None",
        "extraction": "62",
        "prediction": "62",
        "true_false": false
    },
    "49": {
        "question": "What is the sum of the digits on either end of the sign in the corner?",
        "image": "images/49.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "49",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 626,
            "img_height": 476,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the digits on either end of the sign in the corner?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sign = \"\"\"\n  1 2 3 4 5 6 7 8 9\n1 . . . . . . . . 1\n2 . . . . . . . . 2\n3 . . . . . . . . 3\n4 . . . . . . . . 4\n5 . . . . . . . . 5\n6 . . . . . . . . 6\n7 . . . . . . . . 7\n8 . . . . . . . . 8\n9 . . . . . . . . 9\n\"\"\"\n\ndigits = [int(digit) for digit in sign if digit.isdigit()]\nsum_of_digits = sum(digits)\n\nprint(sum_of_digits)",
        "execution": "135",
        "error": "None",
        "extraction": "45",
        "prediction": "45",
        "true_false": false
    },
    "50": {
        "question": "Based on the food web, what would likely happen if the number of large roach would decrease?",
        "image": "images/50.jpg",
        "choices": [
            "The population of steelheads would decrease.",
            "The population of stickleback fry would increase.",
            "The population of predatory insects would increase.",
            "The population of predatory insects would decrease."
        ],
        "unit": null,
        "precision": null,
        "answer": "The population of predatory insects would decrease.",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "50",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 633,
            "img_height": 600,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Based on the food web, what would likely happen if the number of large roach would decrease?\nChoices:\n(A) The population of steelheads would decrease.\n(B) The population of stickleback fry would increase.\n(C) The population of predatory insects would increase.\n(D) The population of predatory insects would decrease.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_web = {\n    'large roach': ['predatory insects'],\n    'predatory insects': ['steelheads', 'stickleback fry'],\n    'steelheads': [],\n    'stickleback fry': []\n}\n\ndef food_web_interaction(food_web, organism):\n    interactions = []\n    for key, value in food_web.items():\n        if organism in value:\n            interactions.append(key)\n    return interactions\n\ninteractions = food_web_interaction(food_web, 'large roach')\n\nif 'predatory insects' in interactions:\n    print(\"The population of predatory insects would increase.\")\nelse:\n    print(\"The population of predatory insects would decrease.\")",
        "execution": "The population of predatory insects would decrease.",
        "error": "None",
        "extraction": "The population of predatory insects would increase.",
        "prediction": "The population of predatory insects would increase.",
        "true_false": false
    },
    "51": {
        "question": "Is the number of gray rubber objects in front of the small yellow aeroplane greater than the number of big cyan matte fighters?",
        "image": "images/51.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "51",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of gray rubber objects in front of the small yellow aeroplane greater than the number of big cyan matte fighters?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "gray_rubber_objects = 5\nbig_cyan_matte_fighters = 3\n\nif gray_rubber_objects > big_cyan_matte_fighters:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "52": {
        "question": "Subtract all big red metallic spheres. Subtract all big brown matte things. How many objects are left?",
        "image": "images/52.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "52",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big red metallic spheres. Subtract all big brown matte things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_red_metallic_spheres = 5\nbig_brown_matte_things = 3\n\nobjects_left = big_red_metallic_spheres - big_brown_matte_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "53": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/53.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "53",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 593,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "54": {
        "question": "In the figure above, the ratio of the length of line AB to the length of line AC is 2 : 5. If AC = 25, what is the length of line AB?",
        "image": "images/54.jpg",
        "choices": [
            "8",
            "10",
            "15",
            "18",
            "20"
        ],
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "54",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 433,
            "img_height": 310,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, the ratio of the length of line AB to the length of line AC is 2 : 5. If AC = 25, what is the length of line AB?\nChoices:\n(A) 8\n(B) 10\n(C) 15\n(D) 18\n(E) 20\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB_length = (2/5) * AC_length\nAB_length = (2/5) * 25\nAB_length = 10\n\nprint(AB_length)",
        "execution": "",
        "error": "name 'AC_length' is not defined",
        "extraction": "10",
        "prediction": "10",
        "true_false": true
    },
    "55": {
        "question": "\u5982\u56fe\uff0c\u4e00\u5757\u76f4\u89d2\u4e09\u89d2\u677f60\u00b0\u7684\u89d2\u7684\u9876\u70b9A\u4e0e\u76f4\u89d2\u9876\u70b9C\u5206\u522b\u5728\u4e24\u5e73\u884c\u7ebfFG\uff0cDE\u4e0a\uff0c\u659c\u8fb9AB\u5e73\u5206\u2220CAG\uff0c\u4ea4\u76f4\u7ebfDE\u4e8e\u70b9H\uff0c\u5219\u2220BCH\u7684\u5927\u5c0f\u4e3a\uff08\uff09",
        "image": "images/55.jpg",
        "choices": [
            "60\u00b0",
            "45\u00b0",
            "30\u00b0",
            "25\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "30\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "55",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 175,
            "img_height": 125,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u4e00\u5757\u76f4\u89d2\u4e09\u89d2\u677f60\u00b0\u7684\u89d2\u7684\u9876\u70b9A\u4e0e\u76f4\u89d2\u9876\u70b9C\u5206\u522b\u5728\u4e24\u5e73\u884c\u7ebfFG\uff0cDE\u4e0a\uff0c\u659c\u8fb9AB\u5e73\u5206\u2220CAG\uff0c\u4ea4\u76f4\u7ebfDE\u4e8e\u70b9H\uff0c\u5219\u2220BCH\u7684\u5927\u5c0f\u4e3a\uff08\uff09\nChoices:\n(A) 60\u00b0\n(B) 45\u00b0\n(C) 30\u00b0\n(D) 25\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BCH():\n    angle_ACG = 60\n    angle_BAC = angle_ACG / 2\n    angle_BCA = 90 - angle_BAC\n    angle_BCH = 180 - angle_BCA\n    return angle_BCH\n\nprint(angle_BCH())",
        "execution": "120.0",
        "error": "None",
        "extraction": "120",
        "prediction": "60\u00b0",
        "true_false": false
    },
    "56": {
        "question": "What is the perimeter of the rectangle?",
        "image": "images/56.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "56",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 202,
            "img_height": 295,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the rectangle?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length = 10\nwidth = 5\n\nperimeter = 2 * (length + width)\nprint(perimeter)",
        "execution": "30",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "57": {
        "question": "Subtract all small balls. Subtract all blue rubber things. How many objects are left?",
        "image": "images/57.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "57",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small balls. Subtract all blue rubber things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_balls = 5\nblue_rubber_things = 3\n\nobjects_left = small_balls - blue_rubber_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "58": {
        "question": "Does Firebrick have the maximum area under the curve?",
        "image": "images/58.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "58",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 760,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Firebrick have the maximum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate x values from 0 to 10\nx = np.linspace(0, 10, 100)\n\n# Define the function for the curve\ndef curve(x):\n    return x**2\n\n# Calculate the y values for the curve\ny = curve(x)\n\n# Plot the curve\nplt.plot(x, y)\n\n# Find the maximum y value\nmax_y = np.max(y)\n\n# Find the x value corresponding to the maximum y value\nmax_x = x[np.argmax(y)]\n\n# Check if Firebrick has the maximum area under the curve\nif max_x == 5:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "59": {
        "question": "As shown in the figure, AB is the diameter of \u2299O, CD is the chord of \u2299O, \u2220ADC = 26.0, then the degree of \u2220CAB is ()",
        "image": "images/59.jpg",
        "choices": [
            "26\u00b0",
            "74\u00b0",
            "64\u00b0",
            "54\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "64\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "59",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 157,
            "img_height": 146,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of \u2299O, CD is the chord of \u2299O, \u2220ADC = 26.0, then the degree of \u2220CAB is ()\nChoices:\n(A) 26\u00b0\n(B) 74\u00b0\n(C) 64\u00b0\n(D) 54\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_ADC):\n    angle_CAB = (180 - angle_ADC) / 2\n    return angle_CAB\n\nangle_ADC = 26.0\nangle_CAB = find_angle(angle_ADC)\nprint(angle_CAB)",
        "execution": "77.0",
        "error": "None",
        "extraction": "64",
        "prediction": "64\u00b0",
        "true_false": true
    },
    "60": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/60.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "22",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "60",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 477,
            "img_height": 381,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "61": {
        "question": "Is Coral the roughest?",
        "image": "images/61.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "61",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 427,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Coral the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "answer = \"no\"\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "62": {
        "question": "\u5982\u56fe\uff0cE\uff0cF\u5206\u522b\u662f\u83f1\u5f62ABCD\u7684\u8fb9AB\uff0cAD\u7684\u4e2d\u70b9\uff0c\u4e14AB\uff1d5\uff0cAC\uff1d6\uff0e\u5219EF\u7684\u957f\u4e3a\uff08\uff09",
        "image": "images/62.jpg",
        "choices": [
            "4",
            "5",
            "5.5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "62",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 160,
            "img_height": 138,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cE\uff0cF\u5206\u522b\u662f\u83f1\u5f62ABCD\u7684\u8fb9AB\uff0cAD\u7684\u4e2d\u70b9\uff0c\u4e14AB\uff1d5\uff0cAC\uff1d6\uff0e\u5219EF\u7684\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 4\n(B) 5\n(C) 5.5\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 5\nAC = 6\n\nEF = (AB + AC) / 2\nprint(EF)",
        "execution": "5.5",
        "error": "None",
        "extraction": "5.5",
        "prediction": "5.5",
        "true_false": false
    },
    "63": {
        "question": "Subtract all red matte cubes. Subtract all small green metal objects. How many objects are left?",
        "image": "images/63.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "63",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all red matte cubes. Subtract all small green metal objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "red_matte_cubes = 10\nsmall_green_metal_objects = 5\n\nobjects_left = red_matte_cubes - small_green_metal_objects\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "64": {
        "question": "The diagrams below show two pure samples of gas in identical closed, rigid containers. Each colored ball represents one gas particle. Both samples have the same number of particles. Compare the average kinetic energies of the particles in each sample. Which sample has the higher temperature?",
        "image": "images/64.jpg",
        "choices": [
            "neither; the samples have the same temperature",
            "sample A",
            "sample B"
        ],
        "unit": null,
        "precision": null,
        "answer": "sample A",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "64",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 550,
            "img_height": 405,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "elementary school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The diagrams below show two pure samples of gas in identical closed, rigid containers. Each colored ball represents one gas particle. Both samples have the same number of particles. Compare the average kinetic energies of the particles in each sample. Which sample has the higher temperature?\nChoices:\n(A) neither; the samples have the same temperature\n(B) sample A\n(C) sample B\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef average_kinetic_energy(temperature, mass):\n    boltzmann_constant = 1.38 * math.pow(10, -23)\n    return (3/2) * boltzmann_constant * temperature / mass\n\nmass_A = 2.0\nmass_B = 3.0\ntemperature_A = 300\ntemperature_B = 400\n\nkinetic_energy_A = average_kinetic_energy(temperature_A, mass_A)\nkinetic_energy_B = average_kinetic_energy(temperature_B, mass_B)\n\nif kinetic_energy_A > kinetic_energy_B:\n    print(\"Sample A has the higher temperature\")\nelif kinetic_energy_A < kinetic_energy_B:\n    print(\"Sample B has the higher temperature\")\nelse:\n    print(\"Neither; the samples have the same temperature\")",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "Neither; the samples have the same temperature",
        "prediction": "neither; the samples have the same temperature",
        "true_false": false
    },
    "65": {
        "question": "is f(3) > 0?",
        "image": "images/65.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "65",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 327,
            "img_height": 325,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: is f(3) > 0?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def f(x):\n    return x**2 - 4*x + 3\n\nresult = f(3) > 0\nif result:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "No",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "66": {
        "question": "Choose the answer for the missing picture.",
        "image": "images/66.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E",
            "F"
        ],
        "unit": null,
        "precision": null,
        "answer": "A",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "66",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 562,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Choose the answer for the missing picture.\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\n(F) F\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import random\n\nchoices = ['A', 'B', 'C', 'D', 'E', 'F']\nmissing_picture = random.choice(choices)\n\nprint(missing_picture)",
        "execution": "E",
        "error": "None",
        "extraction": "A",
        "prediction": "A",
        "true_false": true
    },
    "67": {
        "question": "What is the perimeter of the square?",
        "image": "images/67.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "16",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "67",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 292,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the square?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side_length = 5\nperimeter = 4 * side_length\nprint(perimeter)",
        "execution": "20",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "68": {
        "question": "\u5c06\u4e00\u6839\u957f\u5ea6\u4e3a16cm\u81ea\u7136\u4f38\u76f4\u7684\u5f39\u6027\u76ae\u7b4bAB\u4e24\u7aef\u56fa\u5b9a\u5728\u6c34\u5e73\u7684\u684c\u9762\u4e0a\uff0c\u7136\u540e\u628a\u4e2d\u70b9C\u7ad6\u76f4\u5411\u4e0a\u62c9\u53476cm\u81f3D\u70b9\uff08\u5982\u56fe\uff09\uff0c\u5219\u8be5\u5f39\u6027\u76ae\u7b4b\u88ab\u62c9\u957f\u4e86\uff08\uff09",
        "image": "images/68.jpg",
        "choices": [
            "2cm",
            "4cm",
            "6cm",
            "8cm"
        ],
        "unit": null,
        "precision": null,
        "answer": "4cm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "68",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 252,
            "img_height": 84,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5c06\u4e00\u6839\u957f\u5ea6\u4e3a16cm\u81ea\u7136\u4f38\u76f4\u7684\u5f39\u6027\u76ae\u7b4bAB\u4e24\u7aef\u56fa\u5b9a\u5728\u6c34\u5e73\u7684\u684c\u9762\u4e0a\uff0c\u7136\u540e\u628a\u4e2d\u70b9C\u7ad6\u76f4\u5411\u4e0a\u62c9\u53476cm\u81f3D\u70b9\uff08\u5982\u56fe\uff09\uff0c\u5219\u8be5\u5f39\u6027\u76ae\u7b4b\u88ab\u62c9\u957f\u4e86\uff08\uff09\nChoices:\n(A) 2cm\n(B) 4cm\n(C) 6cm\n(D) 8cm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_AB = 16\ndistance_CD = 6\n\nlength_AD = length_AB + distance_CD\nelongation = length_AD - length_AB\n\nprint(elongation)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6cm",
        "true_false": false
    },
    "69": {
        "question": "Subtract all big matte balls. Subtract all green rubber objects. How many objects are left?",
        "image": "images/69.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "69",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big matte balls. Subtract all green rubber objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_matte_balls = 5\ngreen_rubber_objects = 3\n\nobjects_left = big_matte_balls - green_rubber_objects\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "70": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/70.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "70",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2266,
            "img_height": 2600,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "71": {
        "question": "What is the perimeter of the rectangle?",
        "image": "images/71.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "71",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 187,
            "img_height": 292,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the rectangle?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length = 10\nwidth = 5\n\nperimeter = 2 * (length + width)\nprint(perimeter)",
        "execution": "30",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "72": {
        "question": "A real estate agent drove around the neighborhood and counted the number of houses on each block. How many blocks have exactly 36 houses? (Unit: blocks)",
        "image": "images/72.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "72",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 197,
            "img_height": 136,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A real estate agent drove around the neighborhood and counted the number of houses on each block. How many blocks have exactly 36 houses? (Unit: blocks)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "house_counts = [32, 36, 36, 40, 36, 36, 36, 44, 36, 36]\n\ncount = 0\nfor houses in house_counts:\n    if houses == 36:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "73": {
        "question": "Complete the matrix.",
        "image": "images/73.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E",
            "F"
        ],
        "unit": null,
        "precision": null,
        "answer": "D",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "73",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 387,
            "img_height": 654,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Complete the matrix.\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\n(F) F\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "matrix = [[1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9]]\n\ndef complete_matrix(matrix):\n    for i in range(len(matrix)):\n        for j in range(len(matrix[i])):\n            if matrix[i][j] == 0:\n                return matrix[i][j-1]\n    return \"\"\n\nprint(complete_matrix(matrix))",
        "execution": "",
        "error": "None",
        "extraction": "6",
        "prediction": "A",
        "true_false": false
    },
    "74": {
        "question": "What is the difference of largest and smallest bar?",
        "image": "images/74.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "47.6",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "74",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference of largest and smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def difference_of_largest_and_smallest_bar(bars):\n    largest_bar = max(bars)\n    smallest_bar = min(bars)\n    difference = largest_bar - smallest_bar\n    return difference\n\nbars = [5, 10, 3, 8, 2]\nprint(difference_of_largest_and_smallest_bar(bars))",
        "execution": "8",
        "error": "None",
        "extraction": "7",
        "prediction": "7.0",
        "true_false": false
    },
    "75": {
        "question": "Is Sky Blue less than Web Maroon?",
        "image": "images/75.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "75",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 532,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Sky Blue less than Web Maroon?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sky_blue = \"Sky Blue\"\nweb_maroon = \"Web Maroon\"\n\nif sky_blue < web_maroon:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "76": {
        "question": "What happens to fish if pelicans increase?",
        "image": "images/76.jpg",
        "choices": [
            "decrease",
            "nothing",
            "increase",
            "none of the above"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "76",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 947,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What happens to fish if pelicans increase?\nChoices:\n(A) decrease\n(B) nothing\n(C) increase\n(D) none of the above\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def fish_pelican_relationship(pelican_increase):\n    if pelican_increase:\n        return \"decrease\"\n    else:\n        return \"nothing\"\n\npelican_increase = True\n\nprint(fish_pelican_relationship(pelican_increase))",
        "execution": "decrease",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "77": {
        "question": "Which year showed the largest difference in the data points between the two lines",
        "image": "images/77.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2019",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "77",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which year showed the largest difference in the data points between the two lines\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "data_points_line1 = [10, 15, 20, 25, 30]\ndata_points_line2 = [5, 10, 15, 20, 25]\n\nlargest_difference = 0\nyear_with_largest_difference = 0\n\nfor i in range(len(data_points_line1)):\n    difference = abs(data_points_line1[i] - data_points_line2[i])\n    if difference > largest_difference:\n        largest_difference = difference\n        year_with_largest_difference = i\n\nprint(year_with_largest_difference)",
        "execution": "0",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "78": {
        "question": "Find the missing value.",
        "image": "images/78.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "78",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1062,
            "img_height": 394,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the missing value.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\n# Given values\na = 5\nb = 12\nc = 8\n\n# Missing value\nmissing_value = math.sqrt(b**2 - a**2)\nprint(missing_value)",
        "execution": "10.908712114635714",
        "error": "None",
        "extraction": "13.0",
        "prediction": null,
        "true_false": false
    },
    "79": {
        "question": "As shown in the figure, points A, B, C, and D are on circle O, and point E is on the extended line of AD. If \u2220ABC = 60.0, then the degree of \u2220CDE is ()",
        "image": "images/79.jpg",
        "choices": [
            "30\u00b0",
            "45\u00b0",
            "60\u00b0",
            "70\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "60\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "79",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 123,
            "img_height": 104,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, points A, B, C, and D are on circle O, and point E is on the extended line of AD. If \u2220ABC = 60.0, then the degree of \u2220CDE is ()\nChoices:\n(A) 30\u00b0\n(B) 45\u00b0\n(C) 60\u00b0\n(D) 70\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_CDE(angle_ABC):\n    angle_CDE = 180 - angle_ABC\n    return angle_CDE\n\nangle_ABC = 60.0\nangle_CDE = angle_CDE(angle_ABC)\nprint(angle_CDE)",
        "execution": "120.0",
        "error": "None",
        "extraction": "120",
        "prediction": "30\u00b0",
        "true_false": false
    },
    "80": {
        "question": "According to the food web, what will happen if all the algae died due to pesticides?",
        "image": "images/80.jpg",
        "choices": [
            "Crabs and limpets will decrease",
            "Dolphins will increase",
            "Sea gulls will become extinct",
            "Star fish will increase"
        ],
        "unit": null,
        "precision": null,
        "answer": "Crabs and limpets will decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "80",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 372,
            "img_height": 199,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: According to the food web, what will happen if all the algae died due to pesticides?\nChoices:\n(A) Crabs and limpets will decrease\n(B) Dolphins will increase\n(C) Sea gulls will become extinct\n(D) Star fish will increase\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_web = {\n    'algae': ['crabs', 'limpets'],\n    'crabs': [],\n    'limpets': [],\n    'dolphins': ['crabs'],\n    'sea gulls': ['limpets'],\n    'star fish': ['limpets']\n}\n\ndef impact_of_algae_death(food_web):\n    impact = []\n    for organism, prey in food_web.items():\n        if 'algae' in prey:\n            impact.append(organism)\n    return impact\n\nprint(impact_of_algae_death(food_web))",
        "execution": "[]",
        "error": "None",
        "extraction": "['crabs', 'limpets']",
        "prediction": "Dolphins will increase",
        "true_false": false
    },
    "81": {
        "question": "What is the value of r at theta=3*pi/2?",
        "image": "images/81.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "81",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 616,
            "img_height": 460,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of r at theta=3*pi/2?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ntheta = 3 * math.pi / 2\nr = math.cos(theta)\nprint(r)",
        "execution": "-1.8369701987210297e-16",
        "error": "None",
        "extraction": "-1",
        "prediction": "-1",
        "true_false": true
    },
    "82": {
        "question": "A square is inscribed in a circle of area 18$\\pi$ square units. Find the length of a side of the square.",
        "image": "images/82.jpg",
        "choices": [
            "3",
            "3 \\sqrt 2",
            "6",
            "6 \\sqrt 2"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "82",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 200,
            "img_height": 202,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A square is inscribed in a circle of area 18$\\pi$ square units. Find the length of a side of the square.\nChoices:\n(A) 3\n(B) 3 \\sqrt 2\n(C) 6\n(D) 6 \\sqrt 2\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_side_length(area):\n    radius = math.sqrt(area / math.pi)\n    side_length = 2 * radius / math.sqrt(2)\n    return side_length\n\narea = 18 * math.pi\nside_length = find_side_length(area)\nprint(side_length)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "3.0",
        "prediction": "3",
        "true_false": false
    },
    "83": {
        "question": "Is the number of shiny buss less than the number of matte things?",
        "image": "images/83.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "83",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of shiny buss less than the number of matte things?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shiny_buss = 10\nmatte_things = 15\n\nif shiny_buss < matte_things:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "84": {
        "question": "ABCD is a square. Inscribed Circle center is O. Find the the angle of \u2220AMK. Return the numeric value.",
        "image": "images/84.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "130.9",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "84",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1194,
            "img_height": 1220,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: ABCD is a square. Inscribed Circle center is O. Find the the angle of \u2220AMK. Return the numeric value.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    # Length of the side of the square\n    side_length = 1\n\n    # Radius of the inscribed circle\n    radius = side_length / 2\n\n    # Length of the diagonal of the square\n    diagonal_length = math.sqrt(2) * side_length\n\n    # Length of the segment AM\n    segment_length = diagonal_length / 2\n\n    # Length of the segment MK\n    segment_mk_length = radius\n\n    # Using the law of cosines to find the angle\n    angle = math.degrees(math.acos((segment_length**2 + segment_mk_length**2 - segment_length**2) / (2 * segment_length * segment_mk_length)))\n\n    return angle\n\nprint(find_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "45",
        "prediction": "45.0",
        "true_false": false
    },
    "85": {
        "question": "How many countries have people working for more than 35 hours over the years?",
        "image": "images/85.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "85",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many countries have people working for more than 35 hours over the years?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "countries = {\n    'USA': [40, 38, 42, 37, 39],\n    'China': [35, 36, 37, 38, 39],\n    'Germany': [30, 32, 34, 36, 38],\n    'Japan': [35, 35, 35, 35, 35]\n}\n\ncount = 0\nfor country, hours in countries.items():\n    if all(hour > 35 for hour in hours):\n        count += 1\n\nprint(count)",
        "execution": "1",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "86": {
        "question": "Which model has the highest Acc score when Pretrain Loss is equal to 1.80?",
        "image": "images/86.jpg",
        "choices": [
            "ICL",
            "SFT",
            "SFT 1/8",
            "RFT k=100",
            "RFT k=25",
            "RET k=6",
            "RFT U13B"
        ],
        "unit": null,
        "precision": null,
        "answer": "RFT U13B",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "86",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1734,
            "img_height": 1046,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which model has the highest Acc score when Pretrain Loss is equal to 1.80?\nChoices:\n(A) ICL\n(B) SFT\n(C) SFT 1/8\n(D) RFT k=100\n(E) RFT k=25\n(F) RET k=6\n(G) RFT U13B\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "model_scores = {\n    'ICL': {'Pretrain Loss': 1.80, 'Acc Score': 0.85},\n    'SFT': {'Pretrain Loss': 1.80, 'Acc Score': 0.90},\n    'SFT 1/8': {'Pretrain Loss': 1.80, 'Acc Score': 0.88},\n    'RFT k=100': {'Pretrain Loss': 1.80, 'Acc Score': 0.82},\n    'RFT k=25': {'Pretrain Loss': 1.80, 'Acc Score': 0.87},\n    'RET k=6': {'Pretrain Loss': 1.80, 'Acc Score': 0.84},\n    'RFT U13B': {'Pretrain Loss': 1.80, 'Acc Score': 0.89}\n}\n\nhighest_acc_score = 0\nhighest_acc_model = \"\"\n\nfor model, scores in model_scores.items():\n    if scores['Pretrain Loss'] == 1.80 and scores['Acc Score'] > highest_acc_score:\n        highest_acc_score = scores['Acc Score']\n        highest_acc_model = model\n\nprint(highest_acc_model)",
        "execution": "SFT",
        "error": "None",
        "extraction": "SFT",
        "prediction": "SFT",
        "true_false": false
    },
    "87": {
        "question": "Look at the table. Then answer the question. At a price of $790, is there a shortage or a surplus?'",
        "image": "images/87.jpg",
        "choices": [
            "shortage",
            "surplus"
        ],
        "unit": null,
        "precision": null,
        "answer": "surplus",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "87",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 353,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Look at the table. Then answer the question. At a price of $790, is there a shortage or a surplus?'\nChoices:\n(A) shortage\n(B) surplus\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "price = 790\ndemand = 1000\nsupply = 800\n\nif price > demand:\n    print(\"shortage\")\nelif price < supply:\n    print(\"surplus\")\nelse:\n    print(\"neither shortage nor surplus\")",
        "execution": "surplus",
        "error": "None",
        "extraction": "neither shortage nor surplus",
        "prediction": "shortage",
        "true_false": false
    },
    "88": {
        "question": "A square is tangent to a line at point P in the figure above. What is the value of x?",
        "image": "images/88.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "30",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "88",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 442,
            "img_height": 277,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A square is tangent to a line at point P in the figure above. What is the value of x?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the variables\nx = sp.Symbol('x')\n\n# Define the equation\neq = sp.Eq(x, 90)\n\n# Solve the equation\nsol = sp.solve(eq, x)\n\n# Print the solution\nprint(sol)",
        "execution": "[90]",
        "error": "None",
        "extraction": "90",
        "prediction": "90",
        "true_false": false
    },
    "89": {
        "question": "How many miles per gallon do an average city bus get?",
        "image": "images/89.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "25",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "89",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 384,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many miles per gallon do an average city bus get?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "average_city_bus_mpg = 4.5\nprint(average_city_bus_mpg)",
        "execution": "4.5",
        "error": "None",
        "extraction": "4.5",
        "prediction": null,
        "true_false": false
    },
    "90": {
        "question": "Subtract all yellow matte blocks. Subtract all tiny brown cylinders. How many objects are left?",
        "image": "images/90.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "90",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all yellow matte blocks. Subtract all tiny brown cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_matte_blocks = 5\ntiny_brown_cylinders = 3\n\nobjects_left = yellow_matte_blocks - tiny_brown_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "91": {
        "question": "Is the number of brown suvs less than the number of brown rubber school buss?",
        "image": "images/91.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "91",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of brown suvs less than the number of brown rubber school buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "brown_suv_count = 10\nbrown_rubber_school_bus_count = 5\n\nif brown_suv_count < brown_rubber_school_bus_count:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "92": {
        "question": "Do the windows have a geometric shape that most houses have?",
        "image": "images/92.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "92",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 375,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Do the windows have a geometric shape that most houses have?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def windows_have_geometric_shape(image):\n    geometric_shapes = ['square', 'rectangle', 'circle', 'triangle']\n    for shape in geometric_shapes:\n        if shape in image:\n            return \"Yes\"\n    return \"No\"\n\nimage = \"The house has square windows and a triangular roof.\"\nprint(windows_have_geometric_shape(image))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "93": {
        "question": "What's the computing and wirless total for semiconductor demand in 2014?",
        "image": "images/93.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "197.3",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "93",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What's the computing and wirless total for semiconductor demand in 2014?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "computing_demand_2014 = 5000000\nwireless_demand_2014 = 3000000\n\ntotal_demand_2014 = computing_demand_2014 + wireless_demand_2014\nprint(total_demand_2014)",
        "execution": "8000000",
        "error": "None",
        "extraction": "8000000",
        "prediction": "8000000.0",
        "true_false": false
    },
    "94": {
        "question": "\u5982\u56fe\uff0cD\u4e3a\u25b3ABC\u5185\u4e00\u70b9\uff0cCD\u5e73\u5206\u2220ACB\uff0cBD\u22a5CD\uff0c\u2220A\uff1d\u2220ABD\uff0c\u82e5\u2220DBC\uff1d54\u00b0\uff0c\u5219\u2220A\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/94.jpg",
        "choices": [
            "36\u00b0",
            "44\u00b0",
            "27\u00b0",
            "54\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "27\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "94",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 160,
            "img_height": 74,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cD\u4e3a\u25b3ABC\u5185\u4e00\u70b9\uff0cCD\u5e73\u5206\u2220ACB\uff0cBD\u22a5CD\uff0c\u2220A\uff1d\u2220ABD\uff0c\u82e5\u2220DBC\uff1d54\u00b0\uff0c\u5219\u2220A\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 36\u00b0\n(B) 44\u00b0\n(C) 27\u00b0\n(D) 54\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_DBC = 54\n    angle_ABD = 90\n    angle_BDC = 180 - angle_DBC - angle_ABD\n    angle_A = angle_BDC\n\n    return angle_A\n\nprint(find_angle())",
        "execution": "36",
        "error": "None",
        "extraction": "54",
        "prediction": "54\u00b0",
        "true_false": false
    },
    "95": {
        "question": "As shown in the figure, the straight lines AB and CD intersect at point O, OD bisects \u2220AOE, \u2220BOC = 50.0, then \u2220EOB = ()",
        "image": "images/95.jpg",
        "choices": [
            "50\u00b0",
            "60\u00b0",
            "70\u00b0",
            "80\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "80\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "95",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 162,
            "img_height": 118,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the straight lines AB and CD intersect at point O, OD bisects \u2220AOE, \u2220BOC = 50.0, then \u2220EOB = ()\nChoices:\n(A) 50\u00b0\n(B) 60\u00b0\n(C) 70\u00b0\n(D) 80\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_BOC = 50.0\n    angle_EOB = 180 - angle_BOC\n    return angle_EOB\n\nprint(find_angle())",
        "execution": "130.0",
        "error": "None",
        "extraction": "130.0",
        "prediction": "50\u00b0",
        "true_false": false
    },
    "96": {
        "question": "How many times Dissatisfied more than satisfied?",
        "image": "images/96.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "3.9",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "96",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 186,
            "img_height": 328,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many times Dissatisfied more than satisfied?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "satisfied = 10\ndissatisfied = 25\n\ntimes_more = dissatisfied / satisfied\nprint(times_more)",
        "execution": "2.5",
        "error": "None",
        "extraction": "2.5",
        "prediction": "2.5",
        "true_false": false
    },
    "97": {
        "question": "How many algorithms have accuracies higher than 9?",
        "image": "images/97.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "97",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many algorithms have accuracies higher than 9?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "accuracies = [8, 9, 10, 7, 9, 11, 6, 9, 12, 9]\ncount = 0\n\nfor accuracy in accuracies:\n    if accuracy > 9:\n        count += 1\n\nprint(count)",
        "execution": "3",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "98": {
        "question": "Find the value of the square in the figure.",
        "image": "images/98.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "98",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 900,
            "img_height": 506,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the value of the square in the figure.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_square_value():\n    # Given information\n    a = 3\n    b = 4\n    c = 5\n\n    # Using Pythagorean theorem to find the value of the square\n    square_value = c**2 - (a**2 + b**2)\n    return square_value\n\nprint(find_square_value())",
        "execution": "0",
        "error": "None",
        "extraction": "-7",
        "prediction": "-7",
        "true_false": false
    },
    "99": {
        "question": "Which cat is larger?",
        "image": "images/99.jpg",
        "choices": [
            "white five",
            "white three",
            "white four",
            "white one",
            "white two"
        ],
        "unit": null,
        "precision": null,
        "answer": "white one",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "99",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which cat is larger?\nChoices:\n(A) white five\n(B) white three\n(C) white four\n(D) white one\n(E) white two\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cat_sizes = {\n    'white one': 10,\n    'white two': 8,\n    'white three': 12,\n    'white four': 9,\n    'white five': 11\n}\n\nlargest_cat = max(cat_sizes, key=cat_sizes.get)\nprint(largest_cat)",
        "execution": "white three",
        "error": "None",
        "extraction": "white three",
        "prediction": "white three",
        "true_false": false
    },
    "100": {
        "question": "What is the sum of all the values in the ruling group?",
        "image": "images/100.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "100",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of all the values in the ruling group?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "ruling_group = [10, 15, 20, 25, 30]\n\nsum_of_values = sum(ruling_group)\nprint(sum_of_values)",
        "execution": "100",
        "error": "None",
        "extraction": "105",
        "prediction": "105",
        "true_false": false
    },
    "101": {
        "question": "Which shape is most erect?",
        "image": "images/101.jpg",
        "choices": [
            "Lanceolate",
            "Heart-shaped",
            "Linear",
            "Spatulate"
        ],
        "unit": null,
        "precision": null,
        "answer": "Linear",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "101",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 376,
            "img_height": 1204,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which shape is most erect?\nChoices:\n(A) Lanceolate\n(B) Heart-shaped\n(C) Linear\n(D) Spatulate\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_erect_shape(choices):\n    shapes = {\n        'Lanceolate': 1,\n        'Heart-shaped': 2,\n        'Linear': 3,\n        'Spatulate': 4\n    }\n\n    max_erectness = 0\n    most_erect_shape = \"\"\n\n    for choice in choices:\n        erectness = shapes[choice]\n        if erectness > max_erectness:\n            max_erectness = erectness\n            most_erect_shape = choice\n\n    return most_erect_shape\n\nchoices = ['Lanceolate', 'Heart-shaped', 'Linear', 'Spatulate']\nprint(most_erect_shape(choices))",
        "execution": "Spatulate",
        "error": "None",
        "extraction": "Linear",
        "prediction": "Linear",
        "true_false": true
    },
    "102": {
        "question": "The shape is made of unit squares. What is the area of the shape?",
        "image": "images/102.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "102",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 106,
            "img_height": 156,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The shape is made of unit squares. What is the area of the shape?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shape = [\n    [1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1]\n]\n\narea = 0\nfor row in shape:\n    area += sum(row)\n\nprint(area)",
        "execution": "25",
        "error": "None",
        "extraction": "25",
        "prediction": "25",
        "true_false": false
    },
    "103": {
        "question": "Subtract all small purple matte blocks. Subtract all blocks. How many objects are left?",
        "image": "images/103.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "103",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small purple matte blocks. Subtract all blocks. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_purple_matte_blocks = 5\nall_blocks = 10\n\nobjects_left = all_blocks - small_purple_matte_blocks\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "104": {
        "question": "What is the fraction of females facing the camera?",
        "image": "images/104.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "0.8",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "104",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the fraction of females facing the camera?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_faces = 10\nfemale_faces = 6\n\nfraction_female = female_faces / total_faces\nprint(fraction_female)",
        "execution": "0.6",
        "error": "None",
        "extraction": "0.6",
        "prediction": "0.6",
        "true_false": false
    },
    "105": {
        "question": "Does Dark Violet have the minimum area under the curve?",
        "image": "images/105.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "105",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 727,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Dark Violet have the minimum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nplt.plot(x, y)\nplt.fill_between(x, y, where=(x >= 4) & (x <= 6), color='darkviolet', alpha=0.5)\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Area under the curve')\n\nplt.show()\n\n# The minimum area under the curve can be determined by finding the lowest point of the curve within the shaded region.\n# If the lowest point is within the dark violet shaded region, then the answer is 'yes'. Otherwise, the answer is 'no'.\n\n# Python code to determine if Dark Violet has the minimum area under the curve\nmin_area = np.min(y[(x >= 4) & (x <= 6)])\n\nif min_area == np.min(y):\n    answer = 'yes'\nelse:\n    answer = 'no'\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "106": {
        "question": "How many bars have values smaller than 1?",
        "image": "images/106.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "106",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many bars have values smaller than 1?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_bars(bars):\n    count = 0\n    for bar in bars:\n        if bar < 1:\n            count += 1\n    return count\n\nbars = [0.5, 1.2, 0.8, 1.5, 0.3]\nprint(count_bars(bars))",
        "execution": "3",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "107": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) past six.",
        "image": "images/107.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "107",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) past six.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def time_shown(caption, choices):\n    time_words = {\n        'half': 'half',\n        'quarter': 'quarter',\n        'o\\'clock': 'o\\'clock',\n        'quarter to': 'quarter to',\n        'quarter past': 'quarter past'\n    }\n\n    for choice in choices:\n        if choice in caption:\n            return choice\n    return \"\"\n\nchoices = ['half', 'quarter', 'o\\'clock', 'quarter to', 'quarter past']\ncaption = \"The clock in the image shows that it is quarter past six.\"\n\nprint(time_shown(caption, choices))",
        "execution": "quarter",
        "error": "None",
        "extraction": "quarter past",
        "prediction": "quarter past",
        "true_false": false
    },
    "108": {
        "question": "Find out the average of the bottom two countries ??",
        "image": "images/108.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "51.04",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "108",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find out the average of the bottom two countries ??\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "countries = {\n    'Country A': 10,\n    'Country B': 15,\n    'Country C': 20,\n    'Country D': 25,\n    'Country E': 30\n}\n\nsorted_countries = sorted(countries.items(), key=lambda x: x[1])\naverage = (sorted_countries[0][1] + sorted_countries[1][1]) / 2\nprint(average)",
        "execution": "12.5",
        "error": "None",
        "extraction": "12.5",
        "prediction": "12.5",
        "true_false": false
    },
    "109": {
        "question": "Subtract all tiny balls. Subtract all green metallic things. How many objects are left?",
        "image": "images/109.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "109",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny balls. Subtract all green metallic things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_balls = 5\ngreen_metallic_things = 3\n\nobjects_left = tiny_balls - green_metallic_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "110": {
        "question": "Is the sum of two lowest bar is greater then the largest bar?",
        "image": "images/110.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "110",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the sum of two lowest bar is greater then the largest bar?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def sum_of_two_lowest_bars_greater_than_largest_bar(bar1, bar2, bar3):\n    bars = [bar1, bar2, bar3]\n    bars.sort()\n    if bars[0] + bars[1] > bars[2]:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nprint(sum_of_two_lowest_bars_greater_than_largest_bar(5, 8, 10))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "111": {
        "question": "Subtract all big gray matte things. Subtract all small metallic cylinders. How many objects are left?",
        "image": "images/111.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "111",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big gray matte things. Subtract all small metallic cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_gray_matte_things = 5\nsmall_metallic_cylinders = 3\n\nobjects_left = big_gray_matte_things - small_metallic_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "112": {
        "question": "Is the number of big cyan airliners less than the number of gray shiny utility bikes?",
        "image": "images/112.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "112",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of big cyan airliners less than the number of gray shiny utility bikes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_cyan_airliners = 10\ngray_shiny_utility_bikes = 15\n\nif big_cyan_airliners < gray_shiny_utility_bikes:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "113": {
        "question": "How many baseballs are there?",
        "image": "images/113.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "20",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "113",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 721,
            "img_height": 458,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many baseballs are there?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "baseballs = 10\nprint(baseballs)",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "114": {
        "question": "In the figure, KL is tangent to $\\odot M$ at K. Find the value of x.",
        "image": "images/114.jpg",
        "choices": [
            "6.00",
            "9.45",
            "18.9",
            "37.8"
        ],
        "unit": null,
        "precision": null,
        "answer": "9.45",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "114",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 347,
            "img_height": 273,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure, KL is tangent to $\\odot M$ at K. Find the value of x.\nChoices:\n(A) 6.00\n(B) 9.45\n(C) 18.9\n(D) 37.8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from sympy import symbols, Eq, solve\n\nx = symbols('x')\nangle_eq = Eq(180 - x - 90, x)\nx_value = solve(angle_eq, x)[0]\nprint(x_value)",
        "execution": "45",
        "error": "None",
        "extraction": "37.8",
        "prediction": "37.8",
        "true_false": false
    },
    "115": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/115.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "115",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 826,
            "img_height": 1079,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "116": {
        "question": "Which leaf has the most veins?",
        "image": "images/116.jpg",
        "choices": [
            "Acuminate",
            "Truncate",
            "Mucronate",
            "Acute"
        ],
        "unit": null,
        "precision": null,
        "answer": "Acuminate",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "116",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 350,
            "img_height": 187,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which leaf has the most veins?\nChoices:\n(A) Acuminate\n(B) Truncate\n(C) Mucronate\n(D) Acute\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "vein_counts = {\n    'Acuminate': 10,\n    'Truncate': 5,\n    'Mucronate': 8,\n    'Acute': 7\n}\n\nmax_veins = max(vein_counts.values())\nleaf_with_most_veins = [leaf for leaf, veins in vein_counts.items() if veins == max_veins]\n\nprint(leaf_with_most_veins)",
        "execution": "",
        "error": "name 'max_veins' is not defined",
        "extraction": "['Acuminate']",
        "prediction": "Acuminate",
        "true_false": true
    },
    "117": {
        "question": "What is the range of this function?",
        "image": "images/117.jpg",
        "choices": [
            "[0, 2]",
            "[3, 2]",
            "[2, 4]",
            "[-3, 4]"
        ],
        "unit": null,
        "precision": null,
        "answer": "[0, 2]",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "117",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 460,
            "img_height": 356,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the range of this function?\nChoices:\n(A) [0, 2]\n(B) [3, 2]\n(C) [2, 4]\n(D) [-3, 4]\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def function_range(x):\n    return x**2 - 2*x + 1\n\nx_values = [-3, -2, -1, 0, 1, 2, 3, 4]\ny_values = [function_range(x) for x in x_values]\n\nrange_of_function = [min(y_values), max(y_values)]\nprint(range_of_function)",
        "execution": "",
        "error": "name 'function_range' is not defined",
        "extraction": "[-3, 4]",
        "prediction": "[-3, 4]",
        "true_false": false
    },
    "118": {
        "question": "What is the maximum value of this function?",
        "image": "images/118.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "118",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 296,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the maximum value of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef max_value_function():\n    x = np.linspace(-10, 10, 1000)\n    y = x**2 + 3*x + 2\n    max_value = np.max(y)\n    return max_value\n\nprint(max_value_function())",
        "execution": "",
        "error": "name 'np' is not defined",
        "extraction": "10.0",
        "prediction": null,
        "true_false": false
    },
    "119": {
        "question": "As shown in the figure, P is a point outside \u2299O, PA and PB intersect \u2299O at two points C and D respectively. It is known that the central angles of \u2040AB and \u2040CD are 90.0 and 50.0 respectively, then \u2220P = ()",
        "image": "images/119.jpg",
        "choices": [
            "45\u00b0",
            "40\u00b0",
            "25\u00b0",
            "20\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "20\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "119",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 103,
            "img_height": 165,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, P is a point outside \u2299O, PA and PB intersect \u2299O at two points C and D respectively. It is known that the central angles of \u2040AB and \u2040CD are 90.0 and 50.0 respectively, then \u2220P = ()\nChoices:\n(A) 45\u00b0\n(B) 40\u00b0\n(C) 25\u00b0\n(D) 20\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_AB, angle_CD):\n    angle_AD = 180 - angle_AB\n    angle_P = angle_AD - angle_CD\n    return angle_P\n\nangle_AB = 90.0\nangle_CD = 50.0\n\nangle_P = find_angle(angle_AB, angle_CD)\nprint(angle_P)",
        "execution": "40.0",
        "error": "None",
        "extraction": "25",
        "prediction": "25\u00b0",
        "true_false": false
    },
    "120": {
        "question": "What is the degree of this function?",
        "image": "images/120.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "120",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 312,
            "img_height": 320,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the degree of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\nf = x**3 + 2*x**2 - 5*x + 1\n\ndegree = sp.degree(f, x)\nprint(degree)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "121": {
        "question": "In trying to calculate how much money could be saved by packing lunch, Manny recorded the amount he spent on lunch each day. According to the table, what was the rate of change between Wednesday and Thursday? (Unit: $, per day)",
        "image": "images/121.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "121",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 235,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In trying to calculate how much money could be saved by packing lunch, Manny recorded the amount he spent on lunch each day. According to the table, what was the rate of change between Wednesday and Thursday? (Unit: $, per day)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "wednesday_spending = 10.00\nthursday_spending = 12.00\n\nrate_of_change = thursday_spending - wednesday_spending\nprint(rate_of_change)",
        "execution": "2.0",
        "error": "None",
        "extraction": "2.0",
        "prediction": null,
        "true_false": false
    },
    "122": {
        "question": "Are there fewer yellow regular buss than small yellow metallic school buss?",
        "image": "images/122.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "122",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer yellow regular buss than small yellow metallic school buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_regular_buses = 10\nsmall_yellow_metallic_school_buses = 15\n\nif yellow_regular_buses < small_yellow_metallic_school_buses:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "123": {
        "question": "The diagram represents successive rotations, starting from the top down. Which shape comes next?",
        "image": "images/123.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "D",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "123",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 412,
            "img_height": 579,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The diagram represents successive rotations, starting from the top down. Which shape comes next?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shapes = ['A', 'B', 'C', 'D', 'E']\ncurrent_shape = 'E'\n\nnext_shape_index = (shapes.index(current_shape) + 1) % len(shapes)\nnext_shape = shapes[next_shape_index]\n\nprint(next_shape)",
        "execution": "A",
        "error": "None",
        "extraction": "E",
        "prediction": "E",
        "true_false": false
    },
    "124": {
        "question": "This type of leaf arrangement consists of at least three leaves attached to a node.",
        "image": "images/124.jpg",
        "choices": [
            "Whorled",
            "Simple",
            "Opposite",
            "Alternate"
        ],
        "unit": null,
        "precision": null,
        "answer": "Whorled",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "124",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 576,
            "img_height": 225,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: This type of leaf arrangement consists of at least three leaves attached to a node.\nChoices:\n(A) Whorled\n(B) Simple\n(C) Opposite\n(D) Alternate\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def leaf_arrangement(arrangement):\n    if arrangement == \"Whorled\":\n        return \"A\"\n    elif arrangement == \"Simple\":\n        return \"B\"\n    elif arrangement == \"Opposite\":\n        return \"C\"\n    elif arrangement == \"Alternate\":\n        return \"D\"\n    else:\n        return \"\"\n\narrangement = \"Whorled\"\nprint(leaf_arrangement(arrangement))",
        "execution": "A",
        "error": "None",
        "extraction": "A",
        "prediction": "Whorled",
        "true_false": true
    },
    "125": {
        "question": "What happens if caterpillars decrease?",
        "image": "images/125.jpg",
        "choices": [
            "plants decrease",
            "plants increase",
            "nothing happens",
            "none of the above"
        ],
        "unit": null,
        "precision": null,
        "answer": "plants increase",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "125",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 947,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What happens if caterpillars decrease?\nChoices:\n(A) plants decrease\n(B) plants increase\n(C) nothing happens\n(D) none of the above\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def caterpillar_decrease():\n    return \"plants decrease\"\n\nprint(caterpillar_decrease())",
        "execution": "plants decrease",
        "error": "None",
        "extraction": "plants decrease",
        "prediction": "plants decrease",
        "true_false": false
    },
    "126": {
        "question": "What is the age gap between the leftmost and the rigtmost person?",
        "image": "images/126.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "126",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 623,
            "img_height": 800,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between the leftmost and the rigtmost person? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "leftmost_person_age = 25\nrightmost_person_age = 40\n\nage_gap = rightmost_person_age - leftmost_person_age\nprint(age_gap)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "127": {
        "question": "How much more accurate is the most accurate algorithm compared the least accurate algorithm?",
        "image": "images/127.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "127",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much more accurate is the most accurate algorithm compared the least accurate algorithm?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "most_accurate = 0.95\nleast_accurate = 0.75\n\ndifference = most_accurate - least_accurate\nprint(difference)",
        "execution": "0.19999999999999996",
        "error": "None",
        "extraction": "0.2",
        "prediction": null,
        "true_false": false
    },
    "128": {
        "question": "Subtract all large metal blocks. Subtract all yellow cylinders. How many objects are left?",
        "image": "images/128.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "128",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large metal blocks. Subtract all yellow cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_metal_blocks = 5\nyellow_cylinders = 3\n\nobjects_left = large_metal_blocks - yellow_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "129": {
        "question": "Move the ruler to measure the length of the twig to the nearest inch. The twig is about (_) inches long.",
        "image": "images/129.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "129",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 156,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the twig to the nearest inch. The twig is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "twig_length = 12.5\nnearest_inch = round(twig_length)\nprint(nearest_inch)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "130": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/130.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "130",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1063,
            "img_height": 1403,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "131": {
        "question": "How many bars have value below 40?",
        "image": "images/131.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "131",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many bars have value below 40?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bars = [20, 30, 40, 50, 60, 70, 80, 90, 100]\ncount = 0\n\nfor bar in bars:\n    if bar < 40:\n        count += 1\n\nprint(count)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "132": {
        "question": "\u5982\u56fe\uff0c\u57284\u00d74\u7684\u6b63\u65b9\u5f62\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5c0f\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u5747\u4e3a1\uff0c\u70b9A\uff0cB\uff0cC\u90fd\u5728\u683c\u70b9\u4e0a\uff0cAD\u22a5BC\u4e8eD\uff0c\u5219AD\u7684\u957f\u4e3a\uff08\uff09",
        "image": "images/132.jpg",
        "choices": [
            "1",
            "1.5",
            "2",
            "\\frac{7}{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "132",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 155,
            "img_height": 160,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u57284\u00d74\u7684\u6b63\u65b9\u5f62\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5c0f\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u5747\u4e3a1\uff0c\u70b9A\uff0cB\uff0cC\u90fd\u5728\u683c\u70b9\u4e0a\uff0cAD\u22a5BC\u4e8eD\uff0c\u5219AD\u7684\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 1\n(B) 1.5\n(C) 2\n(D) \\frac{7}{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_AD_length():\n    # The coordinates of points A, B, C\n    A = (0, 0)\n    B = (3, 0)\n    C = (3, 3)\n\n    # Calculate the distance between A and D using the Pythagorean theorem\n    AD_length = ((C[0] - B[0])**2 + (C[1] - B[1])**2)**0.5\n\n    return AD_length\n\nprint(find_AD_length())",
        "execution": "3.0",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "133": {
        "question": "In how many years, is the merchandise exports greater than 0.92 %?",
        "image": "images/133.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "133",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1268,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the merchandise exports greater than 0.92 %?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "merchandise_exports = [0.85, 0.88, 0.92, 0.95, 0.98, 1.02, 1.05, 1.08, 1.12, 1.15]\n\nyears = 0\nfor i in range(len(merchandise_exports)):\n    if merchandise_exports[i] > 0.92:\n        years = i + 1\n        break\n\nprint(years)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": true
    },
    "134": {
        "question": "People can use the engineering-design process to develop solutions to problems. One step in the process is testing if a potential solution meets the requirements of the design.\nThe passage below describes how the engineering-design process was used to test a solution to a problem. Read the passage. Then answer the question below.\n\nCooper was a landscape architect who was hired to design a new city park. The city council wanted the park to have space for outdoor concerts and to have at least 20% of the park shaded by trees. Cooper thought the concert area should be at least 150 meters from the road so traffic noise didn't interrupt the music. He developed three possible designs for the park with the concert area in a different location in each design. Then, he tested each design by measuring the distance between the road and the concert area.\nFigure: studying an architect's design. Which of the following could Cooper's test show?",
        "image": "images/134.jpg",
        "choices": [
            "if at least 20% of the park would be shaded by trees in each design",
            "which design would have the least traffic noise in the concert area",
            "which design would have the greatest distance between the concert area and the road"
        ],
        "unit": null,
        "precision": null,
        "answer": "which design would have the greatest distance between the concert area and the road",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "134",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 302,
            "img_height": 232,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "natural image",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: People can use the engineering-design process to develop solutions to problems. One step in the process is testing if a potential solution meets the requirements of the design.\nThe passage below describes how the engineering-design process was used to test a solution to a problem. Read the passage. Then answer the question below.\n\nCooper was a landscape architect who was hired to design a new city park. The city council wanted the park to have space for outdoor concerts and to have at least 20% of the park shaded by trees. Cooper thought the concert area should be at least 150 meters from the road so traffic noise didn't interrupt the music. He developed three possible designs for the park with the concert area in a different location in each design. Then, he tested each design by measuring the distance between the road and the concert area.\nFigure: studying an architect's design. Which of the following could Cooper's test show?\nChoices:\n(A) if at least 20% of the park would be shaded by trees in each design\n(B) which design would have the least traffic noise in the concert area\n(C) which design would have the greatest distance between the concert area and the road\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def test_designs(designs):\n    distances = []\n    for design in designs:\n        distance = design['distance']\n        distances.append(distance)\n    max_distance = max(distances)\n    return max_distance\n\ndesigns = [\n    {'distance': 100},\n    {'distance': 200},\n    {'distance': 150}\n]\n\nprint(test_designs(designs))",
        "execution": "200",
        "error": "None",
        "extraction": "150",
        "prediction": "if at least 20% of the park would be shaded by trees in each design",
        "true_false": false
    },
    "135": {
        "question": "Is the number of buss that are in front of the big yellow aeroplane less than the number of matte bicycles that are on the right side of the tiny thing?",
        "image": "images/135.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "135",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of buss that are in front of the big yellow aeroplane less than the number of matte bicycles that are on the right side of the tiny thing?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(num_buses, num_bicycles):\n    if num_buses < num_bicycles:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_buses = 5\nnum_bicycles = 3\n\nprint(compare_numbers(num_buses, num_bicycles))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "136": {
        "question": "What is the difference between the highest and the lowest value of blue bar?",
        "image": "images/136.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "64",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "136",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 415,
            "img_height": 443,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between the highest and the lowest value of blue bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blue_bar_values = [10, 15, 8, 12, 20]\ndifference = max(blue_bar_values) - min(blue_bar_values)\nprint(difference)",
        "execution": "12",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "137": {
        "question": "Is the function (f: R to R) injective?",
        "image": "images/137.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "137",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 258,
            "img_height": 291,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the function (f: R to R) injective?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_injective(f):\n    # Create an empty set to store the range of the function\n    range_set = set()\n\n    # Iterate through each element in the domain\n    for x in f:\n        # If the element is already in the range set, the function is not injective\n        if f[x] in range_set:\n            return False\n        # Otherwise, add the element to the range set\n        range_set.add(f[x])\n\n    # If the loop completes without returning False, the function is injective\n    return True\n\n# Example function f: R to R\nf = {1: 2, 2: 3, 3: 4, 4: 5}\n\n# Check if the function is injective\nprint(is_injective(f))",
        "execution": "True",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "138": {
        "question": "Is the sandwich cut in half?",
        "image": "images/138.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "138",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the sandwich cut in half?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_sandwich_cut_in_half(sandwich):\n    if \"cut in half\" in sandwich:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nsandwich = \"The sandwich is cut in half.\"\nprint(is_sandwich_cut_in_half(sandwich))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "139": {
        "question": "Does Indigo have the lowest value?",
        "image": "images/139.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "139",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 543,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Indigo have the lowest value?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "indigo_value = 10\nlowest_value = 5\n\nif indigo_value == lowest_value:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "140": {
        "question": "Which food has the least carbs?",
        "image": "images/140.jpg",
        "choices": [
            "soup",
            "water",
            "sandwich",
            "buns"
        ],
        "unit": null,
        "precision": null,
        "answer": "soup",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "140",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 428,
            "source": "A-OKVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which food has the least carbs?\nChoices:\n(A) soup\n(B) water\n(C) sandwich\n(D) buns\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "carbs = {\n    'soup': 10,\n    'water': 0,\n    'sandwich': 30,\n    'buns': 25\n}\n\nleast_carbs = min(carbs, key=carbs.get)\nprint(least_carbs)",
        "execution": "water",
        "error": "None",
        "extraction": "water",
        "prediction": "water",
        "true_false": false
    },
    "141": {
        "question": "As shown in the figure, AB is a long ladder leaning on the wall, the foot of the ladder B is away from the wall 1.6, the point D on the ladder is away from the wall 1.4, the length of BD is 0.55, then the length of the ladder is ()",
        "image": "images/141.jpg",
        "choices": [
            "3.85\u7c73",
            "4.00\u7c73",
            "4.40\u7c73",
            "4.50\u7c73"
        ],
        "unit": null,
        "precision": null,
        "answer": "4.40\u7c73",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "141",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 78,
            "img_height": 128,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is a long ladder leaning on the wall, the foot of the ladder B is away from the wall 1.6, the point D on the ladder is away from the wall 1.4, the length of BD is 0.55, then the length of the ladder is ()\nChoices:\n(A) 3.85\u7c73\n(B) 4.00\u7c73\n(C) 4.40\u7c73\n(D) 4.50\u7c73\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_ladder_length(foot_distance, point_distance, bd_length):\n    ab_length = math.sqrt((foot_distance + point_distance)**2 + bd_length**2)\n    return ab_length\n\nfoot_distance = 1.6\npoint_distance = 1.4\nbd_length = 0.55\n\nladder_length = find_ladder_length(foot_distance, point_distance, bd_length)\nprint(ladder_length)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "4.40",
        "prediction": "4.40\u7c73",
        "true_false": true
    },
    "142": {
        "question": "Is it split in half?",
        "image": "images/142.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "142",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 425,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is it split in half?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_split_in_half(text):\n    if len(text) % 2 == 0:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ntext = \"Hello\"\nprint(is_split_in_half(text))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "143": {
        "question": "As shown in the figure, in the parallelogram ABCD, CE bisects \u2220BCD and it intersects the AD edge at point E, and DE = 3.0, then the length of AB is ()",
        "image": "images/143.jpg",
        "choices": [
            "1",
            "2",
            "3",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "143",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 204,
            "img_height": 85,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the parallelogram ABCD, CE bisects \u2220BCD and it intersects the AD edge at point E, and DE = 3.0, then the length of AB is ()\nChoices:\n(A) 1\n(B) 2\n(C) 3\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_length_of_AB(DE):\n    # Since CE bisects angle BCD, triangle CDE is isosceles\n    # Therefore, CD = DE = 3.0\n\n    # In parallelogram ABCD, opposite sides are equal\n    # Therefore, AB = CD = 3.0\n\n    return DE\n\nDE = 3.0\nAB = find_length_of_AB(DE)\nprint(AB)",
        "execution": "3.0",
        "error": "None",
        "extraction": "3.0",
        "prediction": "3",
        "true_false": true
    },
    "144": {
        "question": "Natalie buys 4.6 kilograms of turmeric. What is the total cost? (Unit: $)",
        "image": "images/144.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "13.8",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "144",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 210,
            "img_height": 162,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Natalie buys 4.6 kilograms of turmeric. What is the total cost? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "turmeric_price_per_kg = 8.50\nkilograms = 4.6\n\ntotal_cost = turmeric_price_per_kg * kilograms\nprint(total_cost)",
        "execution": "39.099999999999994",
        "error": "None",
        "extraction": "39.1",
        "prediction": "39.1",
        "true_false": false
    },
    "145": {
        "question": "Can you find the missing term?",
        "image": "images/145.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "145",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 900,
            "img_height": 506,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Can you find the missing term?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_missing_term(sequence):\n    n = len(sequence)\n    common_difference = (sequence[-1] - sequence[0]) // n\n    for i in range(1, n):\n        if sequence[i] != sequence[i-1] + common_difference:\n            return sequence[i-1] + common_difference\n    return \"\"\n\nsequence = [2, 4, 6, 10, 12]\nprint(find_missing_term(sequence))",
        "execution": "8",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": true
    },
    "146": {
        "question": "Kimberly's classmates revealed how many science articles they read. What is the range of the numbers?'",
        "image": "images/146.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "146",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 286,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Kimberly's classmates revealed how many science articles they read. What is the range of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "articles_read = [5, 8, 3, 6, 9, 2, 7]\n\nrange_of_numbers = max(articles_read) - min(articles_read)\nprint(range_of_numbers)",
        "execution": "7",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "147": {
        "question": "The diagrams below show two pure samples of gas in identical closed, rigid containers. Each colored ball represents one gas particle. Both samples have the same number of particles. Compare the average kinetic energies of the particles in each sample. Which sample has the higher temperature?",
        "image": "images/147.jpg",
        "choices": [
            "neither; the samples have the same temperature",
            "sample B",
            "sample A"
        ],
        "unit": null,
        "precision": null,
        "answer": "sample B",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "147",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 563,
            "img_height": 405,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The diagrams below show two pure samples of gas in identical closed, rigid containers. Each colored ball represents one gas particle. Both samples have the same number of particles. Compare the average kinetic energies of the particles in each sample. Which sample has the higher temperature?\nChoices:\n(A) neither; the samples have the same temperature\n(B) sample B\n(C) sample A\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_temperature(sample_a, sample_b):\n    total_kinetic_energy_a = sum([particle.mass * particle.velocity**2 for particle in sample_a])\n    total_kinetic_energy_b = sum([particle.mass * particle.velocity**2 for particle in sample_b])\n\n    if total_kinetic_energy_a > total_kinetic_energy_b:\n        return \"sample A\"\n    elif total_kinetic_energy_a < total_kinetic_energy_b:\n        return \"sample B\"\n    else:\n        return \"neither; the samples have the same temperature\"\n\n# Example usage\nclass Particle:\n    def __init__(self, mass, velocity):\n        self.mass = mass\n        self.velocity = velocity\n\nsample_a = [Particle(1, 2), Particle(1, 3), Particle(1, 4)]\nsample_b = [Particle(1, 1), Particle(1, 2), Particle(1, 3)]\n\nprint(compare_temperature(sample_a, sample_b))",
        "execution": "sample A",
        "error": "None",
        "extraction": "sample A",
        "prediction": "sample A",
        "true_false": false
    },
    "148": {
        "question": "Which leaf shape has the smallest base?",
        "image": "images/148.jpg",
        "choices": [
            "Hastate",
            "Cordate",
            "Sagittate",
            "Decurrent"
        ],
        "unit": null,
        "precision": null,
        "answer": "Decurrent",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "148",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 161,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which leaf shape has the smallest base?\nChoices:\n(A) Hastate\n(B) Cordate\n(C) Sagittate\n(D) Decurrent\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def smallest_base_leaf(choices):\n    leaf_shapes = {\n        'Hastate': 5,\n        'Cordate': 3,\n        'Sagittate': 4,\n        'Decurrent': 2\n    }\n\n    smallest_base = float('inf')\n    smallest_base_leaf = \"\"\n\n    for choice in choices:\n        if leaf_shapes[choice] < smallest_base:\n            smallest_base = leaf_shapes[choice]\n            smallest_base_leaf = choice\n\n    return smallest_base_leaf\n\nchoices = ['Hastate', 'Cordate', 'Sagittate', 'Decurrent']\nprint(smallest_base_leaf(choices))",
        "execution": "Decurrent",
        "error": "None",
        "extraction": "Decurrent",
        "prediction": "Decurrent",
        "true_false": true
    },
    "149": {
        "question": "\u5982\u56fe\uff0c\u76f4\u7ebfl1\u2225l2\uff0c\u22201\uff1d50\u00b0\uff0c\u22202\uff1d75\u00b0\uff0c\u5219\u22203\uff1d\uff08\uff09",
        "image": "images/149.jpg",
        "choices": [
            "55\u00b0",
            "60\u00b0",
            "65\u00b0",
            "70\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "55\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "149",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 156,
            "img_height": 93,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u76f4\u7ebfl1\u2225l2\uff0c\u22201\uff1d50\u00b0\uff0c\u22202\uff1d75\u00b0\uff0c\u5219\u22203\uff1d\uff08\uff09\nChoices:\n(A) 55\u00b0\n(B) 60\u00b0\n(C) 65\u00b0\n(D) 70\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nangle1 = 50\nangle2 = 75\n\nangle3 = 180 - angle1 - angle2\nprint(angle3)",
        "execution": "55",
        "error": "None",
        "extraction": "55",
        "prediction": "55\u00b0",
        "true_false": true
    },
    "150": {
        "question": "As shown in the figure, points A, B, and C are three points on \u2299O, and the straight line CD and \u2299O are tangent to point C. If \u2220DCB = 40.0, then the degree of \u2220CAB is ()",
        "image": "images/150.jpg",
        "choices": [
            "40\u00b0",
            "50\u00b0",
            "80\u00b0",
            "100\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "150",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 110,
            "img_height": 144,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, points A, B, and C are three points on \u2299O, and the straight line CD and \u2299O are tangent to point C. If \u2220DCB = 40.0, then the degree of \u2220CAB is ()\nChoices:\n(A) 40\u00b0\n(B) 50\u00b0\n(C) 80\u00b0\n(D) 100\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(DCB):\n    CAB = 180 - DCB\n    return CAB\n\nDCB = 40.0\nCAB = find_angle(DCB)\nprint(CAB)",
        "execution": "140.0",
        "error": "None",
        "extraction": "140",
        "prediction": "40\u00b0",
        "true_false": true
    },
    "151": {
        "question": "When does the function reach its local maximum?",
        "image": "images/151.jpg",
        "choices": [
            "(u1, u2) = (0, 0)",
            "(u1, u2) = (1, 0)",
            "(u1, u2) = (0, 1)",
            "(u1, u2) = (1, 1)"
        ],
        "unit": null,
        "precision": null,
        "answer": "(u1, u2) = (0, 0)",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "151",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 458,
            "img_height": 325,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: When does the function reach its local maximum?\nChoices:\n(A) (u1, u2) = (0, 0)\n(B) (u1, u2) = (1, 0)\n(C) (u1, u2) = (0, 1)\n(D) (u1, u2) = (1, 1)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nu1, u2 = sp.symbols('u1 u2')\nf = u1**2 - 2*u1*u2 + u2**2\n\nlocal_maxima = sp.solve([sp.diff(f, u1), sp.diff(f, u2)], (u1, u2))\nprint(local_maxima)",
        "execution": "{u1: u2}",
        "error": "None",
        "extraction": "[(0, 0)]",
        "prediction": "(u1, u2) = (0, 0)",
        "true_false": true
    },
    "152": {
        "question": "\u5982\u56fe\uff0c\u76f4\u7ebfl1\u2225l2\uff0c\u5c06\u542b30\u00b0\u89d2\u7684\u76f4\u89d2\u4e09\u89d2\u677f\u6309\u5982\u56fe\u65b9\u5f0f\u653e\u7f6e\uff0c\u76f4\u89d2\u9876\u70b9\u5728l2\u4e0a\uff0c\u82e5\u22201\uff1d76\u00b0\uff0c\u5219\u22202\uff1d\uff08\uff09",
        "image": "images/152.jpg",
        "choices": [
            "36\u00b0",
            "45\u00b0",
            "44\u00b0",
            "64\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "44\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "152",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 229,
            "img_height": 208,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u76f4\u7ebfl1\u2225l2\uff0c\u5c06\u542b30\u00b0\u89d2\u7684\u76f4\u89d2\u4e09\u89d2\u677f\u6309\u5982\u56fe\u65b9\u5f0f\u653e\u7f6e\uff0c\u76f4\u89d2\u9876\u70b9\u5728l2\u4e0a\uff0c\u82e5\u22201\uff1d76\u00b0\uff0c\u5219\u22202\uff1d\uff08\uff09\nChoices:\n(A) 36\u00b0\n(B) 45\u00b0\n(C) 44\u00b0\n(D) 64\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nangle_1 = 76\nangle_2 = 180 - angle_1 - 90\nangle_2 = math.degrees(math.atan(math.tan(math.radians(angle_2))))\n\nprint(angle_2)",
        "execution": "14.0",
        "error": "None",
        "extraction": "44",
        "prediction": "44\u00b0",
        "true_false": true
    },
    "153": {
        "question": "What would be impacted by an increase in owls?",
        "image": "images/153.jpg",
        "choices": [
            "sun",
            "grasshoppers",
            "grass",
            "mice"
        ],
        "unit": null,
        "precision": null,
        "answer": "mice",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "153",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 423,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would be impacted by an increase in owls?\nChoices:\n(A) sun\n(B) grasshoppers\n(C) grass\n(D) mice\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def impact_of_owls(increase):\n    if increase:\n        return \"mice\"\n    else:\n        return \"\"\n\nincrease_in_owls = True\nprint(impact_of_owls(increase_in_owls))",
        "execution": "mice",
        "error": "None",
        "extraction": "mice",
        "prediction": "mice",
        "true_false": true
    },
    "154": {
        "question": "Is this an odd function?",
        "image": "images/154.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "154",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1114,
            "img_height": 744,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this an odd function?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_odd_function(f):\n    for x in range(-10, 11):\n        if f(x) + f(-x) != 0:\n            return \"No\"\n    return \"Yes\"\n\n# Example function: f(x) = x^3\ndef f(x):\n    return x**3\n\nprint(is_odd_function(f))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "155": {
        "question": "Does Web Green have the minimum area under the curve?",
        "image": "images/155.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "155",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 601,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Web Green have the minimum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def has_minimum_area(curve_areas):\n    min_area = min(curve_areas)\n    if curve_areas.count(min_area) == 1:\n        return \"yes\"\n    else:\n        return \"no\"\n\ncurve_areas = [5, 3, 7, 3, 2]\nprint(has_minimum_area(curve_areas))",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "156": {
        "question": "What is the limit of the as x approaches 1 from the left side?",
        "image": "images/156.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "156",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 327,
            "img_height": 291,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the limit of the as x approaches 1 from the left side?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nlimit = sp.limit(1/x, x, 1, '-')\nprint(limit)",
        "execution": "1",
        "error": "None",
        "extraction": "-oo",
        "prediction": null,
        "true_false": false
    },
    "157": {
        "question": "What number is shown?",
        "image": "images/157.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9335",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "157",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 637,
            "img_height": 279,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "158": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/158.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "158",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 911,
            "img_height": 685,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "159": {
        "question": "What is the difference between two consecutive major ticks on the Y-axis ?",
        "image": "images/159.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "100",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "159",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1000,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between two consecutive major ticks on the Y-axis ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\n# Generate a sample plot\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 30, 40, 50]\nplt.plot(x, y)\n\n# Get the major ticks on the Y-axis\ny_ticks = plt.gca().get_yticks()\n\n# Calculate the difference between two consecutive major ticks\ndifference = y_ticks[1] - y_ticks[0]\n\nprint(difference)",
        "execution": "20.0",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "160": {
        "question": "Find x.",
        "image": "images/160.jpg",
        "choices": [
            "10",
            "11",
            "12",
            "13"
        ],
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "160",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 270,
            "img_height": 227,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x.\nChoices:\n(A) 10\n(B) 11\n(C) 12\n(D) 13\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x = 2 * 5 + 1\nprint(x)",
        "execution": "11",
        "error": "None",
        "extraction": "11",
        "prediction": "11",
        "true_false": false
    },
    "161": {
        "question": "What is the sum of the two numbers visible in the picture?",
        "image": "images/161.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "71",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "161",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the two numbers visible in the picture?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "num1 = 5\nnum2 = 7\n\nsum = num1 + num2\nprint(sum)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "162": {
        "question": "The bird watcher counted the number of birds in each flock that passed overhead. How many flocks had at least 17 birds but fewer than 33 birds? (Unit: flocks)",
        "image": "images/162.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "162",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 117,
            "img_height": 202,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The bird watcher counted the number of birds in each flock that passed overhead. How many flocks had at least 17 birds but fewer than 33 birds? (Unit: flocks)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "flocks = [15, 20, 25, 30, 35, 40, 45, 50]\ncount = 0\n\nfor flock in flocks:\n    if flock >= 17 and flock < 33:\n        count += 1\n\nprint(count)",
        "execution": "3",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": true
    },
    "163": {
        "question": "What number is shown?",
        "image": "images/163.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7519",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "163",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 637,
            "img_height": 285,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "164": {
        "question": "As shown in the figure, in \u25b1ABCD, CE \u22a5 AB, point E is the foot of perpendicular, if \u2220D = 55.0, then \u2220BCE = ()",
        "image": "images/164.jpg",
        "choices": [
            "55\u00b0",
            "35\u00b0",
            "25\u00b0",
            "30\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "35\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "164",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 161,
            "img_height": 84,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in \u25b1ABCD, CE \u22a5 AB, point E is the foot of perpendicular, if \u2220D = 55.0, then \u2220BCE = ()\nChoices:\n(A) 55\u00b0\n(B) 35\u00b0\n(C) 25\u00b0\n(D) 30\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BCE(angle_D):\n    angle_BCE = 90 - angle_D\n    return angle_BCE\n\nangle_D = 55.0\nangle_BCE = angle_BCE(angle_D)\nprint(angle_BCE)",
        "execution": "35.0",
        "error": "None",
        "extraction": "35",
        "prediction": "35\u00b0",
        "true_false": true
    },
    "165": {
        "question": "Subtract all cyan rubber cylinders. Subtract all tiny shiny cubes. How many objects are left?",
        "image": "images/165.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "165",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all cyan rubber cylinders. Subtract all tiny shiny cubes. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cyan_rubber_cylinders = 5\ntiny_shiny_cubes = 3\n\nobjects_left = cyan_rubber_cylinders - tiny_shiny_cubes\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "166": {
        "question": "Which Shape is missing?",
        "image": "images/166.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E",
            "F"
        ],
        "unit": null,
        "precision": null,
        "answer": "B",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "166",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2028,
            "img_height": 816,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which Shape is missing?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\n(F) F\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shapes = ['A', 'B', 'C', 'D', 'E', 'F']\nmissing_shape = ''\n\nfor shape in shapes:\n    if shape not in ['A', 'B', 'C', 'D', 'E', 'F']:\n        missing_shape = shape\n        break\n\nprint(missing_shape)",
        "execution": "",
        "error": "None",
        "extraction": "F",
        "prediction": "F",
        "true_false": false
    },
    "167": {
        "question": "What is the biggest zero of this function?",
        "image": "images/167.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "167",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1920,
            "img_height": 1920,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the biggest zero of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef find_biggest_zero():\n    coefficients = [1, -5, 6]\n    roots = np.roots(coefficients)\n    biggest_zero = max(roots)\n    return biggest_zero\n\nprint(find_biggest_zero())",
        "execution": "",
        "error": "name 'np' is not defined",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "168": {
        "question": "Given that the Hue-Saturation subspace shown in Fig. Q2 is a perfect circle and that colors A, B and C can be represented as the 3 points shown in the subspace. Which color has the smallest saturation coefficient?",
        "image": "images/168.jpg",
        "choices": [
            "(c)",
            "(a)",
            "(e)",
            "(d)",
            "(b)"
        ],
        "unit": null,
        "precision": null,
        "answer": "(b)",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "168",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 414,
            "img_height": 454,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Given that the Hue-Saturation subspace shown in Fig. Q2 is a perfect circle and that colors A, B and C can be represented as the 3 points shown in the subspace. Which color has the smallest saturation coefficient?\nChoices:\n(A) (c)\n(B) (a)\n(C) (e)\n(D) (d)\n(E) (b)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef calculate_distance(x1, y1, x2, y2):\n    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)\n\ndef find_smallest_saturation_coefficient(colors):\n    smallest_saturation = float('inf')\n    smallest_color = \"\"\n\n    for color in colors:\n        saturation = calculate_distance(0, 0, color[0], color[1])\n        if saturation < smallest_saturation:\n            smallest_saturation = saturation\n            smallest_color = color\n\n    return smallest_color\n\ncolors = [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]\nsmallest_color = find_smallest_saturation_coefficient(colors)\nprint(smallest_color)",
        "execution": "",
        "error": "name 'calculate_distance' is not defined",
        "extraction": "(b)",
        "prediction": "(a)",
        "true_false": false
    },
    "169": {
        "question": "What is the difference between two consecutive major ticks on the Y-axis ?",
        "image": "images/169.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "169",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1049,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between two consecutive major ticks on the Y-axis ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\n# Generate a sample plot\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 30, 40, 50]\nplt.plot(x, y)\n\n# Get the major ticks on the Y-axis\ny_major_ticks = plt.gca().yaxis.get_major_ticks()\n\n# Calculate the difference between two consecutive major ticks\ndifference = y_major_ticks[1].get_loc() - y_major_ticks[0].get_loc()\n\nprint(difference)",
        "execution": "0",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "170": {
        "question": "f(-1) is ____ f(0).",
        "image": "images/170.jpg",
        "choices": [
            "larger than",
            "equal to",
            "smaller than"
        ],
        "unit": null,
        "precision": null,
        "answer": "smaller than",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "170",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 296,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: f(-1) is ____ f(0).\nChoices:\n(A) larger than\n(B) equal to\n(C) smaller than\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_f_values(x):\n    if f(-1) > f(0):\n        return \"larger than\"\n    elif f(-1) == f(0):\n        return \"equal to\"\n    else:\n        return \"smaller than\"\n\nprint(compare_f_values(-1))",
        "execution": "",
        "error": "name 'f' is not defined",
        "extraction": "larger than",
        "prediction": "larger than",
        "true_false": false
    },
    "171": {
        "question": "How many cinnamon rolls are there?",
        "image": "images/171.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "20",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "171",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 467,
            "img_height": 190,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many cinnamon rolls are there?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cinnamon_rolls = 12\nprint(cinnamon_rolls)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "172": {
        "question": "Is Light Seafoam less than Dark Salmon?",
        "image": "images/172.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "172",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 524,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Light Seafoam less than Dark Salmon?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "light_seafoam = (195, 245, 213)\ndark_salmon = (233, 150, 122)\n\nif light_seafoam < dark_salmon:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "173": {
        "question": "Is the number of small rubber buss behind the big green road bike less than the number of suvs that are behind the large brown matte truck?",
        "image": "images/173.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "173",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of small rubber buss behind the big green road bike less than the number of suvs that are behind the large brown matte truck?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_rubber_bus = 5\nbig_green_road_bike = 3\nsuv = 8\nlarge_brown_matte_truck = 6\n\nif small_rubber_bus < suv:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\n\nprint(ans)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "174": {
        "question": "Are there fewer tiny cyan suvs that are behind the aeroplane than cyan utility bikes?",
        "image": "images/174.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "174",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer tiny cyan suvs that are behind the aeroplane than cyan utility bikes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_vehicles(suvs, bikes):\n    if suvs < bikes:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nsuvs_behind_plane = 5\nutility_bikes = 8\n\nprint(compare_vehicles(suvs_behind_plane, utility_bikes))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "175": {
        "question": "What is the sum of accuracies of the algorithm liver for all the datasets?",
        "image": "images/175.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "24",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "175",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of accuracies of the algorithm liver for all the datasets?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "liver_accuracies = {\n    'dataset1': 0.85,\n    'dataset2': 0.92,\n    'dataset3': 0.78,\n    'dataset4': 0.95\n}\n\nsum_accuracies = sum(liver_accuracies.values())\nprint(sum_accuracies)",
        "execution": "3.5",
        "error": "None",
        "extraction": "3.5",
        "prediction": null,
        "true_false": false
    },
    "176": {
        "question": "Find $RS$ if $\\triangle QRS$ is an equilateral triangle.",
        "image": "images/176.jpg",
        "choices": [
            "0.5",
            "1",
            "1.5",
            "2"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "176",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 305,
            "img_height": 292,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $RS$ if $\\triangle QRS$ is an equilateral triangle.\nChoices:\n(A) 0.5\n(B) 1\n(C) 1.5\n(D) 2\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_RS(triangle_side):\n    RS = triangle_side / 2\n    return RS\n\ntriangle_side = 2\nRS = find_RS(triangle_side)\nprint(RS)",
        "execution": "1.0",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "177": {
        "question": "Is the number of brown tandem bikes that are to the left of the small blue matte car greater than the number of tiny blue biplanes?",
        "image": "images/177.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "177",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of brown tandem bikes that are to the left of the small blue matte car greater than the number of tiny blue biplanes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_bikes_planes(brown_tandem_bikes, small_blue_matte_car, tiny_blue_biplanes):\n    if brown_tandem_bikes > small_blue_matte_car:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nbrown_tandem_bikes = 5\nsmall_blue_matte_car = 3\ntiny_blue_biplanes = 2\n\nprint(compare_bikes_planes(brown_tandem_bikes, small_blue_matte_car, tiny_blue_biplanes))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "178": {
        "question": "\u5982\u56fe\uff0c\u70b9A\u3001C\u5728\u2220FBD\u7684\u4e24\u6761\u8fb9BF\u3001BD\u4e0a\uff0cBE\u5e73\u5206\u2220FBD\uff0cCE\u5e73\u5206\u2220ACD\uff0c\u8fde\u63a5AE\uff0c\u82e5\u2220BEC\uff1d35\u00b0\uff0c\u5219\u2220FAE\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/178.jpg",
        "choices": [
            "35\u00b0",
            "45\u00b0",
            "55\u00b0",
            "65\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "55\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "178",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 129,
            "img_height": 99,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u70b9A\u3001C\u5728\u2220FBD\u7684\u4e24\u6761\u8fb9BF\u3001BD\u4e0a\uff0cBE\u5e73\u5206\u2220FBD\uff0cCE\u5e73\u5206\u2220ACD\uff0c\u8fde\u63a5AE\uff0c\u82e5\u2220BEC\uff1d35\u00b0\uff0c\u5219\u2220FAE\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 35\u00b0\n(B) 45\u00b0\n(C) 55\u00b0\n(D) 65\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef solve_angle():\n    angle_BEC = 35\n    angle_BCE = angle_BEC\n    angle_ACE = 180 - angle_BCE\n    angle_ACD = angle_ACE\n    angle_ACE_rad = math.radians(angle_ACE)\n    angle_ACD_rad = math.radians(angle_ACD)\n    angle_FAE_rad = angle_ACE_rad + angle_ACD_rad\n    angle_FAE = math.degrees(angle_FAE_rad)\n    return angle_FAE\n\nprint(solve_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "55",
        "prediction": "55\u00b0",
        "true_false": true
    },
    "179": {
        "question": "\u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0c\u5df2\u77e5AC\uff1d4cm\uff0c\u82e5\u25b3ACD\u7684\u5468\u957f\u4e3a14cm\uff0c\u5219ABCD\u7684\u5468\u957f\u4e3a\uff08\uff09",
        "image": "images/179.jpg",
        "choices": [
            "14cm",
            "28cm",
            "10cm",
            "20cm"
        ],
        "unit": null,
        "precision": null,
        "answer": "20cm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "179",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 157,
            "img_height": 94,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0c\u5df2\u77e5AC\uff1d4cm\uff0c\u82e5\u25b3ACD\u7684\u5468\u957f\u4e3a14cm\uff0c\u5219ABCD\u7684\u5468\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 14cm\n(B) 28cm\n(C) 10cm\n(D) 20cm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AC = 4\nACD_perimeter = 14\n\nABCD_perimeter = ACD_perimeter + 2 * AC\nprint(ABCD_perimeter)",
        "execution": "22",
        "error": "None",
        "extraction": "14",
        "prediction": "14cm",
        "true_false": false
    },
    "180": {
        "question": "Subtract all tiny brown cylinders. Subtract all tiny brown objects. How many objects are left?",
        "image": "images/180.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "180",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny brown cylinders. Subtract all tiny brown objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_brown_cylinders = 5\ntiny_brown_objects = 8\n\nobjects_left = tiny_brown_objects - tiny_brown_cylinders\nprint(objects_left)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "181": {
        "question": "Which option is correct?",
        "image": "images/181.jpg",
        "choices": [
            "A",
            "B",
            "C"
        ],
        "unit": null,
        "precision": null,
        "answer": "C",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "181",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 864,
            "img_height": 332,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which option is correct?\nChoices:\n(A) A\n(B) B\n(C) C\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "option = \"C\"\nprint(option)",
        "execution": "C",
        "error": "None",
        "extraction": "C",
        "prediction": "C",
        "true_false": true
    },
    "182": {
        "question": "Is Web Green greater than Yellow?",
        "image": "images/182.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "182",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 589,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Web Green greater than Yellow?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "web_green = 5\nyellow = 3\n\nif web_green > yellow:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "183": {
        "question": "Subtract all brown cubes. Subtract all gray cylinders. How many objects are left?",
        "image": "images/183.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "183",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all brown cubes. Subtract all gray cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "brown_cubes = 5\ngray_cylinders = 3\n\nobjects_left = brown_cubes - gray_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "184": {
        "question": "How many bars have values smaller than 0?",
        "image": "images/184.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "184",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many bars have values smaller than 0?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_negative_bars(bars):\n    count = 0\n    for bar in bars:\n        if bar < 0:\n            count += 1\n    return count\n\nbars = [1, -2, 3, -4, 5, -6]\nprint(count_negative_bars(bars))",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "185": {
        "question": "An image has the gray level PDF $p_r(r)$ shown in Fig. Q1a. One wants to do histogram specification SO that the processed image will have the specified $p_z(z)$ shown in Fig. Q1b. Can we use intensity mapping function $T: z=1-r$ to achieve the goal?",
        "image": "images/185.jpg",
        "choices": [
            "True",
            "False"
        ],
        "unit": null,
        "precision": null,
        "answer": "False",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "185",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 724,
            "img_height": 376,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: An image has the gray level PDF $p_r(r)$ shown in Fig. Q1a. One wants to do histogram specification SO that the processed image will have the specified $p_z(z)$ shown in Fig. Q1b. Can we use intensity mapping function $T: z=1-r$ to achieve the goal?\nChoices:\n(A) True\n(B) False\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\ndef histogram_specification(pr, pz):\n    r = range(len(pr))\n    z = [1 - i for i in r]\n    \n    plt.plot(r, pr, label='pr(r)')\n    plt.plot(z, pz, label='pz(z)')\n    plt.xlabel('Intensity')\n    plt.ylabel('Probability')\n    plt.legend()\n    plt.show()\n    \n    return z == r[::-1]\n\npr = [0.1, 0.2, 0.3, 0.4]\npz = [0.4, 0.3, 0.2, 0.1]\n\nprint(histogram_specification(pr, pz))",
        "execution": "",
        "error": "name 'plt' is not defined",
        "extraction": "False",
        "prediction": "False",
        "true_false": true
    },
    "186": {
        "question": "As shown in the figure, CD is a plane mirror, the light is emitted from point A, reflected by point E on CD, and irradiated to point B. If the incident angle is \u03b1, AC \u22a5 CD, BD \u22a5 CD, the feet of perpendicular are C, D, and AC = 3.0, BD = 6.0, CD = 10.0, then the length of the line segment ED is ()",
        "image": "images/186.jpg",
        "choices": [
            "\\frac{20}{3}",
            "\\frac{10}{3}",
            "7",
            "\\frac{14}{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{20}{3}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "186",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 183,
            "img_height": 112,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, CD is a plane mirror, the light is emitted from point A, reflected by point E on CD, and irradiated to point B. If the incident angle is \u03b1, AC \u22a5 CD, BD \u22a5 CD, the feet of perpendicular are C, D, and AC = 3.0, BD = 6.0, CD = 10.0, then the length of the line segment ED is ()\nChoices:\n(A) \\frac{20}{3}\n(B) \\frac{10}{3}\n(C) 7\n(D) \\frac{14}{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef length_of_ED(AC, BD, CD):\n    # Calculate the angle of incidence\n    alpha = math.atan(AC / CD)\n    \n    # Calculate the angle of reflection\n    beta = math.pi - alpha\n    \n    # Calculate the length of ED using the law of sines\n    ED = (BD * math.sin(beta)) / math.sin(math.pi - alpha - beta)\n    \n    return ED\n\nAC = 3.0\nBD = 6.0\nCD = 10.0\n\nlength = length_of_ED(AC, BD, CD)\nprint(length)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "10/3",
        "prediction": "7",
        "true_false": false
    },
    "187": {
        "question": "What number is shown?",
        "image": "images/187.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9015",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "187",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 634,
            "img_height": 279,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "188": {
        "question": "How many methods in the table achieve an A-847 score higher than 20.0?",
        "image": "images/188.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "188",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2226,
            "img_height": 634,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many methods in the table achieve an A-847 score higher than 20.0?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "table = {\n    'method1': {'score': 15.0},\n    'method2': {'score': 25.0},\n    'method3': {'score': 18.0},\n    'method4': {'score': 22.0},\n    'method5': {'score': 19.0},\n    'method6': {'score': 21.0},\n}\n\ncount = 0\nfor method in table:\n    if table[method]['score'] > 20.0:\n        count += 1\n\nprint(count)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "189": {
        "question": "What is the lowest accuracy reported in the whole chart?",
        "image": "images/189.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "189",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the lowest accuracy reported in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'Model A': {\n        'Accuracy': 0.85,\n        'Precision': 0.90,\n        'Recall': 0.80\n    },\n    'Model B': {\n        'Accuracy': 0.92,\n        'Precision': 0.88,\n        'Recall': 0.95\n    },\n    'Model C': {\n        'Accuracy': 0.78,\n        'Precision': 0.85,\n        'Recall': 0.82\n    }\n}\n\nlowest_accuracy = min(chart.values(), key=lambda x: x['Accuracy'])['Accuracy']\nprint(lowest_accuracy)",
        "execution": "0.78",
        "error": "None",
        "extraction": "0.78",
        "prediction": null,
        "true_false": false
    },
    "190": {
        "question": "Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.",
        "image": "images/190.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "190",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 132,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "nail_length = 5.75\nnearest_inch = round(nail_length)\nprint(nearest_inch)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "191": {
        "question": "In how many years, is the volume of the air carriers in Ethiopia greater than the average volume of the air carriers in Ethiopia taken over all years ?",
        "image": "images/191.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "191",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1116,
            "img_height": 700,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the volume of the air carriers in Ethiopia greater than the average volume of the air carriers in Ethiopia taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_than_average(volumes):\n    average_volume = sum(volumes) / len(volumes)\n    years = 0\n    total_volume = 0\n\n    while total_volume <= average_volume:\n        total_volume += volumes[years]\n        years += 1\n\n    return years\n\nvolumes = [100, 200, 300, 400, 500]\nprint(years_greater_than_average(volumes))",
        "execution": "3",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "192": {
        "question": "As shown in the figure, the diameter CD of \u2299O crosses the midpoint G of chord EF, \u2220DCF = 20.0, then \u2220EOD is equal to ()",
        "image": "images/192.jpg",
        "choices": [
            "10\u00b0",
            "20\u00b0",
            "40\u00b0",
            "80\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "192",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 101,
            "img_height": 127,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the diameter CD of \u2299O crosses the midpoint G of chord EF, \u2220DCF = 20.0, then \u2220EOD is equal to ()\nChoices:\n(A) 10\u00b0\n(B) 20\u00b0\n(C) 40\u00b0\n(D) 80\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(dcf_angle):\n    # Calculate the angle EOD using the angle DCF\n    eod_angle = 180 - dcf_angle\n\n    return eod_angle\n\ndcf_angle = 20.0\neod_angle = find_angle(dcf_angle)\nprint(eod_angle)",
        "execution": "160.0",
        "error": "None",
        "extraction": "160",
        "prediction": "10\u00b0",
        "true_false": false
    },
    "193": {
        "question": "Subtract all red things. Subtract all cylinders. How many objects are left?",
        "image": "images/193.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "193",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all red things. Subtract all cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "objects = ['red apple', 'blue car', 'red ball', 'green tree', 'yellow banana', 'red cylinder', 'blue book', 'red cup', 'green grass', 'red cylinder']\n\n# Subtract all red things\nobjects = [obj for obj in objects if 'red' not in obj]\n\n# Subtract all cylinders\nobjects = [obj for obj in objects if 'cylinder' not in obj]\n\n# Count the remaining objects\ncount = len(objects)\nprint(count)",
        "execution": "5",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "194": {
        "question": "On average, how many people can commute on this vehicle?",
        "image": "images/194.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "50",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "194",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 408,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: On average, how many people can commute on this vehicle?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_capacity = 150\naverage_capacity = total_capacity / 2\nprint(average_capacity)",
        "execution": "75.0",
        "error": "None",
        "extraction": "75",
        "prediction": "75",
        "true_false": false
    },
    "195": {
        "question": "\u5982\u56fe\uff0cAB\u662f\u2299O\u7684\u76f4\u5f84\uff0cC\uff0cD\u4e24\u70b9\u5728\u2299O\u4e0a\uff0c\u2220BCD\uff1d25\u00b0\uff0c\u5219\u2220AOD\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/195.jpg",
        "choices": [
            "120\u00b0",
            "125\u00b0",
            "130\u00b0",
            "135\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "130\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "195",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 110,
            "img_height": 95,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAB\u662f\u2299O\u7684\u76f4\u5f84\uff0cC\uff0cD\u4e24\u70b9\u5728\u2299O\u4e0a\uff0c\u2220BCD\uff1d25\u00b0\uff0c\u5219\u2220AOD\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 120\u00b0\n(B) 125\u00b0\n(C) 130\u00b0\n(D) 135\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_BCD = 25\n    angle_AOD = 180 - angle_BCD\n    return angle_AOD\n\nprint(find_angle())",
        "execution": "155",
        "error": "None",
        "extraction": "155",
        "prediction": "125\u00b0",
        "true_false": false
    },
    "196": {
        "question": "\u5982\u56fe\u6240\u793a\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u5df2\u77e5\u70b9D\uff0cE\uff0cF\u5206\u522b\u4e3a\u8fb9BC\uff0cAD\uff0cCE\u7684\u4e2d\u70b9\uff0c\u4e14S\u25b3ABC\uff1d4cm2\uff0c\u5219S\u25b3DEF\u7b49\u4e8e\uff08\uff09",
        "image": "images/196.jpg",
        "choices": [
            "2cm2",
            "1cm2",
            "0.5cm2",
            "0.25cm2"
        ],
        "unit": null,
        "precision": null,
        "answer": "0.5cm2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "196",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 110,
            "img_height": 81,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\u6240\u793a\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u5df2\u77e5\u70b9D\uff0cE\uff0cF\u5206\u522b\u4e3a\u8fb9BC\uff0cAD\uff0cCE\u7684\u4e2d\u70b9\uff0c\u4e14S\u25b3ABC\uff1d4cm2\uff0c\u5219S\u25b3DEF\u7b49\u4e8e\uff08\uff09\nChoices:\n(A) 2cm2\n(B) 1cm2\n(C) 0.5cm2\n(D) 0.25cm2\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def triangle_area(base, height):\n    return 0.5 * base * height\n\ndef triangle_area_ratio(area1, area2):\n    return area2 / area1\n\narea_ABC = 4\narea_DEF = triangle_area_ratio(area_ABC, 0.25)\n\nchoices = ['2cm2', '1cm2', '0.5cm2', '0.25cm2']\nanswer = \"\"\n\nfor choice in choices:\n    if choice.startswith(str(area_DEF)):\n        answer = choice\n        break\n\nprint(answer)",
        "execution": "",
        "error": "None",
        "extraction": "0.25cm2",
        "prediction": "0.25cm2",
        "true_false": false
    },
    "197": {
        "question": "How many sequences have negative Influence Scores?",
        "image": "images/197.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "197",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1766,
            "img_height": 772,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many sequences have negative Influence Scores?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sequences = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10]\ncount = 0\n\nfor sequence in sequences:\n    if sequence < 0:\n        count += 1\n\nprint(count)",
        "execution": "5",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "198": {
        "question": "Calculate the missing value.",
        "image": "images/198.jpg",
        "choices": [
            "1",
            "2",
            "3",
            "4"
        ],
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "198",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 890,
            "img_height": 756,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Calculate the missing value.\nChoices:\n(A) 1\n(B) 2\n(C) 3\n(D) 4\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "missing_value = 10 - 3 - 4\nprint(missing_value)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "199": {
        "question": "Figure 23-42 is a section of a conducting rod of radius $R_1=1.30 \\mathrm{~mm}$ and length $L=$ $11.00 \\mathrm{~m}$ inside a thin-walled coaxial conducting cylindrical shell of radius $R_2=10.0 R_1$ and the (same) length $L$. The net charge on the rod is $Q_1=+3.40 \\times 10^{-12} \\mathrm{C}$; that on the shell is $Q_2=-2.00 Q_1$. What is the magnitude $E$ of the electric field at radial distance $r=2.00 R_2$?",
        "image": "images/199.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.21",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "199",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 262,
            "img_height": 303,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "arithmetic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Figure 23-42 is a section of a conducting rod of radius $R_1=1.30 \\mathrm{~mm}$ and length $L=$ $11.00 \\mathrm{~m}$ inside a thin-walled coaxial conducting cylindrical shell of radius $R_2=10.0 R_1$ and the (same) length $L$. The net charge on the rod is $Q_1=+3.40 \\times 10^{-12} \\mathrm{C}$; that on the shell is $Q_2=-2.00 Q_1$. What is the magnitude $E$ of the electric field at radial distance $r=2.00 R_2$?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef electric_field(R1, L, Q1, Q2, r):\n    R2 = 10 * R1\n    k = 9 * 10**9\n\n    E1 = k * Q1 / (R1**2)\n    E2 = k * Q2 / (R2**2)\n\n    if r <= R1:\n        E = E1\n    elif r >= R2:\n        E = E2\n    else:\n        E = E1 * (R2 - r) / (R2 - R1) + E2 * (r - R1) / (R2 - R1)\n\n    return E\n\nR1 = 1.30 * 10**-3\nL = 11.00\nQ1 = 3.40 * 10**-12\nQ2 = -2.00 * Q1\nr = 2.00 * 10 * R1\n\nE = electric_field(R1, L, Q1, Q2, r)\nprint(E)",
        "execution": "-362.13017751479276",
        "error": "None",
        "extraction": "1.8e+06",
        "prediction": "1800000.0",
        "true_false": false
    },
    "200": {
        "question": "Is Light Sky Blue the high median?",
        "image": "images/200.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "200",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 404,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Light Sky Blue the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "high_median = \"Light Sky Blue\"\n\nif high_median == \"Light Sky Blue\":\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "201": {
        "question": "What is the sum of all the values in the border group?",
        "image": "images/201.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "19",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "201",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of all the values in the border group?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "border_group = [10, 15, 20, 25, 30]\n\nsum_of_values = sum(border_group)\nprint(sum_of_values)",
        "execution": "100",
        "error": "None",
        "extraction": "100",
        "prediction": "100",
        "true_false": false
    },
    "202": {
        "question": "What is the value of the smallest bar?",
        "image": "images/202.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "202",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def smallest_bar(bars):\n    smallest = float('inf')\n    for bar in bars:\n        if bar < smallest:\n            smallest = bar\n    return smallest\n\nbars = [5, 3, 8, 2, 6]\nprint(smallest_bar(bars))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "203": {
        "question": "\u5982\u56fe\uff0c\u57285\u00d74\u7684\u6b63\u65b9\u5f62\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5c0f\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u90fd\u662f1\uff0c\u25b3ABC\u7684\u9876\u70b9\u90fd\u5728\u8fd9\u4e9b\u5c0f\u6b63\u65b9\u5f62\u7684\u9876\u70b9\u4e0a\uff0c\u5219tan\u2220BAC\u7684\u503c\u4e3a\uff08\uff09",
        "image": "images/203.jpg",
        "choices": [
            "\\frac{4}{3}",
            "0.75",
            "0.6",
            "0.8"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{4}{3}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "203",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 172,
            "img_height": 151,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u57285\u00d74\u7684\u6b63\u65b9\u5f62\u7f51\u683c\u4e2d\uff0c\u6bcf\u4e2a\u5c0f\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u90fd\u662f1\uff0c\u25b3ABC\u7684\u9876\u70b9\u90fd\u5728\u8fd9\u4e9b\u5c0f\u6b63\u65b9\u5f62\u7684\u9876\u70b9\u4e0a\uff0c\u5219tan\u2220BAC\u7684\u503c\u4e3a\uff08\uff09\nChoices:\n(A) \\frac{4}{3}\n(B) 0.75\n(C) 0.6\n(D) 0.8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_tan_BAC():\n    # Define the coordinates of the points A, B, and C\n    A = (0, 0)\n    B = (4, 0)\n    C = (0, 3)\n\n    # Calculate the lengths of the sides of the triangle\n    AB = math.sqrt((B[0] - A[0])**2 + (B[1] - A[1])**2)\n    AC = math.sqrt((C[0] - A[0])**2 + (C[1] - A[1])**2)\n\n    # Calculate the tangent of angle BAC\n    tan_BAC = AC / AB\n\n    return tan_BAC\n\nprint(find_tan_BAC())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "0.75",
        "prediction": "0.75",
        "true_false": false
    },
    "204": {
        "question": "\u0627\u0632 \u0633\u0645\u062a \u0631\u0627\u0633\u062a \u062a\u0635\u0648\u06cc\u0631 \u062f\u0631\u0628 \u062f\u0648\u0645 \u0686\u0646\u062f \u0634\u06cc\u0634\u0647 \u0628\u062f\u0648\u0646 \u0631\u0646\u06af \u062f\u0627\u0631\u0647\u061f",
        "image": "images/204.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "204",
        "metadata": {
            "split": "testmini",
            "language": "persian",
            "img_width": 564,
            "img_height": 376,
            "source": "ParsVQA-Caps",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u0627\u0632 \u0633\u0645\u062a \u0631\u0627\u0633\u062a \u062a\u0635\u0648\u06cc\u0631 \u062f\u0631\u0628 \u062f\u0648\u0645 \u0686\u0646\u062f \u0634\u06cc\u0634\u0647 \u0628\u062f\u0648\u0646 \u0631\u0646\u06af \u062f\u0627\u0631\u0647\u061f\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "image = [\n    ['window', 'window', 'door', 'door', 'door'],\n    ['window', 'window', 'window', 'window', 'door'],\n    ['window', 'window', 'window', 'window', 'door'],\n    ['window', 'window', 'window', 'window', 'door'],\n    ['window', 'window', 'window', 'window', 'door']\n]\n\ncount = 0\nfor row in image:\n    if row[-2] == 'window':\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "205": {
        "question": "A statistician analyzed the number of runs scored by players last season. How many players scored more than 2 runs last season?'",
        "image": "images/205.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "24",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "205",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 351,
            "img_height": 190,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A statistician analyzed the number of runs scored by players last season. How many players scored more than 2 runs last season?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "runs_scored = [1, 3, 2, 4, 0, 2, 5, 2, 1, 3]\ncount = 0\n\nfor runs in runs_scored:\n    if runs > 2:\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "206": {
        "question": "Find the scale factor from $Q$ to $Q'$.",
        "image": "images/206.jpg",
        "choices": [
            "2",
            "3",
            "4",
            "5"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "206",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 731,
            "img_height": 611,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the scale factor from $Q$ to $Q'$.\nChoices:\n(A) 2\n(B) 3\n(C) 4\n(D) 5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def scale_factor(Q, Q_prime):\n    scale_factor = Q_prime / Q\n    return scale_factor\n\nQ = 2\nQ_prime = 8\n\nprint(scale_factor(Q, Q_prime))",
        "execution": "4.0",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "207": {
        "question": "What is the sum of the accuracies of the algorithms magic and secure?",
        "image": "images/207.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "207",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the accuracies of the algorithms magic and secure?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "magic_accuracy = 0.85\nsecure_accuracy = 0.92\n\nsum_accuracy = magic_accuracy + secure_accuracy\nprint(sum_accuracy)",
        "execution": "1.77",
        "error": "None",
        "extraction": "1. 13\n2. 0.6\n3. 1.45\n4. [2007, 2008]\n5. B\n6. 13.0\n7. Tokyo\n8. 1.77",
        "prediction": null,
        "true_false": false
    },
    "208": {
        "question": "What is the age gap between the leftmost and the rigtmost person?",
        "image": "images/208.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "208",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 300,
            "img_height": 195,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between the leftmost and the rigtmost person? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "leftmost_person_age = 25\nrightmost_person_age = 40\n\nage_gap = rightmost_person_age - leftmost_person_age\nprint(age_gap)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "209": {
        "question": "What is the highest value in black line chart ?",
        "image": "images/209.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "28.3",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "209",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest value in black line chart ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "black_line_chart = [10, 15, 20, 25, 30, 35, 40, 45, 50]\n\nhighest_value = max(black_line_chart)\nprint(highest_value)",
        "execution": "50",
        "error": "None",
        "extraction": "50",
        "prediction": "50.0",
        "true_false": false
    },
    "210": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/210.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "210",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 493,
            "img_height": 370,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "211": {
        "question": "How many algorithms have accuracies higher than 2?",
        "image": "images/211.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "211",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many algorithms have accuracies higher than 2?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "accuracies = [3, 4, 1, 5, 2, 6]\ncount = 0\n\nfor accuracy in accuracies:\n    if accuracy > 2:\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "212": {
        "question": "Is Cornflower the minimum?",
        "image": "images/212.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "212",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 403,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Cornflower the minimum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_minimum(color_list):\n    if \"Cornflower\" in color_list:\n        return \"yes\"\n    else:\n        return \"no\"\n\ncolor_list = [\"Cornflower\", \"Lavender\", \"Sky Blue\", \"Periwinkle\"]\nprint(is_minimum(color_list))",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "213": {
        "question": "In which year there was lowest per capita real gross domestic product of ohio?",
        "image": "images/213.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2001",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "213",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In which year there was lowest per capita real gross domestic product of ohio?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Read the data from a CSV file\ndata = pd.read_csv('ohio_gdp.csv')\n\n# Find the year with the lowest per capita real GDP\nlowest_gdp = data['Per Capita Real GDP'].min()\nlowest_year = data[data['Per Capita Real GDP'] == lowest_gdp]['Year'].values[0]\n\nprint(lowest_year)",
        "execution": "",
        "error": "[Errno 2] No such file or directory: 'ohio_gdp.csv'",
        "extraction": "2010",
        "prediction": "2010",
        "true_false": false
    },
    "214": {
        "question": "In how many years, is the percentage of amount earned from merchandise imports in Canada greater than the average percentage of amount earned from merchandise imports in Canada taken over all years ?",
        "image": "images/214.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "214",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1109,
            "img_height": 700,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the percentage of amount earned from merchandise imports in Canada greater than the average percentage of amount earned from merchandise imports in Canada taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Assuming we have a dataframe called 'data' with columns 'Year' and 'Percentage'\ndata = pd.read_csv('data.csv')\n\n# Calculate the average percentage of amount earned from merchandise imports in Canada\naverage_percentage = data['Percentage'].mean()\n\n# Find the years where the percentage is greater than the average\nyears_greater_than_average = data[data['Percentage'] > average_percentage]['Year']\n\n# Calculate the number of years\nnum_years = len(years_greater_than_average)\n\nprint(num_years)",
        "execution": "",
        "error": "[Errno 2] No such file or directory: 'data.csv'",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "215": {
        "question": "Layla went on a camping trip and logged the number of miles she hiked each day. What is the range of the numbers?'",
        "image": "images/215.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "215",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 212,
            "img_height": 249,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Layla went on a camping trip and logged the number of miles she hiked each day. What is the range of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "miles_hiked = [5, 8, 3, 10, 6, 7, 9]\nrange_of_miles = max(miles_hiked) - min(miles_hiked)\nprint(range_of_miles)",
        "execution": "7",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "216": {
        "question": "What percentage of people like the most preferred object in the whole chart?",
        "image": "images/216.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "90",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "216",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percentage of people like the most preferred object in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def percentage_of_most_preferred(chart):\n    max_count = max(chart.values())\n    total_count = sum(chart.values())\n    percentage = (max_count / total_count) * 100\n    return percentage\n\nchart = {\n    'Object A': 20,\n    'Object B': 15,\n    'Object C': 10,\n    'Object D': 25,\n    'Object E': 30\n}\n\nprint(percentage_of_most_preferred(chart))",
        "execution": "30.0",
        "error": "None",
        "extraction": "85.0",
        "prediction": null,
        "true_false": false
    },
    "217": {
        "question": "What is the degree of this function?",
        "image": "images/217.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "217",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 304,
            "img_height": 202,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the degree of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\nf = x**3 + 2*x**2 - 5*x + 1\n\ndegree = sp.degree(f, x)\nprint(degree)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "218": {
        "question": "Subtract all large red rubber blocks. Subtract all tiny red matte objects. How many objects are left?",
        "image": "images/218.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "218",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large red rubber blocks. Subtract all tiny red matte objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_red_rubber_blocks = 10\ntiny_red_matte_objects = 5\n\nobjects_left = large_red_rubber_blocks - tiny_red_matte_objects\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "219": {
        "question": "What is the value of the smallest bar?",
        "image": "images/219.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "219",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def smallest_bar(bars):\n    smallest = float('inf')\n    for bar in bars:\n        if bar < smallest:\n            smallest = bar\n    return smallest\n\nbars = [5, 3, 8, 2, 6]\nprint(smallest_bar(bars))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "220": {
        "question": "As shown in the figure, \u2299O is the circumscribed circle of the quadrilateral ABCD, if \u2220O = 110.0, then the degree of \u2220C is ()",
        "image": "images/220.jpg",
        "choices": [
            "125\u00b0",
            "120\u00b0",
            "105\u00b0",
            "90\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "125\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "220",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 124,
            "img_height": 128,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, \u2299O is the circumscribed circle of the quadrilateral ABCD, if \u2220O = 110.0, then the degree of \u2220C is ()\nChoices:\n(A) 125\u00b0\n(B) 120\u00b0\n(C) 105\u00b0\n(D) 90\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_O):\n    angle_C = 360 - angle_O\n    return angle_C\n\nangle_O = 110.0\nangle_C = find_angle(angle_O)\nprint(angle_C)",
        "execution": "250.0",
        "error": "None",
        "extraction": "105",
        "prediction": "105\u00b0",
        "true_false": false
    },
    "221": {
        "question": "As shown in the figure, A, B, C are three points on \u2299O, \u2220ACB = 25.0, then the degree of \u2220BAO is ()",
        "image": "images/221.jpg",
        "choices": [
            "50\u00b0",
            "55\u00b0",
            "60\u00b0",
            "65\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "65\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "221",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 102,
            "img_height": 108,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, A, B, C are three points on \u2299O, \u2220ACB = 25.0, then the degree of \u2220BAO is ()\nChoices:\n(A) 50\u00b0\n(B) 55\u00b0\n(C) 60\u00b0\n(D) 65\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BAO(angle_CAB):\n    angle_BAO = 180 - angle_CAB\n    return angle_BAO\n\nangle_CAB = 25.0\nangle_BAO = angle_BAO(angle_CAB)\nprint(angle_BAO)",
        "execution": "155.0",
        "error": "None",
        "extraction": "55",
        "prediction": "55\u00b0",
        "true_false": false
    },
    "222": {
        "question": "Subtract all blue shiny spheres. Subtract all big blue shiny cubes. How many objects are left?",
        "image": "images/222.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "222",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all blue shiny spheres. Subtract all big blue shiny cubes. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blue_shiny_spheres = 5\nbig_blue_shiny_cubes = 3\n\nobjects_left = blue_shiny_spheres - big_blue_shiny_cubes\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "223": {
        "question": "Is this an even function?",
        "image": "images/223.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "223",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1430,
            "img_height": 776,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this an even function?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_even_function(f):\n    for x in range(-10, 11):\n        if f(x) != f(-x):\n            return \"No\"\n    return \"Yes\"\n\n# Example function\ndef f(x):\n    return x**2\n\nprint(is_even_function(f))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "224": {
        "question": "Is this a periodic function?",
        "image": "images/224.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "224",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1114,
            "img_height": 744,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this a periodic function?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 2*np.pi, 100)\ny = np.sin(x)\n\nplt.plot(x, y)\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Graph of y = sin(x)')\nplt.show()",
        "execution": "",
        "error": "None",
        "extraction": "(B) No",
        "prediction": "No",
        "true_false": true
    },
    "225": {
        "question": "Fig. Q4 shows the contour of an object. Represent it with an 8-directional chain code. The resultant chain code should be normalized with respect to the starting point of the chain code. Represent the answer as a list with each digit as a element.",
        "image": "images/225.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "[0, 2, 0, 2, 1, 7, 1, 2, 0, 3, 0, 6]",
        "question_type": "free_form",
        "answer_type": "list",
        "pid": "225",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 846,
            "img_height": 560,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fig. Q4 shows the contour of an object. Represent it with an 8-directional chain code. The resultant chain code should be normalized with respect to the starting point of the chain code. Represent the answer as a list with each digit as a element.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef find_start_point(contour):\n    for i in range(len(contour)):\n        if contour[i] == 1:\n            return i\n\ndef normalize_chain_code(chain_code, start_point):\n    normalized_code = []\n    for i in range(len(chain_code)):\n        normalized_code.append((chain_code[i] - start_point) % 8)\n    return normalized_code\n\ncontour = np.array([[0, 0, 0, 0, 0, 0, 0, 0],\n                    [0, 0, 0, 0, 0, 0, 0, 0],\n                    [0, 0, 0, 0, 0, 0, 0, 0],\n                    [0, 0, 0, 1, 1, 1, 0, 0],\n                    [0, 0, 0, 1, 0, 1, 0, 0],\n                    [0, 0, 0, 1, 1, 1, 0, 0],\n                    [0, 0, 0, 0, 0, 0, 0, 0],\n                    [0, 0, 0, 0, 0, 0, 0, 0]])\n\nchain_code = [3, 2, 1, 0, 7, 6, 5, 4]\nstart_point = find_start_point(contour)\nnormalized_code = normalize_chain_code(chain_code, start_point)\n\nprint(normalized_code)",
        "execution": "",
        "error": "The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
        "extraction": "[3, 2, 1, 0, 7, 6, 5, 4]",
        "prediction": "[3, 2, 1, 0, 7, 6, 5, 4]",
        "true_false": false
    },
    "226": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) past three.",
        "image": "images/226.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "226",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 95,
            "img_height": 95,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) past three.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def time_shown(caption, choices):\n    time_words = {\n        'half': 'half',\n        'quarter': 'quarter',\n        'o\\'clock': 'o\\'clock',\n        'quarter to': 'quarter to',\n        'quarter past': 'quarter past'\n    }\n\n    for choice in choices:\n        if choice in caption:\n            return choice\n    return \"\"\n\nchoices = ['half', 'quarter', 'o\\'clock', 'quarter to', 'quarter past']\ncaption = \"The clock in the image shows that it is quarter past three.\"\n\nprint(time_shown(caption, choices))",
        "execution": "quarter",
        "error": "None",
        "extraction": "quarter past",
        "prediction": "quarter past",
        "true_false": false
    },
    "227": {
        "question": "Is Dark Orchid the maximum?",
        "image": "images/227.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "227",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 580,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Orchid the maximum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "color = \"Dark Orchid\"\nmaximum_color = max(color)\n\nif color == maximum_color:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "228": {
        "question": "As shown in the figure, AB is the diameter of circle O, DB and DC are respectively tangent to circle O at points B and C. If \u2220ACE = 25.0, then the degree of \u2220D is ()",
        "image": "images/228.jpg",
        "choices": [
            "50\u00b0",
            "55\u00b0",
            "60\u00b0",
            "65\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "50\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "228",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 137,
            "img_height": 97,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of circle O, DB and DC are respectively tangent to circle O at points B and C. If \u2220ACE = 25.0, then the degree of \u2220D is ()\nChoices:\n(A) 50\u00b0\n(B) 55\u00b0\n(C) 60\u00b0\n(D) 65\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_ACE):\n    angle_ACE_rad = math.radians(angle_ACE)\n    angle_ACD_rad = math.pi - angle_ACE_rad\n    angle_ACD_deg = math.degrees(angle_ACD_rad)\n    angle_D = 180 - angle_ACD_deg\n    return angle_D\n\nangle_ACE = 25.0\nangle_D = find_angle(angle_ACE)\nprint(angle_D)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "55",
        "prediction": "55\u00b0",
        "true_false": false
    },
    "229": {
        "question": "What is the highest lysine level given?",
        "image": "images/229.jpg",
        "choices": [
            "0.33%",
            "0.31%",
            "0.29%",
            "0.32%",
            "0.30%"
        ],
        "unit": null,
        "precision": null,
        "answer": "0.30%",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "229",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1683,
            "img_height": 2185,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest lysine level given?\nChoices:\n(A) 0.33%\n(B) 0.31%\n(C) 0.29%\n(D) 0.32%\n(E) 0.30%\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "lysine_levels = [0.33, 0.31, 0.29, 0.32, 0.30]\nhighest_level = max(lysine_levels)\nprint(highest_level)",
        "execution": "0.33",
        "error": "None",
        "extraction": "0.33",
        "prediction": "0.33%",
        "true_false": false
    },
    "230": {
        "question": "How many algorithms have accuracy higher than 9 in at least one dataset?",
        "image": "images/230.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "230",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many algorithms have accuracy higher than 9 in at least one dataset?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_high_accuracy_algorithms(data):\n    count = 0\n    for algorithm in data:\n        for accuracy in algorithm:\n            if accuracy > 9:\n                count += 1\n                break\n    return count\n\ndata = [\n    [8, 9, 10],\n    [7, 8, 9],\n    [10, 10, 10],\n    [6, 7, 8]\n]\n\nprint(count_high_accuracy_algorithms(data))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "231": {
        "question": "Which model has the overall best ImageNet 10shot Accuracy score across different training steps?",
        "image": "images/231.jpg",
        "choices": [
            "Identity",
            "Uniform",
            "Uniform / Soft",
            "Soft / Uniform",
            "Soft",
            "Dense"
        ],
        "unit": null,
        "precision": null,
        "answer": "Soft",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "231",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2002,
            "img_height": 988,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which model has the overall best ImageNet 10shot Accuracy score across different training steps?\nChoices:\n(A) Identity\n(B) Uniform\n(C) Uniform / Soft\n(D) Soft / Uniform\n(E) Soft\n(F) Dense\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "model_scores = {\n    'Identity': [0.85, 0.87, 0.88, 0.89],\n    'Uniform': [0.82, 0.84, 0.86, 0.88],\n    'Uniform / Soft': [0.83, 0.85, 0.87, 0.89],\n    'Soft / Uniform': [0.84, 0.86, 0.88, 0.90],\n    'Soft': [0.86, 0.88, 0.89, 0.91],\n    'Dense': [0.81, 0.83, 0.85, 0.87]\n}\n\nbest_model = ''\nbest_score = 0\n\nfor model, scores in model_scores.items():\n    avg_score = sum(scores) / len(scores)\n    if avg_score > best_score:\n        best_model = model\n        best_score = avg_score\n\nprint(best_model)",
        "execution": "Soft",
        "error": "None",
        "extraction": "Soft",
        "prediction": "Soft",
        "true_false": true
    },
    "232": {
        "question": "The diagram below is a model of two solutions. Each pink ball represents one particle of solute. Which solution has a higher concentration of pink particles?",
        "image": "images/232.jpg",
        "choices": [
            "neither; their concentrations are the same",
            "Solution B",
            "Solution A"
        ],
        "unit": null,
        "precision": null,
        "answer": "Solution B",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "232",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 378,
            "img_height": 251,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The diagram below is a model of two solutions. Each pink ball represents one particle of solute. Which solution has a higher concentration of pink particles?\nChoices:\n(A) neither; their concentrations are the same\n(B) Solution B\n(C) Solution A\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "solution_a_particles = 5\nsolution_b_particles = 8\n\nif solution_a_particles > solution_b_particles:\n    print(\"Solution A has a higher concentration of pink particles\")\nelif solution_a_particles < solution_b_particles:\n    print(\"Solution B has a higher concentration of pink particles\")\nelse:\n    print(\"Neither solution has a higher concentration; their concentrations are the same\")",
        "execution": "Solution B has a higher concentration of pink particles",
        "error": "None",
        "extraction": "Solution B",
        "prediction": "Solution B",
        "true_false": true
    },
    "233": {
        "question": "Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.",
        "image": "images/233.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "233",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 199,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "nail_length = 5.75\nnearest_inch = round(nail_length)\nprint(nearest_inch)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "234": {
        "question": "In the figure shown above, AC = 6. What is the length of segment AB?",
        "image": "images/234.jpg",
        "choices": [
            "3",
            "5",
            "6",
            "7",
            "It cannot be determined from the information given"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "234",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 434,
            "img_height": 378,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure shown above, AC = 6. What is the length of segment AB?\nChoices:\n(A) 3\n(B) 5\n(C) 6\n(D) 7\n(E) It cannot be determined from the information given\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_length_of_AB(AC):\n    AB = math.sqrt(AC**2 - (AC/2)**2)\n    return AB\n\nAC = 6\nprint(find_length_of_AB(AC))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "235": {
        "question": "Is the epigraph of a function f an infinite set?",
        "image": "images/235.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "235",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 412,
            "img_height": 266,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the epigraph of a function f an infinite set?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_epigraph_infinite_set(f):\n    epigraph = set()\n    for x in range(-100, 101):\n        y = f(x)\n        epigraph.add(y)\n        if len(epigraph) > 100:\n            return True\n    return False\n\n# Example function f(x) = x^2\ndef f(x):\n    return x**2\n\nprint(is_epigraph_infinite_set(f))",
        "execution": "True",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "236": {
        "question": "Find $z$.",
        "image": "images/236.jpg",
        "choices": [
            "7",
            "9",
            "12",
            "15"
        ],
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "236",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 447,
            "img_height": 423,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $z$.\nChoices:\n(A) 7\n(B) 9\n(C) 12\n(D) 15\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nz = sp.symbols('z')\neq = sp.Eq(3*z - 4, 5)\nsol = sp.solve(eq, z)\n\nprint(sol)",
        "execution": "[3]",
        "error": "None",
        "extraction": "9",
        "prediction": "9",
        "true_false": false
    },
    "237": {
        "question": "If the Red squirrel and deer mouse population were to decrease, what would happen to the deer tick population?",
        "image": "images/237.jpg",
        "choices": [
            "increase",
            "fluctuate",
            "it would decrease",
            "stay the same "
        ],
        "unit": null,
        "precision": null,
        "answer": "it would decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "237",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 400,
            "img_height": 346,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If the Red squirrel and deer mouse population were to decrease, what would happen to the deer tick population?\nChoices:\n(A) increase\n(B) fluctuate\n(C) it would decrease\n(D) stay the same \nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def deer_tick_population(squirrel_population, mouse_population):\n    if squirrel_population < 0 or mouse_population < 0:\n        return \"Invalid population values\"\n\n    if squirrel_population < 1000 and mouse_population < 1000:\n        return \"The deer tick population would decrease\"\n    elif squirrel_population > 1000 and mouse_population > 1000:\n        return \"The deer tick population would increase\"\n    else:\n        return \"The deer tick population would fluctuate\"\n\nsquirrel_population = 500\nmouse_population = 800\n\nprint(deer_tick_population(squirrel_population, mouse_population))",
        "execution": "The deer tick population would decrease",
        "error": "None",
        "extraction": "The deer tick population would decrease.",
        "prediction": "it would decrease",
        "true_false": true
    },
    "238": {
        "question": "Find PT",
        "image": "images/238.jpg",
        "choices": [
            "6",
            "\\frac { 20 } { 3 }",
            "7",
            "22 / 3"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac { 20 } { 3 }",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "238",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 238,
            "img_height": 250,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find PT\nChoices:\n(A) 6\n(B) \\frac { 20 } { 3 }\n(C) 7\n(D) 22 / 3\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_PT(a, b):\n    c = math.sqrt(a**2 + b**2)\n    return c\n\nPT = find_PT(4, 3)\nprint(PT)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "5.0",
        "prediction": "6",
        "true_false": false
    },
    "239": {
        "question": "Is Sky Blue the minimum?",
        "image": "images/239.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "239",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 769,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Sky Blue the minimum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sky_blue = 5\nminimum = 10\n\nif sky_blue == minimum:\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "240": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/240.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "240",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 3500,
            "img_height": 2387,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "241": {
        "question": "How many models in the table have a model size larger than 10B?",
        "image": "images/241.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "11",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "241",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1570,
            "img_height": 1184,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many models in the table have a model size larger than 10B?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "table = {\n    'model1': '5B',\n    'model2': '8B',\n    'model3': '12B',\n    'model4': '15B',\n    'model5': '9B'\n}\n\ncount = 0\nfor model, size in table.items():\n    if int(size[:-1]) > 10:\n        count += 1\n\nprint(count)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "242": {
        "question": "Find $m \\angle A$ of quadrilateral ABCD",
        "image": "images/242.jpg",
        "choices": [
            "45",
            "90",
            "135",
            "180"
        ],
        "unit": null,
        "precision": null,
        "answer": "135",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "242",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 621,
            "img_height": 381,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $m \\angle A$ of quadrilateral ABCD\nChoices:\n(A) 45\n(B) 90\n(C) 135\n(D) 180\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(a, b, c, d):\n    angle = math.degrees(math.atan2(d[1]-c[1], d[0]-c[0]) - math.atan2(b[1]-a[1], b[0]-a[0]))\n    if angle < 0:\n        angle += 360\n    return angle\n\nA = (0, 0)\nB = (1, 0)\nC = (1, 1)\nD = (0, 1)\n\nangle_A = find_angle(A, B, C, D)\nprint(angle_A)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "45",
        "prediction": "45",
        "true_false": false
    },
    "243": {
        "question": "\u0686\u0646\u062f \u0639\u062f\u062f \u0634\u06cc\u0631\u06cc\u0646\u06cc \u0645\u062b\u0644\u062b\u06cc \u0634\u06a9\u0644 \u062f\u0631 \u062c\u0639\u0628\u0647 \u0627\u0633\u062a\u061f",
        "image": "images/243.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "243",
        "metadata": {
            "split": "testmini",
            "language": "persian",
            "img_width": 564,
            "img_height": 1001,
            "source": "ParsVQA-Caps",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u0686\u0646\u062f \u0639\u062f\u062f \u0634\u06cc\u0631\u06cc\u0646\u06cc \u0645\u062b\u0644\u062b\u06cc \u0634\u06a9\u0644 \u062f\u0631 \u062c\u0639\u0628\u0647 \u0627\u0633\u062a\u061f\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "num_triangular_cakes = 0\nfor i in range(1, 101):\n    if i*(i+1)/2 <= 100:\n        num_triangular_cakes += 1\n    else:\n        break\n\nprint(num_triangular_cakes)",
        "execution": "13",
        "error": "None",
        "extraction": "14",
        "prediction": "14",
        "true_false": false
    },
    "244": {
        "question": "Does Aqua have the minimum area under the curve?",
        "image": "images/244.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "244",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Aqua have the minimum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate x values\nx = np.linspace(-10, 10, 100)\n\n# Define the function\ndef f(x):\n    return x**2 + 2*x + 1\n\n# Calculate the area under the curve\narea = np.trapz(f(x), x)\n\n# Check if Aqua has the minimum area\nif area == np.min(area):\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "245": {
        "question": "How much money does Damon need to buy a grilled steak and a mushroom pizza? (Unit: $)",
        "image": "images/245.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "24",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "245",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 259,
            "img_height": 128,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much money does Damon need to buy a grilled steak and a mushroom pizza? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "grilled_steak_price = 15.00\nmushroom_pizza_price = 10.00\n\ntotal_cost = grilled_steak_price + mushroom_pizza_price\nprint(total_cost)",
        "execution": "25.0",
        "error": "None",
        "extraction": "25.0",
        "prediction": null,
        "true_false": false
    },
    "246": {
        "question": "Assume that all gases are perfect and that data refer to 298 K unless otherwise stated. In 1995, the Intergovernmental Panel on Climate Change (IPCC) considered a global average temperature rise of $1.0-3.5^{\\circ} \\mathrm{C}$ likely by the year 2100 , with $2.0^{\\circ} \\mathrm{C}$ its best estimate. Because water vapour is itself a greenhouse gas, the increase in water vapour content of the atmosphere is of some concern to climate change experts. Predict the relative increase in water vapour in the atmosphere based on a temperature rises of $2.0 \\mathrm{~K}$, assuming that the relative humidity remains constant. (The present global mean temperature is $290 \\mathrm{~K}$, and the equilibrium vapour pressure of water at that temperature is 0.0189 bar.)",
        "image": "images/246.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "246",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1098,
            "img_height": 216,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Assume that all gases are perfect and that data refer to 298 K unless otherwise stated. In 1995, the Intergovernmental Panel on Climate Change (IPCC) considered a global average temperature rise of $1.0-3.5^{\\circ} \\mathrm{C}$ likely by the year 2100 , with $2.0^{\\circ} \\mathrm{C}$ its best estimate. Because water vapour is itself a greenhouse gas, the increase in water vapour content of the atmosphere is of some concern to climate change experts. Predict the relative increase in water vapour in the atmosphere based on a temperature rises of $2.0 \\mathrm{~K}$, assuming that the relative humidity remains constant. (The present global mean temperature is $290 \\mathrm{~K}$, and the equilibrium vapour pressure of water at that temperature is 0.0189 bar.)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "temperature_rise = 2.0\npresent_temperature = 290\nequilibrium_vapour_pressure = 0.0189\n\nrelative_increase = (temperature_rise / present_temperature) * equilibrium_vapour_pressure\nprint(relative_increase)",
        "execution": "0.0001303448275862069",
        "error": "None",
        "extraction": "0.0130",
        "prediction": null,
        "true_false": false
    },
    "247": {
        "question": "A spaceship of mass $m=4.50 \\times 10^3 \\mathrm{~kg}$ is in a circular Earth orbit of radius $r=8.00 \\times 10^6 \\mathrm{~m}$ and period $T_0=118.6 \\mathrm{~min}=$ $7.119 \\times 10^3 \\mathrm{~s}$ when a thruster is fired in the forward direction to decrease the speed to $96.0 \\%$ of the original speed. What is the period $T$ of the resulting elliptical orbit (Figure)?",
        "image": "images/247.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "6.36",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "247",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 914,
            "img_height": 906,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A spaceship of mass $m=4.50 \\times 10^3 \\mathrm{~kg}$ is in a circular Earth orbit of radius $r=8.00 \\times 10^6 \\mathrm{~m}$ and period $T_0=118.6 \\mathrm{~min}=$ $7.119 \\times 10^3 \\mathrm{~s}$ when a thruster is fired in the forward direction to decrease the speed to $96.0 \\%$ of the original speed. What is the period $T$ of the resulting elliptical orbit (Figure)?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nm = 4.50 * 10**3\nr = 8.00 * 10**6\nT0 = 7.119 * 10**3\nv0 = (2 * math.pi * r) / T0\n\nv = v0 * 0.96\na = (v**2) / r\nT = (2 * math.pi * r) / v\n\nprint(T)",
        "execution": "7415.625",
        "error": "None",
        "extraction": "118.6",
        "prediction": "118.6",
        "true_false": false
    },
    "248": {
        "question": "Is the number of green matte choppers greater than the number of large yellow shiny motorbikes?",
        "image": "images/248.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "248",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of green matte choppers greater than the number of large yellow shiny motorbikes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "green_matte_choppers = 10\nlarge_yellow_shiny_motorbikes = 8\n\nif green_matte_choppers > large_yellow_shiny_motorbikes:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "249": {
        "question": "Subtract all green rubber cubes. Subtract all red matte blocks. How many objects are left?",
        "image": "images/249.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "249",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all green rubber cubes. Subtract all red matte blocks. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "green_rubber_cubes = 10\nred_matte_blocks = 5\n\nobjects_left = green_rubber_cubes - red_matte_blocks\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "250": {
        "question": "The area $A$ of the shaded region is given. Find $x$. $A = 66$ cm$^2$ .",
        "image": "images/250.jpg",
        "choices": [
            "4.6",
            "6.5",
            "13.0",
            "26.0"
        ],
        "unit": null,
        "precision": null,
        "answer": "13.0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "250",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 303,
            "img_height": 286,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The area $A$ of the shaded region is given. Find $x$. $A = 66$ cm$^2$ .\nChoices:\n(A) 4.6\n(B) 6.5\n(C) 13.0\n(D) 26.0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nA = 66\n\neq = sp.Eq(x**2 - (x-4)**2, A)\nsol = sp.solve(eq, x)\n\nprint(sol)",
        "execution": "[41/4]",
        "error": "None",
        "extraction": "[6.5]",
        "prediction": "6.5",
        "true_false": false
    },
    "251": {
        "question": "Subtract all green balls. Subtract all shiny things. How many objects are left?",
        "image": "images/251.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "251",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all green balls. Subtract all shiny things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "green_balls = 5\nshiny_things = 3\ntotal_objects = 10\n\nobjects_left = total_objects - green_balls - shiny_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "252": {
        "question": "Consider the infinitely long chain of resistors shown below. What is the resistance between terminals a and b if R=1?",
        "image": "images/252.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.73",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "252",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 463,
            "img_height": 169,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Consider the infinitely long chain of resistors shown below. What is the resistance between terminals a and b if R=1?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def resistance(n):\n    if n == 1:\n        return 1\n    else:\n        return 1 + 1/resistance(n-1)\n\nprint(resistance(10))",
        "execution": "",
        "error": "name 'resistance' is not defined",
        "extraction": "5.0",
        "prediction": "5.0",
        "true_false": false
    },
    "253": {
        "question": "How many objects are preferred by more than 7 people in at least one category?",
        "image": "images/253.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "253",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many objects are preferred by more than 7 people in at least one category?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "objects = {\n    'category1': {\n        'object1': 5,\n        'object2': 8,\n        'object3': 3,\n        'object4': 10\n    },\n    'category2': {\n        'object1': 6,\n        'object2': 2,\n        'object3': 9,\n        'object4': 4\n    },\n    'category3': {\n        'object1': 7,\n        'object2': 1,\n        'object3': 5,\n        'object4': 12\n    }\n}\n\ncount = 0\nfor category in objects:\n    for object in objects[category]:\n        if objects[category][object] > 7:\n            count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "254": {
        "question": "Is the number of big objects that are in front of the metal fighter less than the number of things that are behind the big metallic bus?",
        "image": "images/254.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "254",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of big objects that are in front of the metal fighter less than the number of things that are behind the big metallic bus?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_objects(front_objects, behind_objects):\n    if front_objects < behind_objects:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nfront_objects = 5\nbehind_objects = 8\n\nprint(compare_objects(front_objects, behind_objects))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "255": {
        "question": "As shown in the figure, \u2220BAC = 110.0, if A and B are symmetrical with respect to the line MP, A and C are symmetrical with respect to the line NQ, then the size of \u2220PAQ is ()",
        "image": "images/255.jpg",
        "choices": [
            "70\u00b0",
            "55\u00b0",
            "40\u00b0",
            "30\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "255",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 188,
            "img_height": 92,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, \u2220BAC = 110.0, if A and B are symmetrical with respect to the line MP, A and C are symmetrical with respect to the line NQ, then the size of \u2220PAQ is ()\nChoices:\n(A) 70\u00b0\n(B) 55\u00b0\n(C) 40\u00b0\n(D) 30\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_PAQ(angle_BAC):\n    angle_PAC = (180 - angle_BAC) / 2\n    angle_PAQ = 180 - 2 * angle_PAC\n    return angle_PAQ\n\nangle_BAC = 110.0\nangle_PAQ = angle_PAQ(angle_BAC)\nprint(angle_PAQ)",
        "execution": "110.0",
        "error": "None",
        "extraction": "40\u00b0",
        "prediction": "40\u00b0",
        "true_false": true
    },
    "256": {
        "question": "\u5982\u56fe\uff0c\u25b3ABC\u4e2d\uff0cAD\u5e73\u5206\u2220BAC\uff0cAD\u4ea4BC\u4e8e\u70b9D\uff0cDE\u22a5AB\uff0c\u5782\u8db3\u4e3aE\uff0c\u82e5DE\uff1d3\uff0cAC\uff1d4\uff0c\u5219\u25b3ADC\u7684\u9762\u79ef\u4e3a\uff08\uff09",
        "image": "images/256.jpg",
        "choices": [
            "3",
            "4",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "256",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 148,
            "img_height": 75,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u25b3ABC\u4e2d\uff0cAD\u5e73\u5206\u2220BAC\uff0cAD\u4ea4BC\u4e8e\u70b9D\uff0cDE\u22a5AB\uff0c\u5782\u8db3\u4e3aE\uff0c\u82e5DE\uff1d3\uff0cAC\uff1d4\uff0c\u5219\u25b3ADC\u7684\u9762\u79ef\u4e3a\uff08\uff09\nChoices:\n(A) 3\n(B) 4\n(C) 5\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef triangle_area(de, ac):\n    ad = ac / 2\n    ae = math.sqrt(ad**2 - de**2)\n    area = (ac * ae) / 2\n    return area\n\nde = 3\nac = 4\nprint(triangle_area(de, ac))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "6",
        "prediction": "6",
        "true_false": true
    },
    "257": {
        "question": "\u4ee5\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\u4e3a\u8fb9\u5411\u5916\u4f5c\u6b63\u65b9\u5f62\uff0c\u5176\u4e2d\u4e24\u4e2a\u6b63\u65b9\u5f62\u7684\u9762\u79ef\u5982\u56fe\u6240\u793a\uff0c\u5219\u6b63\u65b9\u5f62A\u7684\u9762\u79ef\u4e3a\uff08\uff09",
        "image": "images/257.jpg",
        "choices": [
            "6",
            "36",
            "64",
            "8"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "257",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 109,
            "img_height": 119,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u4ee5\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\u4e3a\u8fb9\u5411\u5916\u4f5c\u6b63\u65b9\u5f62\uff0c\u5176\u4e2d\u4e24\u4e2a\u6b63\u65b9\u5f62\u7684\u9762\u79ef\u5982\u56fe\u6240\u793a\uff0c\u5219\u6b63\u65b9\u5f62A\u7684\u9762\u79ef\u4e3a\uff08\uff09\nChoices:\n(A) 6\n(B) 36\n(C) 64\n(D) 8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_square_area(a, b, c):\n    # Find the hypotenuse of the right triangle\n    hypotenuse = math.sqrt(a**2 + b**2)\n    \n    # Find the side length of the square\n    side_length = hypotenuse + c\n    \n    # Find the area of the square\n    square_area = side_length**2\n    \n    return square_area\n\na = 3\nb = 4\nc = 5\n\nsquare_A_area = find_square_area(a, b, c)\nprint(square_A_area)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "41",
        "prediction": "6",
        "true_false": true
    },
    "258": {
        "question": "An employee at the craft store counted the number of red buttons in each bag of mixed buttons. How many bags had at least 60 red buttons but fewer than 81 red buttons?'",
        "image": "images/258.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "258",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 156,
            "img_height": 224,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: An employee at the craft store counted the number of red buttons in each bag of mixed buttons. How many bags had at least 60 red buttons but fewer than 81 red buttons?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "red_buttons_counts = [45, 62, 73, 56, 81, 67, 70, 59, 64, 76]\ncount = 0\n\nfor count in red_buttons_counts:\n    if count >= 60 and count < 81:\n        count += 1\n\nprint(count)",
        "execution": "77",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "259": {
        "question": "Subtract all large yellow metal blocks. Subtract all gray metallic cylinders. How many objects are left?",
        "image": "images/259.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "259",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large yellow metal blocks. Subtract all gray metallic cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_yellow_metal_blocks = 5\ngray_metallic_cylinders = 3\n\nobjects_left = large_yellow_metal_blocks - gray_metallic_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "260": {
        "question": "Is the derivative of the function positive between [1, 2] assuming that it's differentiable?",
        "image": "images/260.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "260",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 412,
            "img_height": 368,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the derivative of the function positive between [1, 2] assuming that it's differentiable?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nf = x**2 - 3*x + 2\n\nderivative = sp.diff(f, x)\n\nif derivative > 0:\n    print(\"The derivative of the function is positive between [1, 2].\")\nelse:\n    print(\"The derivative of the function is not positive between [1, 2].\")",
        "execution": "",
        "error": "cannot determine truth value of Relational",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "261": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/261.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "261",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 345,
            "img_height": 500,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "262": {
        "question": "What is the difference between genres of tv shows watched by highest female and lowest female?",
        "image": "images/262.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "39",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "262",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 756,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between genres of tv shows watched by highest female and lowest female?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "highest_female_genres = ['drama', 'romance', 'comedy']\nlowest_female_genres = ['action', 'thriller', 'sci-fi']\n\ndifference = list(set(highest_female_genres) - set(lowest_female_genres))\nprint(difference)",
        "execution": "['drama', 'comedy', 'romance']",
        "error": "None",
        "extraction": "['drama', 'romance', 'comedy']",
        "prediction": null,
        "true_false": false
    },
    "263": {
        "question": "What number is shown?",
        "image": "images/263.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "38",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "263",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 113,
            "img_height": 117,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "264": {
        "question": "For Group C, in which week is the cumulative increase in weight , the highest?",
        "image": "images/264.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "264",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1754,
            "img_height": 2237,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For Group C, in which week is the cumulative increase in weight , the highest?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "group_c_weights = [150, 155, 160, 165, 170, 175, 180]\nhighest_increase = 0\nweek = 0\n\nfor i in range(1, len(group_c_weights)):\n    increase = group_c_weights[i] - group_c_weights[i-1]\n    if increase > highest_increase:\n        highest_increase = increase\n        week = i\n\nprint(\"The highest cumulative increase in weight for Group C is in week\", week)",
        "execution": "The highest cumulative increase in weight for Group C is in week 1",
        "error": "None",
        "extraction": "The highest cumulative increase in weight for Group C is in week 6.",
        "prediction": null,
        "true_false": false
    },
    "265": {
        "question": "Justine's P.E. class participated in a push-up competition, and Justine wrote down how many push-ups each person could do. How many people did at least 60 push-ups? (Unit: people)",
        "image": "images/265.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "11",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "265",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 329,
            "img_height": 136,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Justine's P.E. class participated in a push-up competition, and Justine wrote down how many push-ups each person could do. How many people did at least 60 push-ups? (Unit: people)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "push_ups = [45, 50, 55, 60, 65, 70, 75, 80, 85, 90]\ncount = 0\n\nfor push_up in push_ups:\n    if push_up >= 60:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "266": {
        "question": "Which has the most uneven shape?",
        "image": "images/266.jpg",
        "choices": [
            "oblique",
            "obtuse",
            "cordate",
            "truncate"
        ],
        "unit": null,
        "precision": null,
        "answer": "oblique",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "266",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 240,
            "img_height": 225,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which has the most uneven shape?\nChoices:\n(A) oblique\n(B) obtuse\n(C) cordate\n(D) truncate\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_uneven_shape(choices):\n    shapes = {\n        'oblique': 3,\n        'obtuse': 2,\n        'cordate': 4,\n        'truncate': 1\n    }\n\n    max_shape = ''\n    max_value = 0\n\n    for choice in choices:\n        if shapes[choice] > max_value:\n            max_shape = choice\n            max_value = shapes[choice]\n\n    return max_shape\n\nchoices = ['oblique', 'obtuse', 'cordate', 'truncate']\nprint(most_uneven_shape(choices))",
        "execution": "cordate",
        "error": "None",
        "extraction": "cordate",
        "prediction": "cordate",
        "true_false": false
    },
    "267": {
        "question": "What shape of a leaf is similar to Serrate, but has smaller, evenly-spaced teeth?",
        "image": "images/267.jpg",
        "choices": [
            "Undulate",
            "Sinuate",
            "Serrulate",
            "Entire"
        ],
        "unit": null,
        "precision": null,
        "answer": "Serrulate",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "267",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 529,
            "img_height": 306,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What shape of a leaf is similar to Serrate, but has smaller, evenly-spaced teeth?\nChoices:\n(A) Undulate\n(B) Sinuate\n(C) Serrulate\n(D) Entire\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def similar_leaf_shape(shape):\n    leaf_shapes = {\n        'Serrate': 'Serrulate',\n        'Undulate': 'Sinuate',\n        'Sinuate': 'Entire',\n        'Serrulate': 'Undulate'\n    }\n\n    return leaf_shapes[shape]\n\nshape = 'Serrate'\nprint(similar_leaf_shape(shape))",
        "execution": "Serrulate",
        "error": "None",
        "extraction": "Serrulate",
        "prediction": "Serrulate",
        "true_false": true
    },
    "268": {
        "question": "Colton wants to buy 1+3/10 kilograms of English muffins. How much will he spend? (Unit: $)",
        "image": "images/268.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "10.4",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "268",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 273,
            "img_height": 194,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Colton wants to buy 1+3/10 kilograms of English muffins. How much will he spend? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "english_muffin_price = 2.50\nweight = 1 + 3/10\n\ntotal_cost = english_muffin_price * weight\nprint(total_cost)",
        "execution": "3.25",
        "error": "None",
        "extraction": "3.75",
        "prediction": "3.8",
        "true_false": false
    },
    "269": {
        "question": "As shown in the figure, the elevation angle of the top of a building is 30.0 when viewed from point A in the air by a hot air balloon, and the depression angle of this building is 60.0. The horizontal distance between the hot air balloon and the building is 120.0. The height of this building is ()",
        "image": "images/269.jpg",
        "choices": [
            "160m",
            "160\u221a{3}m",
            "(160-160\u221a{3})m",
            "360m"
        ],
        "unit": null,
        "precision": null,
        "answer": "160\u221a{3}m",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "269",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 133,
            "img_height": 159,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the elevation angle of the top of a building is 30.0 when viewed from point A in the air by a hot air balloon, and the depression angle of this building is 60.0. The horizontal distance between the hot air balloon and the building is 120.0. The height of this building is ()\nChoices:\n(A) 160m\n(B) 160\u221a{3}m\n(C) (160-160\u221a{3})m\n(D) 360m\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef calculate_building_height(angle1, angle2, distance):\n    angle1_rad = math.radians(angle1)\n    angle2_rad = math.radians(angle2)\n    height = distance * math.tan(angle1_rad) * math.tan(angle2_rad) / (math.tan(angle1_rad) - math.tan(angle2_rad))\n    return height\n\nangle1 = 30.0\nangle2 = 60.0\ndistance = 120.0\n\nheight = calculate_building_height(angle1, angle2, distance)\nprint(height)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "160",
        "prediction": "160m",
        "true_false": false
    },
    "270": {
        "question": "As shown in the figure, points A and B are three points on \u2299O and AB = AC. Connect BO and CO, if \u2220ABC = 65.0, then the degree of \u2220BOC is ()",
        "image": "images/270.jpg",
        "choices": [
            "50\u00b0",
            "65\u00b0",
            "100\u00b0",
            "130\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "100\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "270",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 102,
            "img_height": 114,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, points A and B are three points on \u2299O and AB = AC. Connect BO and CO, if \u2220ABC = 65.0, then the degree of \u2220BOC is ()\nChoices:\n(A) 50\u00b0\n(B) 65\u00b0\n(C) 100\u00b0\n(D) 130\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BOC(angle_ABC):\n    angle_BOC = 180 - angle_ABC\n    return angle_BOC\n\nangle_ABC = 65.0\nangle_BOC = angle_BOC(angle_ABC)\nprint(angle_BOC)",
        "execution": "115.0",
        "error": "None",
        "extraction": "115",
        "prediction": "50\u00b0",
        "true_false": false
    },
    "271": {
        "question": "Find y",
        "image": "images/271.jpg",
        "choices": [
            "3",
            "4.5",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "271",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 287,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find y\nChoices:\n(A) 3\n(B) 4.5\n(C) 5\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x = 2\ny = 2 * x + 1\nprint(y)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "272": {
        "question": "What time does the clock show?",
        "image": "images/272.jpg",
        "choices": [
            "9:30",
            "1:30",
            "4:30",
            "5:30",
            "11:30"
        ],
        "unit": null,
        "precision": null,
        "answer": "4:30",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "272",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 261,
            "img_height": 261,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time does the clock show?\nChoices:\n(A) 9:30\n(B) 1:30\n(C) 4:30\n(D) 5:30\n(E) 11:30\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import cv2\nimport pytesseract\n\n# Load the image\nimage = cv2.imread('clock_image.jpg')\n\n# Convert the image to grayscale\ngray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\n# Apply thresholding to make the digits more visible\n_, threshold = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)\n\n# Use Tesseract OCR to extract the text from the image\ntext = pytesseract.image_to_string(threshold, config='--psm 6')\n\n# Clean the extracted text\ncleaned_text = ''.join(filter(str.isdigit, text))\n\n# Convert the extracted text to time format\nhours = int(cleaned_text[:2])\nminutes = int(cleaned_text[2:])\n\n# Print the time\nprint(f\"The clock shows: {hours}:{minutes}\")",
        "execution": "",
        "error": "No module named 'pytesseract'",
        "extraction": "The clock shows: 9:30",
        "prediction": "9:30",
        "true_false": false
    },
    "273": {
        "question": "One diagonal of a rhombus is twice as long as the other diagonal. If the area of the rhombus is 169 square millimeters, what are the lengths of the diagonals?",
        "image": "images/273.jpg",
        "choices": [
            "6.5",
            "13",
            "26",
            "52"
        ],
        "unit": null,
        "precision": null,
        "answer": "26",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "273",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 347,
            "img_height": 237,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: One diagonal of a rhombus is twice as long as the other diagonal. If the area of the rhombus is 169 square millimeters, what are the lengths of the diagonals?\nChoices:\n(A) 6.5\n(B) 13\n(C) 26\n(D) 52\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_diagonal_lengths(area):\n    # Let x be the length of the shorter diagonal\n    # Then the length of the longer diagonal is 2x\n    # The area of a rhombus is given by (d1 * d2) / 2, where d1 and d2 are the diagonals\n    # Substituting the values, we get (x * 2x) / 2 = area\n    # Simplifying, we get x^2 = 2 * area\n    # Taking the square root, we get x = sqrt(2 * area)\n    # Therefore, the lengths of the diagonals are x and 2x\n\n    x = math.sqrt(2 * area)\n    return x, 2 * x\n\narea = 169\ndiagonal1, diagonal2 = find_diagonal_lengths(area)\nprint(diagonal1, diagonal2)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "13.0, 26.0",
        "prediction": "6.5",
        "true_false": false
    },
    "274": {
        "question": "\u5982\u56fe\uff0cAB\u3001BC\u3001CD\u3001DA\u90fd\u662f\u2299O\u7684\u5207\u7ebf\uff0c\u5df2\u77e5AD\uff1d2\uff0cBC\uff1d5\uff0c\u5219AB+CD\u7684\u503c\u662f\uff08\uff09",
        "image": "images/274.jpg",
        "choices": [
            "14",
            "12",
            "9",
            "7"
        ],
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "274",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 151,
            "img_height": 119,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAB\u3001BC\u3001CD\u3001DA\u90fd\u662f\u2299O\u7684\u5207\u7ebf\uff0c\u5df2\u77e5AD\uff1d2\uff0cBC\uff1d5\uff0c\u5219AB+CD\u7684\u503c\u662f\uff08\uff09\nChoices:\n(A) 14\n(B) 12\n(C) 9\n(D) 7\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef calculate_length(AD, BC):\n    AB = math.sqrt(AD * (AD + 2 * BC))\n    CD = math.sqrt(BC * (BC + 2 * AD))\n    return AB + CD\n\nAD = 2\nBC = 5\n\nresult = calculate_length(AD, BC)\nprint(result)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "9",
        "prediction": "9",
        "true_false": false
    },
    "275": {
        "question": "As shown in the figure, in Rt\u25b3ABC, \u2220BAC = 90.0, AD \u22a5 BC at D, DE \u22a5 AB at E, AD = 3.0, DE = 2.0, then the length of CD is ()",
        "image": "images/275.jpg",
        "choices": [
            "\\frac{21}{2}",
            "\\frac{\u221a{15}}{2}",
            "\\frac{9}{2}",
            "\\frac{3\u221a{5}}{2}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{3\u221a{5}}{2}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "275",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 185,
            "img_height": 107,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in Rt\u25b3ABC, \u2220BAC = 90.0, AD \u22a5 BC at D, DE \u22a5 AB at E, AD = 3.0, DE = 2.0, then the length of CD is ()\nChoices:\n(A) \\frac{21}{2}\n(B) \\frac{\u221a{15}}{2}\n(C) \\frac{9}{2}\n(D) \\frac{3\u221a{5}}{2}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_CD_length(AD, DE):\n    CD = math.sqrt(AD**2 + DE**2)\n    return CD\n\nAD = 3.0\nDE = 2.0\n\nCD_length = find_CD_length(AD, DE)\nprint(CD_length)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "4.123105625617661",
        "prediction": "\\frac{21}{2}",
        "true_false": false
    },
    "276": {
        "question": "As shown in the figure, it is known that the radius of \u2299O is 5.0 and the chord AB = 8.0, then the distance from the center O to AB is ()",
        "image": "images/276.jpg",
        "choices": [
            "1mm",
            "2mm",
            "3mm",
            "4mm"
        ],
        "unit": null,
        "precision": null,
        "answer": "3mm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "276",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 102,
            "img_height": 102,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, it is known that the radius of \u2299O is 5.0 and the chord AB = 8.0, then the distance from the center O to AB is ()\nChoices:\n(A) 1mm\n(B) 2mm\n(C) 3mm\n(D) 4mm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nradius = 5.0\nchord = 8.0\n\ndistance = math.sqrt(radius**2 - (chord/2)**2)\nprint(distance)",
        "execution": "3.0",
        "error": "None",
        "extraction": "3.0",
        "prediction": "3mm",
        "true_false": true
    },
    "277": {
        "question": "Which cube is identical to the unfolded net?",
        "image": "images/277.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "D",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "277",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 424,
            "img_height": 591,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which cube is identical to the unfolded net?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def identical_cube(net, choices):\n    unfolded_nets = {\n        'A': 'net_A',\n        'B': 'net_B',\n        'C': 'net_C',\n        'D': 'net_D',\n        'E': 'net_E'\n    }\n\n    for choice in choices:\n        if choice == unfolded_nets[net]:\n            return choice\n    return \"\"\n\nchoices = ['A', 'B', 'C', 'D', 'E']\nnet = 'A'\n\nprint(identical_cube(net, choices))",
        "execution": "",
        "error": "None",
        "extraction": "A",
        "prediction": "A",
        "true_false": false
    },
    "278": {
        "question": "Among the following objects, which one has the best PSNR score?",
        "image": "images/278.jpg",
        "choices": [
            "Lego",
            "Mats",
            "Mic",
            "Ship"
        ],
        "unit": null,
        "precision": null,
        "answer": "Mic",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "278",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1478,
            "img_height": 940,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Among the following objects, which one has the best PSNR score?\nChoices:\n(A) Lego\n(B) Mats\n(C) Mic\n(D) Ship\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "psnr_scores = {\n    'Lego': 30,\n    'Mats': 25,\n    'Mic': 35,\n    'Ship': 20\n}\n\nbest_psnr = max(psnr_scores, key=psnr_scores.get)\nprint(best_psnr)",
        "execution": "Mic",
        "error": "None",
        "extraction": "Mic",
        "prediction": "Mic",
        "true_false": true
    },
    "279": {
        "question": "What would be directly affected by a decrease in sunlight?",
        "image": "images/279.jpg",
        "choices": [
            "grass",
            "mouse",
            "grasshopper",
            "owl"
        ],
        "unit": null,
        "precision": null,
        "answer": "grass",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "279",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 423,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would be directly affected by a decrease in sunlight?\nChoices:\n(A) grass\n(B) mouse\n(C) grasshopper\n(D) owl\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def directly_affected_by_decrease_in_sunlight(choices):\n    affected = []\n    for choice in choices:\n        if choice == 'grass' or choice == 'grasshopper':\n            affected.append(choice)\n    return affected\n\nchoices = ['grass', 'mouse', 'grasshopper', 'owl']\nprint(directly_affected_by_decrease_in_sunlight(choices))",
        "execution": "['grass', 'grasshopper']",
        "error": "None",
        "extraction": "['grass', 'grasshopper']",
        "prediction": "grasshopper",
        "true_false": false
    },
    "280": {
        "question": "In the figure above, ABCDEF is a regular hexagon, and its center is point O. What is the value of x?",
        "image": "images/280.jpg",
        "choices": [
            "80",
            "60",
            "40",
            "30",
            "20"
        ],
        "unit": null,
        "precision": null,
        "answer": "60",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "280",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 130,
            "img_height": 123,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, ABCDEF is a regular hexagon, and its center is point O. What is the value of x?\nChoices:\n(A) 80\n(B) 60\n(C) 40\n(D) 30\n(E) 20\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_x():\n    # Since ABCDEF is a regular hexagon, all angles are equal to 120 degrees\n    angle_AOB = 120\n\n    # The sum of angles in a triangle is 180 degrees\n    angle_ABO = (180 - angle_AOB) / 2\n\n    # The value of x is the complement of angle ABO\n    x = 90 - angle_ABO\n\n    return x\n\nprint(find_x())",
        "execution": "60.0",
        "error": "None",
        "extraction": "30",
        "prediction": "30",
        "true_false": false
    },
    "281": {
        "question": "Was this a square pizza?",
        "image": "images/281.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "281",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Was this a square pizza?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_square_pizza(pizza):\n    rows = len(pizza)\n    cols = len(pizza[0])\n\n    if rows == cols:\n        return \"Yes\"\n    else:\n        return \"No\"\n\npizza = [\n    [1, 1, 1, 1],\n    [1, 1, 1, 1],\n    [1, 1, 1, 1],\n    [1, 1, 1, 1]\n]\n\nprint(is_square_pizza(pizza))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "282": {
        "question": "What percent of the sun is showing?",
        "image": "images/282.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "100",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "282",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percent of the sun is showing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def percent_of_sun_showing(visible_area, total_area):\n    percent = (visible_area / total_area) * 100\n    return percent\n\nvisible_area = 50\ntotal_area = 100\n\nprint(percent_of_sun_showing(visible_area, total_area))",
        "execution": "50.0",
        "error": "None",
        "extraction": "50",
        "prediction": "50",
        "true_false": false
    },
    "283": {
        "question": "$\\overline{WTY} \\cong \\overline{TWY}$. Find $x$.",
        "image": "images/283.jpg",
        "choices": [
            "2",
            "4",
            "5",
            "10"
        ],
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "283",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 559,
            "img_height": 416,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: $\\overline{WTY} \\cong \\overline{TWY}$. Find $x$.\nChoices:\n(A) 2\n(B) 4\n(C) 5\n(D) 10\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(x, x)\nsol = solve(eq, x)\nprint(sol)",
        "execution": "[]",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "284": {
        "question": "What is the accuracy of the algorithm with lowest accuracy?",
        "image": "images/284.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "284",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the accuracy of the algorithm with lowest accuracy?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def lowest_accuracy(accuracy_scores):\n    lowest = min(accuracy_scores)\n    return lowest\n\naccuracy_scores = [0.85, 0.92, 0.78, 0.95]\nlowest = lowest_accuracy(accuracy_scores)\nprint(lowest)",
        "execution": "0.78",
        "error": "None",
        "extraction": "0.78",
        "prediction": null,
        "true_false": false
    },
    "285": {
        "question": "As shown in the figure, it is known that AB is the diameter of \u2299O, if the degree of \u2220BOC is 50.0, then the degree of \u2220A is ()",
        "image": "images/285.jpg",
        "choices": [
            "50\u00b0",
            "40\u00b0",
            "30\u00b0",
            "25\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "25\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "285",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 100,
            "img_height": 110,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, it is known that AB is the diameter of \u2299O, if the degree of \u2220BOC is 50.0, then the degree of \u2220A is ()\nChoices:\n(A) 50\u00b0\n(B) 40\u00b0\n(C) 30\u00b0\n(D) 25\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_A(angle_BOC):\n    angle_A = 180 - angle_BOC\n    return angle_A\n\nangle_BOC = 50.0\nangle_A = angle_A(angle_BOC)\nprint(angle_A)",
        "execution": "130.0",
        "error": "None",
        "extraction": "130",
        "prediction": "30\u00b0",
        "true_false": false
    },
    "286": {
        "question": "\u5982\u56fe\uff0c\u5c06\u4e00\u6839\u957f\u5ea6\u4e3a8cm\uff0c\u81ea\u7136\u4f38\u76f4\u7684\u5f39\u6027\u76ae\u7b4bAB\u4e24\u7aef\u56fa\u5b9a\u5728\u6c34\u5e73\u7684\u684c\u9762\u4e0a\uff0c\u7136\u540e\u628a\u76ae\u7b4b\u4e2d\u70b9C\u7ad6\u76f4\u5411\u4e0a\u62c9\u53473cm\u5230\u70b9D\uff0c\u5219\u6b64\u65f6\u8be5\u5f39\u6027\u76ae\u7b4b\u88ab\u62c9\u957f\u4e86\uff08\uff09",
        "image": "images/286.jpg",
        "choices": [
            "6cm",
            "5cm",
            "4cm",
            "2cm"
        ],
        "unit": null,
        "precision": null,
        "answer": "2cm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "286",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 250,
            "img_height": 82,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5c06\u4e00\u6839\u957f\u5ea6\u4e3a8cm\uff0c\u81ea\u7136\u4f38\u76f4\u7684\u5f39\u6027\u76ae\u7b4bAB\u4e24\u7aef\u56fa\u5b9a\u5728\u6c34\u5e73\u7684\u684c\u9762\u4e0a\uff0c\u7136\u540e\u628a\u76ae\u7b4b\u4e2d\u70b9C\u7ad6\u76f4\u5411\u4e0a\u62c9\u53473cm\u5230\u70b9D\uff0c\u5219\u6b64\u65f6\u8be5\u5f39\u6027\u76ae\u7b4b\u88ab\u62c9\u957f\u4e86\uff08\uff09\nChoices:\n(A) 6cm\n(B) 5cm\n(C) 4cm\n(D) 2cm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_AB = 8\ndistance_CD = 3\n\nlength_AD = length_AB + distance_CD\nlength_BC = length_AB - distance_CD\n\nelongation = length_AD - length_AB\n\nprint(elongation)",
        "execution": "3",
        "error": "None",
        "extraction": "6",
        "prediction": "6cm",
        "true_false": false
    },
    "287": {
        "question": "Which region is larger? R1 or R2?\nA. R1\nB. R2",
        "image": "images/287.jpg",
        "choices": [
            "R1",
            "R2",
            "R5",
            "R3",
            "R4"
        ],
        "unit": null,
        "precision": null,
        "answer": "R2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "287",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 370,
            "img_height": 325,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which region is larger? R1 or R2?\nA. R1\nB. R2\nChoices:\n(A) R1\n(B) R2\n(C) R5\n(D) R3\n(E) R4\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "R1_area = 100\nR2_area = 150\n\nif R1_area > R2_area:\n    print(\"R1\")\nelse:\n    print(\"R2\")",
        "execution": "R2",
        "error": "None",
        "extraction": "R2",
        "prediction": "R2",
        "true_false": true
    },
    "288": {
        "question": "In which of the following value ranges of \u03bb2 does the percentage of Attack Effectiveness begin to be lower than that of Diversity?",
        "image": "images/288.jpg",
        "choices": [
            "0.0 - 0.2",
            "0.2 - 0.4",
            "0.4 - 0.6",
            "0.6 - 0.8",
            "0.8 - 1.0"
        ],
        "unit": null,
        "precision": null,
        "answer": "0.0 - 0.2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "288",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2144,
            "img_height": 606,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In which of the following value ranges of \u03bb2 does the percentage of Attack Effectiveness begin to be lower than that of Diversity?\nChoices:\n(A) 0.0 - 0.2\n(B) 0.2 - 0.4\n(C) 0.4 - 0.6\n(D) 0.6 - 0.8\n(E) 0.8 - 1.0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_effectiveness(lambda2):\n    attack_effectiveness = [0.9, 0.85, 0.8, 0.75, 0.7]\n    diversity = [0.95, 0.9, 0.85, 0.8, 0.75]\n\n    for i in range(len(attack_effectiveness)):\n        if attack_effectiveness[i] < diversity[i]:\n            return i\n\n    return -1\n\nlambda2_ranges = [(0.0, 0.2), (0.2, 0.4), (0.4, 0.6), (0.6, 0.8), (0.8, 1.0)]\n\nfor i in range(len(lambda2_ranges)):\n    start, end = lambda2_ranges[i]\n    if compare_effectiveness(start) == i:\n        print(f\"The percentage of Attack Effectiveness begins to be lower than that of Diversity in the range {start} - {end}\")\n        break",
        "execution": "The percentage of Attack Effectiveness begins to be lower than that of Diversity in the range 0.0 - 0.2",
        "error": "None",
        "extraction": "(0.4, 0.6)",
        "prediction": "0.4 - 0.6",
        "true_false": false
    },
    "289": {
        "question": "Fill in the blank to describe the model. The model has 4 dots divided into 2 equal groups. There are (_) dots in each group.",
        "image": "images/289.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "289",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 418,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fill in the blank to describe the model. The model has 4 dots divided into 2 equal groups. There are (_) dots in each group.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dots = 4\ngroups = 2\ndots_in_each_group = dots // groups\nprint(dots_in_each_group)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "290": {
        "question": "\u5982\u56fe\uff0c\u5e73\u884c\u7ebfAB\uff0cCD\u88ab\u76f4\u7ebfAE\u6240\u622a\uff0e\u82e5\u22201\uff1d105\u00b0\uff0c\u5219\u22202\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/290.jpg",
        "choices": [
            "75\u00b0",
            "85\u00b0",
            "95\u00b0",
            "105\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "75\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "290",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 132,
            "img_height": 119,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5e73\u884c\u7ebfAB\uff0cCD\u88ab\u76f4\u7ebfAE\u6240\u622a\uff0e\u82e5\u22201\uff1d105\u00b0\uff0c\u5219\u22202\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 75\u00b0\n(B) 85\u00b0\n(C) 95\u00b0\n(D) 105\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the angles\nangle_1 = sp.Symbol('angle_1')\nangle_2 = sp.Symbol('angle_2')\n\n# Define the equation\neq = sp.Eq(angle_1, 105)\n\n# Solve the equation\nsolutions = sp.solve(eq, angle_2)\n\n# Print the solutions\nfor solution in solutions:\n    print(solution)",
        "execution": "",
        "error": "None",
        "extraction": "105",
        "prediction": "105\u00b0",
        "true_false": false
    },
    "291": {
        "question": "In which period the number of full time employees is the maximum?",
        "image": "images/291.jpg",
        "choices": [
            "Jul '21",
            "Jun '21",
            "Mar '21",
            "May '21",
            "Apr '21"
        ],
        "unit": null,
        "precision": null,
        "answer": "May '21",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "291",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In which period the number of full time employees is the maximum?\nChoices:\n(A) Jul '21\n(B) Jun '21\n(C) Mar '21\n(D) May '21\n(E) Apr '21\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\ndata = {\n    'Period': ['Apr \\'21', 'May \\'21', 'Jun \\'21', 'Jul \\'21', 'Aug \\'21'],\n    'Full Time Employees': [100, 150, 200, 180, 160]\n}\n\ndf = pd.DataFrame(data)\n\nmax_employees = df['Full Time Employees'].max()\nmax_period = df[df['Full Time Employees'] == max_employees]['Period'].values[0]\n\nprint(max_period)",
        "execution": "Jun '21",
        "error": "None",
        "extraction": "Jun '21",
        "prediction": "Jun '21",
        "true_false": false
    },
    "292": {
        "question": "Is Rebecca Purple greater than Olive Drab?",
        "image": "images/292.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "292",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 461,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Rebecca Purple greater than Olive Drab?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "rebecca_purple = 0x663399\nolive_drab = 0x6B8E23\n\nif rebecca_purple > olive_drab:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "293": {
        "question": "From the above food web diagram, grasshopper population increase if",
        "image": "images/293.jpg",
        "choices": [
            "grouse decrease",
            "chipmunk increases",
            "grasses increases",
            "elk increase"
        ],
        "unit": null,
        "precision": null,
        "answer": "grasses increases",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "293",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 456,
            "img_height": 156,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: From the above food web diagram, grasshopper population increase if\nChoices:\n(A) grouse decrease\n(B) chipmunk increases\n(C) grasses increases\n(D) elk increase\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def grasshopper_population_increase(grouse, chipmunk, grasses, elk):\n    if grouse < 0 or chipmunk < 0 or grasses < 0 or elk < 0:\n        return \"Invalid input\"\n\n    if grouse > 0 and chipmunk > 0 and grasses > 0 and elk > 0:\n        return \"No effect\"\n\n    if grouse <= 0 and chipmunk > 0 and grasses > 0 and elk > 0:\n        return \"Grasshopper population will increase\"\n\n    return \"No effect\"\n\ngrouse = 0\nchipmunk = 1\ngrasses = 1\nelk = 1\n\nprint(grasshopper_population_increase(grouse, chipmunk, grasses, elk))",
        "execution": "Grasshopper population will increase",
        "error": "None",
        "extraction": "Grasshopper population will increase",
        "prediction": "grasses increases",
        "true_false": true
    },
    "294": {
        "question": "In Fig. 21-25, the particles have charges $q_1=-q_2=100 \\mathrm{nC}$ and $q_3=-q_4=200 \\mathrm{nC}$, and distance $a=$ $5.0 \\mathrm{~cm}$. What is the $x$ component of the net electrostatic force on particle 3?",
        "image": "images/294.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.17",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "294",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 247,
            "img_height": 293,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In Fig. 21-25, the particles have charges $q_1=-q_2=100 \\mathrm{nC}$ and $q_3=-q_4=200 \\mathrm{nC}$, and distance $a=$ $5.0 \\mathrm{~cm}$. What is the $x$ component of the net electrostatic force on particle 3?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "q1 = -100e-9\nq2 = 100e-9\nq3 = -200e-9\nq4 = 200e-9\na = 5e-2\n\nk = 9e9\n\nF13 = k * abs(q1) * abs(q3) / a**2\nF23 = k * abs(q2) * abs(q3) / a**2\nF43 = k * abs(q4) * abs(q3) / a**2\n\nF_net_x = F13 + F23 + F43\nprint(F_net_x)",
        "execution": "0.2879999999999999",
        "error": "None",
        "extraction": "0.00072",
        "prediction": "0.0",
        "true_false": false
    },
    "295": {
        "question": "Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.",
        "image": "images/295.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "295",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 633,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dots_in_each_group = 9 // 3\nprint(dots_in_each_group)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "296": {
        "question": "The value of f(-3) is ____ the value of f(2)",
        "image": "images/296.jpg",
        "choices": [
            "larger than",
            "equal to",
            "smaller than"
        ],
        "unit": null,
        "precision": null,
        "answer": "equal to",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "296",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1430,
            "img_height": 776,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The value of f(-3) is ____ the value of f(2)\nChoices:\n(A) larger than\n(B) equal to\n(C) smaller than\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def f(x):\n    return x**2 + 2*x + 1\n\nf_minus_3 = f(-3)\nf_2 = f(2)\n\nif f_minus_3 > f_2:\n    ans = \"(A) larger than\"\nelif f_minus_3 == f_2:\n    ans = \"(B) equal to\"\nelse:\n    ans = \"(C) smaller than\"\n\nprint(\"The value of f(-3) is\", ans, \"the value of f(2)\")",
        "execution": "The value of f(-3) is (C) smaller than the value of f(2)",
        "error": "None",
        "extraction": "(B) equal to",
        "prediction": "equal to",
        "true_false": true
    },
    "297": {
        "question": "Is the number of green buss greater than the number of blue school buss?",
        "image": "images/297.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "297",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of green buss greater than the number of blue school buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "green_buses = 10\nblue_school_buses = 8\n\nif green_buses > blue_school_buses:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "298": {
        "question": "A decrease in rabbits would affect whose food source?",
        "image": "images/298.jpg",
        "choices": [
            "mountain lion",
            "producer",
            "decomposer",
            "energy"
        ],
        "unit": null,
        "precision": null,
        "answer": "mountain lion",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "298",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 768,
            "img_height": 699,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A decrease in rabbits would affect whose food source?\nChoices:\n(A) mountain lion\n(B) producer\n(C) decomposer\n(D) energy\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def affect_food_source(decrease_rabbits):\n    if decrease_rabbits:\n        return \"mountain lion\"\n    else:\n        return \"producer\"\n\ndecrease_rabbits = True\nprint(affect_food_source(decrease_rabbits))",
        "execution": "mountain lion",
        "error": "None",
        "extraction": "mountain lion",
        "prediction": "mountain lion",
        "true_false": true
    },
    "299": {
        "question": "What is the age gap between the center and the rightmost person?",
        "image": "images/299.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "22",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "299",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1600,
            "img_height": 1067,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between the center and the rightmost person? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "center_age = 30\nrightmost_age = 45\n\nage_gap = rightmost_age - center_age\nprint(age_gap)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "300": {
        "question": "$\\overline{HK}$ and $\\overline{IG}$ are diameters of $\\odot L$. Find $m \\widehat {IHJ}$.",
        "image": "images/300.jpg",
        "choices": [
            "59",
            "135",
            "270",
            "301"
        ],
        "unit": null,
        "precision": null,
        "answer": "270",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "300",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 510,
            "img_height": 492,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: $\\overline{HK}$ and $\\overline{IG}$ are diameters of $\\odot L$. Find $m \\widehat {IHJ}$.\nChoices:\n(A) 59\n(B) 135\n(C) 270\n(D) 301\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(HK, IG):\n    radius = HK / 2\n    diameter = 2 * radius\n    circumference = math.pi * diameter\n    arc_length = circumference / 2\n    angle = (arc_length / circumference) * 360\n    return angle\n\nHK = 10\nIG = 8\n\nprint(find_angle(HK, IG))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "135",
        "prediction": "135",
        "true_false": false
    },
    "301": {
        "question": "Which model performs the best overall across the three stages in terms of Messenger training performance?",
        "image": "images/301.jpg",
        "choices": [
            "Dynalang",
            "EMMA",
            "R2D2",
            "IMPALA"
        ],
        "unit": null,
        "precision": null,
        "answer": "Dynalang",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "301",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2012,
            "img_height": 524,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which model performs the best overall across the three stages in terms of Messenger training performance?\nChoices:\n(A) Dynalang\n(B) EMMA\n(C) R2D2\n(D) IMPALA\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def best_model_performance(stage1, stage2, stage3):\n    models_performance = {\n        'Dynalang': (stage1, stage2, stage3),\n        'EMMA': (stage1, stage2, stage3),\n        'R2D2': (stage1, stage2, stage3),\n        'IMPALA': (stage1, stage2, stage3)\n    }\n\n    best_model = ''\n    best_performance = 0\n\n    for model, performance in models_performance.items():\n        avg_performance = sum(performance) / len(performance)\n        if avg_performance > best_performance:\n            best_model = model\n            best_performance = avg_performance\n\n    return best_model\n\nstage1_performance = 0.8\nstage2_performance = 0.9\nstage3_performance = 0.85\n\nprint(best_model_performance(stage1_performance, stage2_performance, stage3_performance))",
        "execution": "Dynalang",
        "error": "None",
        "extraction": "EMMA",
        "prediction": "EMMA",
        "true_false": false
    },
    "302": {
        "question": "What is the green curve?",
        "image": "images/302.jpg",
        "choices": [
            "a polynomial",
            "a trigonometric function",
            "an exponential function",
            "a logarithmic function"
        ],
        "unit": null,
        "precision": null,
        "answer": "a logarithmic function",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "302",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 531,
            "img_height": 300,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the green curve?\nChoices:\n(A) a polynomial\n(B) a trigonometric function\n(C) an exponential function\n(D) a logarithmic function\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-10, 10, 100)\ny = np.sin(x)\n\nplt.plot(x, y, color='green')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Green Curve')\nplt.grid(True)\nplt.show()",
        "execution": "",
        "error": "None",
        "extraction": "(B) a trigonometric function",
        "prediction": "a trigonometric function",
        "true_false": false
    },
    "303": {
        "question": "Is Lime Green less than Dim Gray?",
        "image": "images/303.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "303",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 797,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Lime Green less than Dim Gray?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "lime_green = \"Lime Green\"\ndim_gray = \"Dim Gray\"\n\nif lime_green < dim_gray:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "304": {
        "question": "In the figure above, two line segments meet at a point on line l. If the value of y is equal to the square of the value of x, what is the value of y?",
        "image": "images/304.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "100",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "304",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 431,
            "img_height": 247,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, two line segments meet at a point on line l. If the value of y is equal to the square of the value of x, what is the value of y?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x = 2\ny = x**2\nprint(y)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "305": {
        "question": "How many people prefer the most preferred object?",
        "image": "images/305.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "305",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people prefer the most preferred object?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_preferred(preferences):\n    preferred_object = max(preferences, key=preferences.get)\n    count = 0\n    for object, preference in preferences.items():\n        if preference == preferences[preferred_object]:\n            count += 1\n    return count\n\npreferences = {\n    'object1': 5,\n    'object2': 3,\n    'object3': 5,\n    'object4': 2,\n    'object5': 1\n}\n\nprint(count_preferred(preferences))",
        "execution": "2",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "306": {
        "question": "Is the bed much larger than the kitten?",
        "image": "images/306.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "306",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the bed much larger than the kitten?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bed_size = 10\nkitten_size = 2\n\nif bed_size > kitten_size:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "307": {
        "question": "Figure is an overhead view of the path taken by a race car driver as his car collides with the racetrack wall. Just before the collision, he is traveling at speed $v_i=70 \\mathrm{~m} / \\mathrm{s}$ along a straight line at $30^{\\circ}$ from the wall. Just after the collision, he is traveling at speed $v_f=50 \\mathrm{~m} / \\mathrm{s}$ along a straight line at $10^{\\circ}$ from the wall. His mass $m$ is $80 \\mathrm{~kg}$. The collision lasts for $14 \\mathrm{~ms}$. What is the magnitude of the average force on the driver during the collision?",
        "image": "images/307.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "2.58",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "307",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 772,
            "img_height": 466,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning",
                "arithmetic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Figure is an overhead view of the path taken by a race car driver as his car collides with the racetrack wall. Just before the collision, he is traveling at speed $v_i=70 \\mathrm{~m} / \\mathrm{s}$ along a straight line at $30^{\\circ}$ from the wall. Just after the collision, he is traveling at speed $v_f=50 \\mathrm{~m} / \\mathrm{s}$ along a straight line at $10^{\\circ}$ from the wall. His mass $m$ is $80 \\mathrm{~kg}$. The collision lasts for $14 \\mathrm{~ms}$. What is the magnitude of the average force on the driver during the collision?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nvi = 70  # initial velocity in m/s\nvf = 50  # final velocity in m/s\ntheta_i = math.radians(30)  # initial angle in radians\ntheta_f = math.radians(10)  # final angle in radians\nm = 80  # mass in kg\nt = 14 / 1000  # collision duration in seconds\n\n# Calculate the change in momentum\ndelta_p = m * (vf * math.cos(theta_f) - vi * math.cos(theta_i))\n\n# Calculate the average force\navg_force = delta_p / t\n\nprint(avg_force)",
        "execution": "-65036.51779600176",
        "error": "None",
        "extraction": "avg_force",
        "prediction": null,
        "true_false": false
    },
    "308": {
        "question": "What is this function most likely be?",
        "image": "images/308.jpg",
        "choices": [
            "a polynomial",
            "a trigonometric function",
            "an exponential function",
            "a logarithmic function"
        ],
        "unit": null,
        "precision": null,
        "answer": "a trigonometric function",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "308",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 482,
            "img_height": 276,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is this function most likely be?\nChoices:\n(A) a polynomial\n(B) a trigonometric function\n(C) an exponential function\n(D) a logarithmic function\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef function_type(x):\n    if x < 0:\n        return \"a logarithmic function\"\n    elif x == 0:\n        return \"an exponential function\"\n    elif x > 0 and x <= math.pi/2:\n        return \"a trigonometric function\"\n    else:\n        return \"a polynomial\"\n\nx = 1.5\nprint(function_type(x))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "a trigonometric function",
        "prediction": "a trigonometric function",
        "true_false": true
    },
    "309": {
        "question": "The movie critic liked to count the number of actors in each movie he saw. How many movies had at least 30 actors but fewer than 47 actors? (Unit: movies)",
        "image": "images/309.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "309",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 131,
            "img_height": 136,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The movie critic liked to count the number of actors in each movie he saw. How many movies had at least 30 actors but fewer than 47 actors? (Unit: movies)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "movies = [\n    {'title': 'Movie 1', 'actors': 25},\n    {'title': 'Movie 2', 'actors': 30},\n    {'title': 'Movie 3', 'actors': 35},\n    {'title': 'Movie 4', 'actors': 40},\n    {'title': 'Movie 5', 'actors': 45},\n    {'title': 'Movie 6', 'actors': 50},\n    {'title': 'Movie 7', 'actors': 55},\n    {'title': 'Movie 8', 'actors': 60},\n]\n\ncount = 0\nfor movie in movies:\n    if movie['actors'] >= 30 and movie['actors'] < 47:\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "310": {
        "question": "Find z",
        "image": "images/310.jpg",
        "choices": [
            "10",
            "\\frac { 32 } { 3 }",
            "\\frac { 40 } { 3 }",
            "\\frac { 50 } { 3 }"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac { 40 } { 3 }",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "310",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 350,
            "img_height": 218,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find z\nChoices:\n(A) 10\n(B) \\frac { 32 } { 3 }\n(C) \\frac { 40 } { 3 }\n(D) \\frac { 50 } { 3 }\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nz = sp.symbols('z')\neq = sp.Eq(2*z - 5, 3*z + 1)\nsolution = sp.solve(eq, z)\n\nprint(solution)",
        "execution": "[-6]",
        "error": "None",
        "extraction": "[10]",
        "prediction": "10",
        "true_false": false
    },
    "311": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/311.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "311",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1620,
            "img_height": 1947,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "312": {
        "question": "An Idaho farmer has been monitoring crop prices over time. In 2003, which crop cost the most per cwt?'",
        "image": "images/312.jpg",
        "choices": [
            "potatoes",
            "peas",
            "apples",
            "canola"
        ],
        "unit": null,
        "precision": null,
        "answer": "apples",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "312",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 204,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: An Idaho farmer has been monitoring crop prices over time. In 2003, which crop cost the most per cwt?'\nChoices:\n(A) potatoes\n(B) peas\n(C) apples\n(D) canola\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "crop_prices = {\n    'potatoes': 10.00,\n    'peas': 8.00,\n    'apples': 12.00,\n    'canola': 9.00\n}\n\nmax_price = max(crop_prices, key=crop_prices.get)\nprint(max_price)",
        "execution": "apples",
        "error": "None",
        "extraction": "apples",
        "prediction": "apples",
        "true_false": true
    },
    "313": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/313.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "313",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 334,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "314": {
        "question": "Is Crimson the minimum?",
        "image": "images/314.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "314",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 522,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Crimson the minimum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_crimson_minimum(colors):\n    if \"crimson\" in colors:\n        return \"yes\"\n    else:\n        return \"no\"\n\ncolors = ['crimson', 'blue', 'green', 'yellow']\nprint(is_crimson_minimum(colors))",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "315": {
        "question": "In the diagram above, angle A is congruent to angle BED, and angle C is congruent to angle D. If the ratio of the length of AB to the length of EB is 5:1, and the area of the triangle BED is 5*a^2 + 10, what is the area of triangle ABC?",
        "image": "images/315.jpg",
        "choices": [
            "5*a^2 + 10",
            "25*a^2 + 50",
            "25*a^2 + 100",
            "125*a^2 + 250",
            "cannot be determined"
        ],
        "unit": null,
        "precision": null,
        "answer": "125*a^2 + 250",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "315",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 749,
            "img_height": 463,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the diagram above, angle A is congruent to angle BED, and angle C is congruent to angle D. If the ratio of the length of AB to the length of EB is 5:1, and the area of the triangle BED is 5*a^2 + 10, what is the area of triangle ABC?\nChoices:\n(A) 5*a^2 + 10\n(B) 25*a^2 + 50\n(C) 25*a^2 + 100\n(D) 125*a^2 + 250\n(E) cannot be determined\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\na = sp.symbols('a')\nAB = 5*a\nEB = a\n\narea_BED = 5*a**2 + 10\narea_ABC = sp.Rational(1,2) * AB * EB * sp.sin(sp.pi - angle_BED)\n\narea_ABC = area_ABC.subs(AB, 5*a)\narea_ABC = area_ABC.subs(EB, a)\narea_ABC = area_ABC.subs(angle_BED, angle_A)\n\narea_ABC = sp.simplify(area_ABC)\narea_ABC = sp.expand(area_ABC)\n\narea_ABC",
        "execution": "",
        "error": "name 'angle_BED' is not defined",
        "extraction": "25*a^2 + 50",
        "prediction": "25*a^2 + 50",
        "true_false": false
    },
    "316": {
        "question": "As shown in the figure, given that points A, B, and C are on \u2299O, \u2220AOB = 100.0, then the degree of \u2220ACB is ()",
        "image": "images/316.jpg",
        "choices": [
            "50\u00b0",
            "80\u00b0",
            "100\u00b0",
            "200\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "50\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "316",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 105,
            "img_height": 118,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, given that points A, B, and C are on \u2299O, \u2220AOB = 100.0, then the degree of \u2220ACB is ()\nChoices:\n(A) 50\u00b0\n(B) 80\u00b0\n(C) 100\u00b0\n(D) 200\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_of_C(AOB):\n    angle_ACB = 360 - (2 * AOB)\n    return angle_ACB\n\nAOB = 100.0\nangle_ACB = angle_of_C(AOB)\nprint(angle_ACB)",
        "execution": "160.0",
        "error": "None",
        "extraction": "80",
        "prediction": "80\u00b0",
        "true_false": false
    },
    "317": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/317.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "317",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 496,
            "img_height": 361,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "318": {
        "question": "Find the area of the figure. Round to the nearest tenth if necessary.",
        "image": "images/318.jpg",
        "choices": [
            "191.5",
            "1128",
            "2256",
            "4512"
        ],
        "unit": null,
        "precision": null,
        "answer": "2256",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "318",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 239,
            "img_height": 175,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the area of the figure. Round to the nearest tenth if necessary.\nChoices:\n(A) 191.5\n(B) 1128\n(C) 2256\n(D) 4512\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_area(length, width):\n    area = length * width\n    return round(area, 1)\n\nlength = 17.5\nwidth = 12.9\n\nprint(find_area(length, width))",
        "execution": "225.8",
        "error": "None",
        "extraction": "207.5",
        "prediction": "191.5",
        "true_false": false
    },
    "319": {
        "question": "Would most of the ground cover be considered weeds?",
        "image": "images/319.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "319",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Would most of the ground cover be considered weeds?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_weeds(ground_cover):\n    weed_count = 0\n    for cover in ground_cover:\n        if cover == \"weed\":\n            weed_count += 1\n    if weed_count > len(ground_cover) / 2:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nground_cover = ['grass', 'weed', 'weed', 'flower', 'weed']\nprint(count_weeds(ground_cover))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "320": {
        "question": "\u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u2220C\uff1d90\u00b0\uff0cAB\uff1d13\uff0cAC\uff1d5\uff0cD\u3001E\u5206\u522b\u662fAC\u3001AB\u7684\u4e2d\u70b9\uff0c\u5219DE\u7684\u957f\u662f\uff08\uff09",
        "image": "images/320.jpg",
        "choices": [
            "6.5",
            "6",
            "5.5",
            "\\frac{\u221a{119}}{2}"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "320",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 170,
            "img_height": 90,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u2220C\uff1d90\u00b0\uff0cAB\uff1d13\uff0cAC\uff1d5\uff0cD\u3001E\u5206\u522b\u662fAC\u3001AB\u7684\u4e2d\u70b9\uff0c\u5219DE\u7684\u957f\u662f\uff08\uff09\nChoices:\n(A) 6.5\n(B) 6\n(C) 5.5\n(D) \\frac{\u221a{119}}{2}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAB = 13\nAC = 5\n\nDE = math.sqrt((AB/2)**2 + (AC/2)**2)\nprint(DE)",
        "execution": "6.96419413859206",
        "error": "None",
        "extraction": "6.5",
        "prediction": "6.5",
        "true_false": false
    },
    "321": {
        "question": "Look at the table. Then answer the question. At a price of $330, is there a shortage or a surplus?'",
        "image": "images/321.jpg",
        "choices": [
            "shortage",
            "surplus"
        ],
        "unit": null,
        "precision": null,
        "answer": "surplus",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "321",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 353,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Look at the table. Then answer the question. At a price of $330, is there a shortage or a surplus?'\nChoices:\n(A) shortage\n(B) surplus\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "price = 330\ndemand = 400\nsupply = 350\n\nif price < demand:\n    print(\"shortage\")\nelif price > supply:\n    print(\"surplus\")\nelse:\n    print(\"neither shortage nor surplus\")",
        "execution": "shortage",
        "error": "None",
        "extraction": "neither shortage nor surplus",
        "prediction": "shortage",
        "true_false": false
    },
    "322": {
        "question": "\u5982\u56fe\uff0cA\uff0cB\u4e24\u70b9\u88ab\u6c60\u5858\u9694\u5f00\uff0c\u5728AB\u5916\u9009\u4e00\u70b9C\uff0c\u4f7f\u70b9C\u80fd\u76f4\u63a5\u5230\u8fbe\u70b9A\u548c\u70b9B\uff0c\u8fde\u63a5AC\u548cBC\uff0c\u5e76\u5206\u522b\u627e\u51faAC\u548cBC\u7684\u4e2d\u70b9M\uff0cN\uff0e\u5982\u679c\u6d4b\u5f97MN\uff1d20m\uff0c\u90a3\u4e48A\uff0cB\u4e24\u70b9\u7684\u8ddd\u79bb\u662f\uff08\uff09",
        "image": "images/322.jpg",
        "choices": [
            "10m",
            "20m",
            "35m",
            "40m"
        ],
        "unit": null,
        "precision": null,
        "answer": "40m",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "322",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 148,
            "img_height": 107,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cA\uff0cB\u4e24\u70b9\u88ab\u6c60\u5858\u9694\u5f00\uff0c\u5728AB\u5916\u9009\u4e00\u70b9C\uff0c\u4f7f\u70b9C\u80fd\u76f4\u63a5\u5230\u8fbe\u70b9A\u548c\u70b9B\uff0c\u8fde\u63a5AC\u548cBC\uff0c\u5e76\u5206\u522b\u627e\u51faAC\u548cBC\u7684\u4e2d\u70b9M\uff0cN\uff0e\u5982\u679c\u6d4b\u5f97MN\uff1d20m\uff0c\u90a3\u4e48A\uff0cB\u4e24\u70b9\u7684\u8ddd\u79bb\u662f\uff08\uff09\nChoices:\n(A) 10m\n(B) 20m\n(C) 35m\n(D) 40m\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef distance_between_points(MN):\n    AB = 2 * MN\n    return AB\n\nMN = 20\nAB = distance_between_points(MN)\nprint(AB)",
        "execution": "40",
        "error": "None",
        "extraction": "40m",
        "prediction": "40m",
        "true_false": true
    },
    "323": {
        "question": "Craig just downloaded the new game Gem Excavator on his phone. In the first level, Craig gains points for each green gem he finds. However, he loses points for each red gem he finds. The table shows how the gems affect Craig's points. Which color gem affects Craig's points less?'",
        "image": "images/323.jpg",
        "choices": [
            "green",
            "red"
        ],
        "unit": null,
        "precision": null,
        "answer": "green",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "323",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 230,
            "img_height": 94,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Craig just downloaded the new game Gem Excavator on his phone. In the first level, Craig gains points for each green gem he finds. However, he loses points for each red gem he finds. The table shows how the gems affect Craig's points. Which color gem affects Craig's points less?'\nChoices:\n(A) green\n(B) red\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "green_points = 10\nred_points = -5\n\nif green_points < red_points:\n    print(\"Green gem affects Craig's points less\")\nelse:\n    print(\"Red gem affects Craig's points less\")",
        "execution": "Red gem affects Craig's points less",
        "error": "None",
        "extraction": "Red",
        "prediction": "red",
        "true_false": false
    },
    "324": {
        "question": "What is the difference between highest and lowest value of dark blue bar?",
        "image": "images/324.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "53",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "324",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 726,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between highest and lowest value of dark blue bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dark_blue_bar_values = [10, 15, 12, 8, 20]\ndifference = max(dark_blue_bar_values) - min(dark_blue_bar_values)\nprint(difference)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "325": {
        "question": "Does Web Purple have the maximum area under the curve?",
        "image": "images/325.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "325",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Web Purple have the maximum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate x values from 0 to 10 with a step of 0.1\nx = np.arange(0, 10, 0.1)\n\n# Define the function for the curve\ndef curve(x):\n    return x**2\n\n# Calculate the y values for the curve\ny = curve(x)\n\n# Plot the curve\nplt.plot(x, y)\n\n# Calculate the area under the curve using the trapezoidal rule\narea = np.trapz(y, x)\n\n# Check if Web Purple has the maximum area under the curve\nif area == np.max(area):\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "326": {
        "question": "Move the ruler to measure the length of the pencil to the nearest inch. The pencil is about (_) inches long.",
        "image": "images/326.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "326",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 170,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the pencil to the nearest inch. The pencil is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "pencil_length = 7.5\nnearest_inch = round(pencil_length)\nprint(nearest_inch)",
        "execution": "8",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "327": {
        "question": "How many items sold less than 1 units in at least one store?",
        "image": "images/327.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "327",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many items sold less than 1 units in at least one store?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "items_sold = {\n    'item1': [2, 3, 0, 1],\n    'item2': [1, 0, 0, 2],\n    'item3': [0, 0, 0, 0],\n    'item4': [1, 1, 1, 1]\n}\n\ncount = 0\nfor item in items_sold:\n    if min(items_sold[item]) < 1:\n        count += 1\n\nprint(count)",
        "execution": "3",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "328": {
        "question": "What is the sum of accuracies of the algorithm candy for all the datasets?",
        "image": "images/328.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "328",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of accuracies of the algorithm candy for all the datasets?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dataset1_accuracy = 0.85\ndataset2_accuracy = 0.92\ndataset3_accuracy = 0.78\n\nsum_of_accuracies = dataset1_accuracy + dataset2_accuracy + dataset3_accuracy\nprint(sum_of_accuracies)",
        "execution": "2.55",
        "error": "None",
        "extraction": "2.55",
        "prediction": null,
        "true_false": false
    },
    "329": {
        "question": "The derivative of y at x=6 is ____ that at x=8",
        "image": "images/329.jpg",
        "choices": [
            "larger than",
            "equal to",
            "smaller than"
        ],
        "unit": null,
        "precision": null,
        "answer": "larger than",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "329",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2560,
            "img_height": 2039,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The derivative of y at x=6 is ____ that at x=8\nChoices:\n(A) larger than\n(B) equal to\n(C) smaller than\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\ny = x**2\n\nderivative_at_6 = sp.diff(y, x).subs(x, 6)\nderivative_at_8 = sp.diff(y, x).subs(x, 8)\n\nif derivative_at_6 > derivative_at_8:\n    ans = \"(A) larger than\"\nelif derivative_at_6 == derivative_at_8:\n    ans = \"(B) equal to\"\nelse:\n    ans = \"(C) smaller than\"\n\nprint(ans)",
        "execution": "(C) smaller than",
        "error": "None",
        "extraction": "(B) equal to",
        "prediction": "equal to",
        "true_false": false
    },
    "330": {
        "question": "Subtract all tiny cubes. Subtract all brown balls. How many objects are left?",
        "image": "images/330.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "330",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny cubes. Subtract all brown balls. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_cubes = 10\nbrown_balls = 5\n\nobjects_left = tiny_cubes - brown_balls\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "331": {
        "question": "Several people compared how many Web pages they had visited. What is the mean of the numbers?'",
        "image": "images/331.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "64",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "331",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 246,
            "img_height": 311,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Several people compared how many Web pages they had visited. What is the mean of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [10, 15, 20, 25, 30]\n\nmean = sum(numbers) / len(numbers)\nprint(mean)",
        "execution": "20.0",
        "error": "None",
        "extraction": "17.0",
        "prediction": null,
        "true_false": false
    },
    "332": {
        "question": "A taxi cab driver tracked how many miles he drove each month. How many miles did the taxi cab driver drive in total in January and April? (Unit: miles)",
        "image": "images/332.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7873",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "332",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 125,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A taxi cab driver tracked how many miles he drove each month. How many miles did the taxi cab driver drive in total in January and April? (Unit: miles)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "january_miles = 500\napril_miles = 700\n\ntotal_miles = january_miles + april_miles\nprint(total_miles)",
        "execution": "1200",
        "error": "None",
        "extraction": "1200",
        "prediction": "1200",
        "true_false": false
    },
    "333": {
        "question": "Find tan X",
        "image": "images/333.jpg",
        "choices": [
            "\\frac { 5 } { 12 }",
            "\\frac { 12 } { 13 }",
            "\\frac { 17 } { 12 }",
            "\\frac { 12 } { 5 }"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac { 5 } { 12 }",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "333",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 297,
            "img_height": 149,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find tan X\nChoices:\n(A) \\frac { 5 } { 12 }\n(B) \\frac { 12 } { 13 }\n(C) \\frac { 17 } { 12 }\n(D) \\frac { 12 } { 5 }\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nx = math.atan(5/12)\ntan_x = math.tan(x)\n\nprint(tan_x)",
        "execution": "0.4166666666666667",
        "error": "None",
        "extraction": "0.4166666666666667",
        "prediction": "\\frac { 5 } { 12 }",
        "true_false": true
    },
    "334": {
        "question": "Are there fewer yellow metal tandem bikes in front of the small yellow metallic bicycle than metal bicycles on the left side of the large brown jet?",
        "image": "images/334.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "334",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer yellow metal tandem bikes in front of the small yellow metallic bicycle than metal bicycles on the left side of the large brown jet?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_tandem_bikes = 2\nyellow_metallic_bicycle = 1\nmetal_bicycles_left = 3\n\nif yellow_metallic_bicycle < metal_bicycles_left:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\n\nprint(ans)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "335": {
        "question": "Subtract all large brown matte balls. Subtract all blue cylinders. How many objects are left?",
        "image": "images/335.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "335",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large brown matte balls. Subtract all blue cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_brown_matte_balls = 5\nblue_cylinders = 3\n\nobjects_left = large_brown_matte_balls - blue_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "336": {
        "question": "What is the value of the largest individual bar in the whole chart?",
        "image": "images/336.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "336",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the largest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_bar(chart):\n    max_value = 0\n    for bar in chart:\n        if bar > max_value:\n            max_value = bar\n    return max_value\n\nchart = [5, 8, 3, 10, 6]\nprint(largest_bar(chart))",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "337": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) to eight.",
        "image": "images/337.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "337",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 95,
            "img_height": 95,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) to eight.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def time_shown(caption, choices):\n    time_words = {\n        'half': 'half',\n        'quarter': 'quarter',\n        'o\\'clock': 'o\\'clock',\n        'quarter to': 'quarter to',\n        'quarter past': 'quarter past'\n    }\n\n    for choice in choices:\n        if choice in caption:\n            return choice\n    return \"\"\n\nchoices = ['half', 'quarter', 'o\\'clock', 'quarter to', 'quarter past']\ncaption = \"The clock in the image shows that it is half past seven.\"\n\nprint(time_shown(caption, choices))",
        "execution": "half",
        "error": "None",
        "extraction": "half",
        "prediction": "half",
        "true_false": false
    },
    "338": {
        "question": "In triangle ABC above, AB = AC, E is the midpoint of line AB, and D is the midpoint of line AC. If AE = x and ED = 4, what is length BC?",
        "image": "images/338.jpg",
        "choices": [
            "6",
            "8",
            "2*x",
            "4*x",
            "4*x^2"
        ],
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "338",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 121,
            "img_height": 167,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In triangle ABC above, AB = AC, E is the midpoint of line AB, and D is the midpoint of line AC. If AE = x and ED = 4, what is length BC?\nChoices:\n(A) 6\n(B) 8\n(C) 2*x\n(D) 4*x\n(E) 4*x^2\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nBC = 2 * x + 4\nBC",
        "execution": "",
        "error": "None",
        "extraction": "2*x + 4",
        "prediction": "2*x",
        "true_false": false
    },
    "339": {
        "question": "\u5982\u56fe\uff0c\u5728\u2299O\u4e2d\uff0cAB=AC\uff0c\u2220BAC\uff1d70\u00b0\uff0c\u5219\u2220AEC\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/339.jpg",
        "choices": [
            "65\u00b0",
            "75\u00b0",
            "50\u00b0",
            "55\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "55\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "339",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 115,
            "img_height": 112,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u2299O\u4e2d\uff0cAB=AC\uff0c\u2220BAC\uff1d70\u00b0\uff0c\u5219\u2220AEC\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 65\u00b0\n(B) 75\u00b0\n(C) 50\u00b0\n(D) 55\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_BAC = 70\n    angle_ACB = (180 - angle_BAC) / 2\n    angle_AEC = 180 - angle_ACB - angle_BAC\n    return angle_AEC\n\nprint(find_angle())",
        "execution": "55.0",
        "error": "None",
        "extraction": "55",
        "prediction": "55\u00b0",
        "true_false": true
    },
    "340": {
        "question": "Which of the following domains has the most number of BPE Tokens?",
        "image": "images/340.jpg",
        "choices": [
            "Legal ",
            "Code ",
            "Conversational ",
            "Math ",
            "Science",
            "Books ",
            "News ",
            "Encyclopedic"
        ],
        "unit": null,
        "precision": null,
        "answer": "Science",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "340",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2142,
            "img_height": 1176,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which of the following domains has the most number of BPE Tokens?\nChoices:\n(A) Legal \n(B) Code \n(C) Conversational \n(D) Math \n(E) Science\n(F) Books \n(G) News \n(H) Encyclopedic\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Create a dictionary with the number of BPE tokens for each domain\ndomains_bpe_tokens = {\n    'Legal': 1000,\n    'Code': 1500,\n    'Conversational': 800,\n    'Math': 1200,\n    'Science': 900,\n    'Books': 1100,\n    'News': 1300,\n    'Encyclopedic': 1400\n}\n\n# Convert the dictionary to a pandas DataFrame\ndf = pd.DataFrame.from_dict(domains_bpe_tokens, orient='index', columns=['BPE Tokens'])\n\n# Find the domain with the maximum number of BPE tokens\nmax_tokens_domain = df['BPE Tokens'].idxmax()\n\nprint(max_tokens_domain)",
        "execution": "Code",
        "error": "None",
        "extraction": "News",
        "prediction": "News ",
        "true_false": false
    },
    "341": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is six (_).",
        "image": "images/341.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "o'clock",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "341",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 95,
            "img_height": 95,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is six (_).\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def time_shown(caption):\n    time_words = ['half', 'quarter', 'o\\'clock', 'to', 'past']\n\n    for word in time_words:\n        if word in caption:\n            return word\n    return \"\"\n\ncaption = \"The clock in the image shows the time as six o'clock.\"\nprint(time_shown(caption))",
        "execution": "o'clock",
        "error": "None",
        "extraction": "o'clock",
        "prediction": "o'clock",
        "true_false": true
    },
    "342": {
        "question": "In the figure above, which of the following is the greatest?",
        "image": "images/342.jpg",
        "choices": [
            "a",
            "b",
            "c",
            "d",
            "e"
        ],
        "unit": null,
        "precision": null,
        "answer": "d",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "342",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 405,
            "img_height": 299,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, which of the following is the greatest?\nChoices:\n(A) a\n(B) b\n(C) c\n(D) d\n(E) e\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def greatest_figure(choices):\n    figures = {\n        'a': 10,\n        'b': 15,\n        'c': 12,\n        'd': 8,\n        'e': 9\n    }\n\n    max_figure = max(figures.values())\n    for choice in choices:\n        if figures[choice] == max_figure:\n            return choice\n    return \"\"\n\nchoices = ['a', 'b', 'c', 'd', 'e']\nprint(greatest_figure(choices))",
        "execution": "b",
        "error": "None",
        "extraction": "1. 13\n2. shanghai\n3. b",
        "prediction": "a",
        "true_false": false
    },
    "343": {
        "question": "Subtract all small purple metallic spheres. Subtract all small purple things. How many objects are left?",
        "image": "images/343.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "343",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small purple metallic spheres. Subtract all small purple things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_purple_metallic_spheres = 5\nsmall_purple_things = 8\n\nobjects_left = small_purple_metallic_spheres - small_purple_things\nprint(objects_left)",
        "execution": "-3",
        "error": "None",
        "extraction": "-3",
        "prediction": "-3",
        "true_false": false
    },
    "344": {
        "question": "Is the number of metal cars that are left of the tiny matte school bus greater than the number of tiny cyan double buss?",
        "image": "images/344.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "344",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of metal cars that are left of the tiny matte school bus greater than the number of tiny cyan double buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_cars(left_metal_cars, tiny_cyan_double_buss):\n    if left_metal_cars > tiny_cyan_double_buss:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nleft_metal_cars = 5\ntiny_cyan_double_buss = 3\n\nprint(compare_cars(left_metal_cars, tiny_cyan_double_buss))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "345": {
        "question": "How many kites are there?",
        "image": "images/345.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "25",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "345",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 711,
            "img_height": 429,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many kites are there?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_kites(text):\n    count = 0\n    words = text.split()\n    for word in words:\n        if word.lower() == \"kite\" or word.lower() == \"kites\":\n            count += 1\n    return count\n\ntext = \"I saw three kites flying in the sky. The kites were colorful and beautiful.\"\nprint(count_kites(text))",
        "execution": "2",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "346": {
        "question": "What is the y-intercept of this function?",
        "image": "images/346.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "346",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 341,
            "img_height": 339,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the y-intercept of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.array([1, 2, 3, 4, 5])\ny = np.array([3, 5, 7, 9, 11])\n\nslope, intercept = np.polyfit(x, y, 1)\n\nprint(intercept)",
        "execution": "0.9999999999999996",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "347": {
        "question": "Is the number of green metallic double buss less than the number of big purple rubber cruisers?",
        "image": "images/347.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "347",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of green metallic double buss less than the number of big purple rubber cruisers?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_buses(green_buses, purple_buses):\n    if green_buses < purple_buses:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ngreen_buses = 5\npurple_buses = 8\n\nprint(compare_buses(green_buses, purple_buses))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "348": {
        "question": "Are the pieces in triangle cuts?",
        "image": "images/348.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "348",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 375,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are the pieces in triangle cuts?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def triangle_cuts(pieces):\n    for piece in pieces:\n        if \"triangle\" not in piece:\n            return \"No\"\n    return \"Yes\"\n\npieces = [\"triangle\", \"square\", \"circle\", \"triangle\"]\nprint(triangle_cuts(pieces))",
        "execution": "No",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "349": {
        "question": "Which capability boasts the highest proportion (%)?",
        "image": "images/349.jpg",
        "choices": [
            "Rec",
            "OCR",
            "Know",
            "Gen",
            "Spat",
            "Math"
        ],
        "unit": null,
        "precision": null,
        "answer": "Rec",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "349",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1704,
            "img_height": 1348,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which capability boasts the highest proportion (%)?\nChoices:\n(A) Rec\n(B) OCR\n(C) Know\n(D) Gen\n(E) Spat\n(F) Math\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "capabilities = {\n    'Rec': 0.25,\n    'OCR': 0.15,\n    'Know': 0.35,\n    'Gen': 0.10,\n    'Spat': 0.05,\n    'Math': 0.10\n}\n\nmax_capability = max(capabilities, key=capabilities.get)\nprint(max_capability)",
        "execution": "Know",
        "error": "None",
        "extraction": "Know",
        "prediction": "Know",
        "true_false": false
    },
    "350": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/350.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "350",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 89,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "351": {
        "question": "Are there fewer purple rubber objects that are to the left of the red object than tiny matte bicycles?",
        "image": "images/351.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "351",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer purple rubber objects that are to the left of the red object than tiny matte bicycles?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "purple_rubber_objects_left = 5\nred_object = 3\ntiny_matte_bicycles = 8\n\nif purple_rubber_objects_left < red_object:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\n\nprint(ans)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "352": {
        "question": "How many people will fit in the smaller vehicle?",
        "image": "images/352.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "352",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people will fit in the smaller vehicle?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "smaller_vehicle_capacity = 5\nnumber_of_people = 20\n\nfit_in_smaller_vehicle = number_of_people // smaller_vehicle_capacity\nprint(fit_in_smaller_vehicle)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "353": {
        "question": "At time $t=0$ a tank contains $Q_0 \\mathrm{lb}$ of salt dissolved in 100 gal of water; see Figure 2.3.1. Assume that water containing $\\frac{1}{4} \\mathrm{lb}$ of salt/gal is entering the tank at a rate of $r \\mathrm{gal} / \\mathrm{min}$ and that the well-stirred mixture is draining from the tank at the same rate. Set up the initial value problem that describes this flow process. By finding the amount of salt $Q(t)$ in the tank at any time, and the limiting amount $Q_L$ that is present after a very long time, if $r=3$ and $Q_0=2 Q_L$, find the time $T$ after which the salt level is within $2 \\%$ of $Q_L$. ",
        "image": "images/353.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "130.4",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "353",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 996,
            "img_height": 938,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "arithmetic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: At time $t=0$ a tank contains $Q_0 \\mathrm{lb}$ of salt dissolved in 100 gal of water; see Figure 2.3.1. Assume that water containing $\\frac{1}{4} \\mathrm{lb}$ of salt/gal is entering the tank at a rate of $r \\mathrm{gal} / \\mathrm{min}$ and that the well-stirred mixture is draining from the tank at the same rate. Set up the initial value problem that describes this flow process. By finding the amount of salt $Q(t)$ in the tank at any time, and the limiting amount $Q_L$ that is present after a very long time, if $r=3$ and $Q_0=2 Q_L$, find the time $T$ after which the salt level is within $2 \\%$ of $Q_L$. \nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nt = sp.symbols('t')\nQ = sp.Function('Q')(t)\nr = 3\nQ0 = 2 * sp.limit(Q, t, sp.oo)\n\n# Define the differential equation\ndiffeq = sp.Eq(Q.diff(t), r - Q/100)\n\n# Solve the differential equation\nsol = sp.dsolve(diffeq, Q)\nC1 = sp.solve(sol.subs(t, 0) - Q0, sp.Symbol('C1'))[0]\nsol = sol.subs(sp.Symbol('C1'), C1)\n\n# Find the time T when the salt level is within 2% of QL\nQL = sp.limit(sol.rhs, t, sp.oo)\nT = sp.solve(sp.Abs(sol.rhs - QL) - 0.02 * QL, t)[0]\n\nT",
        "execution": "",
        "error": "unsupported operand type(s) for -: 'Equality' and 'Mul'",
        "extraction": "T",
        "prediction": null,
        "true_false": false
    },
    "354": {
        "question": "How many algorithms have accuracies higher than 90?",
        "image": "images/354.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "354",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many algorithms have accuracies higher than 90?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "accuracies = [0.85, 0.92, 0.88, 0.95, 0.91, 0.87, 0.93, 0.89, 0.96, 0.90]\n\ncount = 0\nfor accuracy in accuracies:\n    if accuracy > 0.90:\n        count += 1\n\nprint(count)",
        "execution": "5",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "355": {
        "question": "As shown in the figure, the parallel lines a and b are intercepted by the straight line c. If \u22201 = 50.0, then the degree of \u22202 is ()",
        "image": "images/355.jpg",
        "choices": [
            "150\u00b0",
            "130\u00b0",
            "110\u00b0",
            "100\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "130\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "355",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 157,
            "img_height": 110,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the parallel lines a and b are intercepted by the straight line c. If \u22201 = 50.0, then the degree of \u22202 is ()\nChoices:\n(A) 150\u00b0\n(B) 130\u00b0\n(C) 110\u00b0\n(D) 100\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_angle(angle1):\n    angle2 = 180 - angle1\n    return angle2\n\nangle1 = 50.0\nangle2 = find_angle(angle1)\nprint(angle2)",
        "execution": "130.0",
        "error": "None",
        "extraction": "130.0",
        "prediction": "130\u00b0",
        "true_false": true
    },
    "356": {
        "question": "Are there fewer big motorbikes than rubber choppers?",
        "image": "images/356.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "356",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer big motorbikes than rubber choppers?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_motorbikes = 10\nrubber_choppers = 15\n\nif big_motorbikes < rubber_choppers:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "357": {
        "question": "Is Salmon the roughest?",
        "image": "images/357.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "357",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 677,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Salmon the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "answer = \"no\"\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "358": {
        "question": "Which of the cubes is the same as the unfolded cube?",
        "image": "images/358.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "A",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "358",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 326,
            "img_height": 517,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which of the cubes is the same as the unfolded cube?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def same_cube(unfolded_cube, choices):\n    for choice in choices:\n        if unfolded_cube == choice:\n            return choice\n    return \"\"\n\nunfolded_cube = \"A\"\nchoices = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n\nprint(same_cube(unfolded_cube, choices))",
        "execution": "A",
        "error": "None",
        "extraction": "A",
        "prediction": "A",
        "true_false": true
    },
    "359": {
        "question": "Kylie spent a week at the beach and recorded the number of shells she found each day. According to the table, what was the rate of change between Thursday and Friday? (Unit: shells per day)",
        "image": "images/359.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "359",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 241,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Kylie spent a week at the beach and recorded the number of shells she found each day. According to the table, what was the rate of change between Thursday and Friday? (Unit: shells per day)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shells_thursday = 15\nshells_friday = 20\n\nrate_of_change = shells_friday - shells_thursday\nprint(rate_of_change)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "360": {
        "question": "If $\\frac{I J}{X J}=\\frac{HJ}{YJ}, m \\angle W X J=130$\r\nand $m \\angle WZG=20,$ find $m \\angle YIZ$",
        "image": "images/360.jpg",
        "choices": [
            "40",
            "50",
            "65",
            "110"
        ],
        "unit": null,
        "precision": null,
        "answer": "50",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "360",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 721,
            "img_height": 370,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If $\\frac{I J}{X J}=\\frac{HJ}{YJ}, m \\angle W X J=130$\r\nand $m \\angle WZG=20,$ find $m \\angle YIZ$\nChoices:\n(A) 40\n(B) 50\n(C) 65\n(D) 110\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the variables\nIJ, XJ, HJ, YJ, WY, WZ, YI, YZ = sp.symbols('IJ XJ HJ YJ WY WZ YI YZ')\n\n# Define the given equations\neq1 = sp.Eq(IJ/XJ, HJ/YJ)\neq2 = sp.Eq(sp.Symbol('m_angle_WXJ'), 130)\neq3 = sp.Eq(sp.Symbol('m_angle_WZG'), 20)\n\n# Define the equation for angle YIZ\neq4 = sp.Eq(sp.Symbol('m_angle_YIZ'), sp.Symbol('m_angle_WXJ') - sp.Symbol('m_angle_WZG'))\n\n# Solve the equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (IJ, XJ, HJ, YJ, sp.Symbol('m_angle_YIZ')))\n\n# Print the solution\nprint(solution[sp.Symbol('m_angle_YIZ')])",
        "execution": "m_angle_WXJ - m_angle_WZG",
        "error": "None",
        "extraction": "110",
        "prediction": "110",
        "true_false": false
    },
    "361": {
        "question": " In which part of the mold are the cylindrical ports located? ",
        "image": "images/361.jpg",
        "choices": [
            "Upper half",
            "Lower half",
            "Medial half",
            "Lateral half"
        ],
        "unit": null,
        "precision": null,
        "answer": "Lower half",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "361",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 596,
            "img_height": 435,
            "source": "PMC-VQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "medical image",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion:  In which part of the mold are the cylindrical ports located? \nChoices:\n(A) Upper half\n(B) Lower half\n(C) Medial half\n(D) Lateral half\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_cylindrical_ports(mold_parts):\n    for part in mold_parts:\n        if \"cylindrical ports\" in part:\n            if \"upper half\" in part:\n                return \"Upper half\"\n            elif \"lower half\" in part:\n                return \"Lower half\"\n            elif \"medial half\" in part:\n                return \"Medial half\"\n            elif \"lateral half\" in part:\n                return \"Lateral half\"\n    return \"\"\n\nmold_parts = [\"The upper half of the mold contains the cylindrical ports.\",\n              \"The lower half of the mold does not contain the cylindrical ports.\",\n              \"The medial half of the mold does not contain the cylindrical ports.\",\n              \"The lateral half of the mold contains the cylindrical ports.\"]\n\nprint(find_cylindrical_ports(mold_parts))",
        "execution": "Upper half",
        "error": "None",
        "extraction": "Upper half",
        "prediction": "Upper half",
        "true_false": false
    },
    "362": {
        "question": "Subtract all cyan cylinders. Subtract all tiny purple rubber objects. How many objects are left?",
        "image": "images/362.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "362",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all cyan cylinders. Subtract all tiny purple rubber objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cyan_cylinders = 10\ntiny_purple_rubber_objects = 5\n\nobjects_left = cyan_cylinders - tiny_purple_rubber_objects\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "363": {
        "question": "Subtract all tiny gray metal blocks. Subtract all purple things. How many objects are left?",
        "image": "images/363.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "363",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny gray metal blocks. Subtract all purple things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_gray_metal_blocks = 10\npurple_things = 5\n\nobjects_left = tiny_gray_metal_blocks - purple_things\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "364": {
        "question": "As shown in the figure, AB is the diameter of \u2299O, and points C and D are on \u2299O. If \u2220ABD = 50.0, then the degree of \u2220BCD is ()",
        "image": "images/364.jpg",
        "choices": [
            "30\u00b0",
            "35\u00b0",
            "40\u00b0",
            "45\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "364",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 127,
            "img_height": 114,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of \u2299O, and points C and D are on \u2299O. If \u2220ABD = 50.0, then the degree of \u2220BCD is ()\nChoices:\n(A) 30\u00b0\n(B) 35\u00b0\n(C) 40\u00b0\n(D) 45\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BCD(angle_ABD):\n    angle_BCD = 180 - angle_ABD\n    return angle_BCD\n\nangle_ABD = 50.0\nangle_BCD = angle_BCD(angle_ABD)\nprint(angle_BCD)",
        "execution": "130.0",
        "error": "None",
        "extraction": "130.0",
        "prediction": "30\u00b0",
        "true_false": false
    },
    "365": {
        "question": "Subtract all big yellow metallic spheres. Subtract all tiny metal things. How many objects are left?",
        "image": "images/365.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "365",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big yellow metallic spheres. Subtract all tiny metal things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_yellow_metallic_spheres = 5\ntiny_metal_things = 3\n\nobjects_left = big_yellow_metallic_spheres - tiny_metal_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "366": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/366.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "366",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 250,
            "img_height": 320,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "367": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/367.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "14",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "367",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 873,
            "img_height": 429,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "368": {
        "question": "Is the number of yellow matte school buss greater than the number of big yellow metal cars?",
        "image": "images/368.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "368",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of yellow matte school buss greater than the number of big yellow metal cars?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_matte_school_buss = 10\nbig_yellow_metal_cars = 8\n\nif yellow_matte_school_buss > big_yellow_metal_cars:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "369": {
        "question": "Is the function (f: R to R) surjective?",
        "image": "images/369.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "369",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 266,
            "img_height": 331,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the function (f: R to R) surjective?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_surjective(f):\n    # Generate a list of all possible inputs\n    inputs = [x for x in range(-10, 11)]\n    \n    # Generate a list of all outputs of the function\n    outputs = [f(x) for x in inputs]\n    \n    # Check if all possible outputs are in the list of outputs\n    for x in inputs:\n        if f(x) not in outputs:\n            return False\n    \n    return True\n\n# Example function f: R to R\ndef f(x):\n    return x**2\n\n# Check if f is surjective\nprint(is_surjective(f))",
        "execution": "True",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "370": {
        "question": "In the diagram of the food web shown, if the number of ferns decrease, the supply of salmon will most likely?",
        "image": "images/370.jpg",
        "choices": [
            "decrease",
            "can't tell",
            "stay same",
            "increase"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "370",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 880,
            "img_height": 680,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the diagram of the food web shown, if the number of ferns decrease, the supply of salmon will most likely?\nChoices:\n(A) decrease\n(B) can't tell\n(C) stay same\n(D) increase\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def food_web(ferns):\n    if ferns < 0:\n        return \"Invalid input\"\n\n    if ferns <= 5:\n        return \"increase\"\n    elif ferns <= 10:\n        return \"stay same\"\n    else:\n        return \"decrease\"\n\nferns = 8\nprint(food_web(ferns))",
        "execution": "stay same",
        "error": "None",
        "extraction": "stay same",
        "prediction": "stay same",
        "true_false": false
    },
    "371": {
        "question": "\u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220ABC\uff1d90\u00b0\uff0c\u70b9D\u3001E\u3001F\u5206\u522b\u662f\u8fb9AB\u3001BC\u3001CA\u7684\u4e2d\u70b9\uff0c\u82e5DE+BF\uff1d8\uff0c\u5219BF\u7684\u503c\u4e3a\uff08\uff09",
        "image": "images/371.jpg",
        "choices": [
            "3",
            "4",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "371",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 109,
            "img_height": 146,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220ABC\uff1d90\u00b0\uff0c\u70b9D\u3001E\u3001F\u5206\u522b\u662f\u8fb9AB\u3001BC\u3001CA\u7684\u4e2d\u70b9\uff0c\u82e5DE+BF\uff1d8\uff0c\u5219BF\u7684\u503c\u4e3a\uff08\uff09\nChoices:\n(A) 3\n(B) 4\n(C) 5\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 2 * DE\nBC = 2 * BF\nCA = 2 * AF\n\nDE + BF = 8\n2 * DE + 2 * BF = 16\nAB + BC = 16\n2 * DE + 2 * BF = AB + BC\n\nSince DE = AB/2 and BF = BC/2, we can substitute these values into the equation:\n\nAB/2 + BC/2 = AB + BC\nAB + BC = 2 * AB + 2 * BC\nBC = AB\n\nTherefore, BF = BC/2 = AB/2 = DE\n\nSo, BF = DE = 8/2 = 4\n\nTherefore, the answer is (B) 4.",
        "execution": "",
        "error": "invalid syntax (<string>, line 10)",
        "extraction": "4",
        "prediction": "4",
        "true_false": true
    },
    "372": {
        "question": "Subtract all small gray spheres. Subtract all cylinders. How many objects are left?",
        "image": "images/372.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "372",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small gray spheres. Subtract all cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_gray_spheres = 10\ncylinders = 5\n\nobjects_left = small_gray_spheres - cylinders\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "373": {
        "question": "As shown in the figure, in the quadrilateral ABCD, \u2220BAD = 120.0, \u2220B = \u2220D = 90.0, if you find a point M on BC and CD respectively, so that the perimeter of \u25b3AMN is the smallest, then the degree of \u2220AMN + \u2220ANM is ()",
        "image": "images/373.jpg",
        "choices": [
            "110\u00b0",
            "120\u00b0",
            "140\u00b0",
            "150\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "120\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "373",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 122,
            "img_height": 161,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the quadrilateral ABCD, \u2220BAD = 120.0, \u2220B = \u2220D = 90.0, if you find a point M on BC and CD respectively, so that the perimeter of \u25b3AMN is the smallest, then the degree of \u2220AMN + \u2220ANM is ()\nChoices:\n(A) 110\u00b0\n(B) 120\u00b0\n(C) 140\u00b0\n(D) 150\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_AMN = 0\n    angle_ANM = 0\n    min_perimeter = float('inf')\n\n    for i in range(1, 90):\n        angle_BMC = i\n        angle_CMD = 90 - i\n\n        angle_AMC = 180 - angle_BMC - angle_CMD\n        angle_AMN = 180 - angle_AMC - 120\n        angle_ANM = 180 - angle_AMC - angle_AMN\n\n        perimeter = math.sin(math.radians(angle_AMN)) + math.sin(math.radians(angle_ANM))\n\n        if perimeter < min_perimeter:\n            min_perimeter = perimeter\n            angle_AMN = angle_AMN\n            angle_ANM = angle_ANM\n\n    return angle_AMN + angle_ANM\n\nprint(find_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "110",
        "prediction": "110\u00b0",
        "true_false": false
    },
    "374": {
        "question": "What is the sum of the accuracies of the algorithms calf and ivory?",
        "image": "images/374.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "374",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the accuracies of the algorithms calf and ivory?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "calf_accuracy = 0.85\nivory_accuracy = 0.92\n\nsum_of_accuracies = calf_accuracy + ivory_accuracy\nprint(sum_of_accuracies)",
        "execution": "1.77",
        "error": "None",
        "extraction": "1. 13\n2. 0.6\n3. 1.45\n4. [2007, 2008]\n5. B\n6. 13.0\n7. tokyo\n8. 1.77",
        "prediction": null,
        "true_false": false
    },
    "375": {
        "question": "Find the length of $AC$ in the isosceles triangle ABC. ",
        "image": "images/375.jpg",
        "choices": [
            "1.5",
            "7",
            "11",
            "12.5"
        ],
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "375",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 703,
            "img_height": 293,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the length of $AC$ in the isosceles triangle ABC. \nChoices:\n(A) 1.5\n(B) 7\n(C) 11\n(D) 12.5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_length_of_AC(base, angle):\n    angle_in_radians = math.radians(angle)\n    length_of_AC = base / (2 * math.sin(angle_in_radians / 2))\n    return length_of_AC\n\nbase = 10\nangle = 60\n\nlength_of_AC = find_length_of_AC(base, angle)\nprint(length_of_AC)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "12.5",
        "prediction": "12.5",
        "true_false": false
    },
    "376": {
        "question": "Subtract all purple matte cubes. Subtract all tiny gray metal cubes. How many objects are left?",
        "image": "images/376.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "376",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all purple matte cubes. Subtract all tiny gray metal cubes. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "purple_matte_cubes = 10\ntiny_gray_metal_cubes = 5\n\nobjects_left = purple_matte_cubes - tiny_gray_metal_cubes\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "377": {
        "question": "Is Orange Red the high median?",
        "image": "images/377.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "377",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 649,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Orange Red the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "colors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet']\nmedian = len(colors) // 2\nhigh_median = colors[median]\n\nif high_median == 'orange red':\n    answer = 'yes'\nelse:\n    answer = 'no'\n\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "378": {
        "question": "\u5982\u56fe\uff0cAD\u662f\u25b3ABC\u7684\u4e2d\u7ebf\uff0cE\u4e3aAD\u7684\u4e2d\u70b9\uff0c\u25b3ABE\u7684\u9762\u79ef\u4e3a2\uff0c\u5219\u25b3ABC\u7684\u9762\u79ef\u4e3a\uff08\uff09",
        "image": "images/378.jpg",
        "choices": [
            "5",
            "6",
            "7",
            "8"
        ],
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "378",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 118,
            "img_height": 111,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAD\u662f\u25b3ABC\u7684\u4e2d\u7ebf\uff0cE\u4e3aAD\u7684\u4e2d\u70b9\uff0c\u25b3ABE\u7684\u9762\u79ef\u4e3a2\uff0c\u5219\u25b3ABC\u7684\u9762\u79ef\u4e3a\uff08\uff09\nChoices:\n(A) 5\n(B) 6\n(C) 7\n(D) 8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef triangle_area(a, b, c):\n    s = (a + b + c) / 2\n    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return area\n\ndef find_triangle_area(ab_area):\n    ae_area = ab_area / 2\n    ac_area = ae_area * 2\n    bc_area = ab_area * 2\n    ab = math.sqrt(ab_area)\n    ae = math.sqrt(ae_area)\n    ac = math.sqrt(ac_area)\n    bc = math.sqrt(bc_area)\n    triangle_area = triangle_area(ab, ac, bc)\n    return triangle_area\n\nab_area = 2\ntriangle_area = find_triangle_area(ab_area)\nprint(triangle_area)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "379": {
        "question": "In the diagram of the food web shown what will most directly be affected by the loss of the trees?",
        "image": "images/379.jpg",
        "choices": [
            "horses",
            "cats",
            "nothing",
            "bears"
        ],
        "unit": null,
        "precision": null,
        "answer": "horses",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "379",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 570,
            "img_height": 400,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the diagram of the food web shown what will most directly be affected by the loss of the trees?\nChoices:\n(A) horses\n(B) cats\n(C) nothing\n(D) bears\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def affected_animal(food_web, lost_animal):\n    affected = []\n    for animal, prey in food_web.items():\n        if lost_animal in prey:\n            affected.append(animal)\n    return affected\n\nfood_web = {\n    'trees': ['horses', 'cats', 'bears'],\n    'horses': ['cats'],\n    'cats': [],\n    'bears': []\n}\n\nlost_animal = 'trees'\n\nprint(affected_animal(food_web, lost_animal))",
        "execution": "[]",
        "error": "None",
        "extraction": "['horses', 'cats', 'bears']",
        "prediction": "horses",
        "true_false": true
    },
    "380": {
        "question": "For how many years that the percentage value over 4?",
        "image": "images/380.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "380",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For how many years that the percentage value over 4?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "years = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009]\npercentage_values = [3.5, 4.2, 3.8, 4.5, 4.1, 3.9, 4.3, 4.6, 3.7, 4.4]\n\ncount = 0\nfor i in range(len(percentage_values)):\n    if percentage_values[i] > 4:\n        count += 1\n\nprint(count)",
        "execution": "6",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "381": {
        "question": "Are there more tiny cyan matte articulated buss left of the big school bus than small yellow matte double buss?",
        "image": "images/381.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "381",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there more tiny cyan matte articulated buss left of the big school bus than small yellow matte double buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_buses(tiny_cyan, big_school, small_yellow):\n    if tiny_cyan > big_school:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ntiny_cyan = 5\nbig_school = 3\nsmall_yellow = 4\n\nprint(compare_buses(tiny_cyan, big_school, small_yellow))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "382": {
        "question": "Is the building through the window at least five stories tall?",
        "image": "images/382.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "382",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 400,
            "img_height": 500,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the building through the window at least five stories tall?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_building_tall(stories):\n    if stories >= 5:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nstories = 6\nprint(is_building_tall(stories))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "383": {
        "question": "What value you get , if you divide the largest bar value by 2 ?",
        "image": "images/383.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "131253.5",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "383",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What value you get , if you divide the largest bar value by 2 ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "largest_bar_value = 10\nresult = largest_bar_value / 2\nprint(result)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": "5.0",
        "true_false": false
    },
    "384": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/384.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "384",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 626,
            "img_height": 495,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "385": {
        "question": "Does Cyan have the minimum area under the curve?",
        "image": "images/385.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "385",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 771,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Cyan have the minimum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def has_minimum_area(curve_areas):\n    min_area = min(curve_areas)\n    if curve_areas.count(min_area) == 1:\n        return \"yes\"\n    else:\n        return \"no\"\n\ncurve_areas = [5, 3, 7, 3, 2]\nprint(has_minimum_area(curve_areas))",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "386": {
        "question": "Find x",
        "image": "images/386.jpg",
        "choices": [
            "5",
            "10",
            "10 \\sqrt { 3 }",
            "20"
        ],
        "unit": null,
        "precision": null,
        "answer": "10 \\sqrt { 3 }",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "386",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 164,
            "img_height": 247,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x\nChoices:\n(A) 5\n(B) 10\n(C) 10 \\sqrt { 3 }\n(D) 20\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\neq = sp.Eq(3*x + 2, 32)\nsol = sp.solve(eq, x)\n\nprint(sol)",
        "execution": "[10]",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "387": {
        "question": "Of the four balls in the photo, what is the percentage of them on the ground?",
        "image": "images/387.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "100",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "387",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 363,
            "img_height": 485,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Of the four balls in the photo, what is the percentage of them on the ground?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def percentage_on_ground(photo):\n    total_balls = 4\n    balls_on_ground = 0\n\n    for ball in photo:\n        if ball == \"on_ground\":\n            balls_on_ground += 1\n\n    percentage = (balls_on_ground / total_balls) * 100\n    return percentage\n\nphoto = ['on_ground', 'in_air', 'on_ground', 'in_air']\nprint(percentage_on_ground(photo))",
        "execution": "50.0",
        "error": "None",
        "extraction": "50",
        "prediction": "50",
        "true_false": false
    },
    "388": {
        "question": "Express the ratio of $\\tan M$ as a decimal to the nearest hundredth.",
        "image": "images/388.jpg",
        "choices": [
            "0.38",
            "0.42",
            "0.92",
            "2.40"
        ],
        "unit": null,
        "precision": null,
        "answer": "0.42",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "388",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 209,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Express the ratio of $\\tan M$ as a decimal to the nearest hundredth.\nChoices:\n(A) 0.38\n(B) 0.42\n(C) 0.92\n(D) 2.40\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nM = 45\ntan_M = math.tan(math.radians(M))\ntan_M_decimal = round(tan_M, 2)\nprint(tan_M_decimal)",
        "execution": "1.0",
        "error": "None",
        "extraction": "0.99",
        "prediction": "0.92",
        "true_false": false
    },
    "389": {
        "question": "Look at the table. Then answer the question. At a price of $320, is there a shortage or a surplus?'",
        "image": "images/389.jpg",
        "choices": [
            "shortage",
            "surplus"
        ],
        "unit": null,
        "precision": null,
        "answer": "shortage",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "389",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 353,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Look at the table. Then answer the question. At a price of $320, is there a shortage or a surplus?'\nChoices:\n(A) shortage\n(B) surplus\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "price = 320\ndemand = 400\nsupply = 350\n\nif price < demand:\n    print(\"shortage\")\nelif price > supply:\n    print(\"surplus\")\nelse:\n    print(\"neither shortage nor surplus\")",
        "execution": "shortage",
        "error": "None",
        "extraction": "neither shortage nor surplus",
        "prediction": "shortage",
        "true_false": true
    },
    "390": {
        "question": "Are there fewer jets that are left of the small brown suv than objects right of the big shiny car?",
        "image": "images/390.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "390",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer jets that are left of the small brown suv than objects right of the big shiny car?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_jets_and_objects(jets, suv, car, objects):\n    if jets < suv:\n        return \"Yes\"\n    elif objects > car:\n        return \"No\"\n    else:\n        return \"\"\n\njets = 5\nsuv = 2\ncar = 3\nobjects = 6\n\nprint(compare_jets_and_objects(jets, suv, car, objects))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "391": {
        "question": "As shown in the figure, point O is the center of \u2299O, points A, B, and C are on \u2299O, AO \u2225 BC, \u2220AOB = 40.0, then the degree of \u2220OAC is equal to ()",
        "image": "images/391.jpg",
        "choices": [
            "40\u00b0",
            "60\u00b0",
            "50\u00b0",
            "20\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "20\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "391",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 96,
            "img_height": 96,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, point O is the center of \u2299O, points A, B, and C are on \u2299O, AO \u2225 BC, \u2220AOB = 40.0, then the degree of \u2220OAC is equal to ()\nChoices:\n(A) 40\u00b0\n(B) 60\u00b0\n(C) 50\u00b0\n(D) 20\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_OAC(angle_AOB):\n    angle_OAC = (180 - angle_AOB) / 2\n    return angle_OAC\n\nangle_AOB = 40.0\nangle_OAC = angle_OAC(angle_AOB)\nprint(angle_OAC)",
        "execution": "70.0",
        "error": "None",
        "extraction": "50",
        "prediction": "50\u00b0",
        "true_false": false
    },
    "392": {
        "question": "Mr. Huffman, a P.E. teacher, wrote down how much weight each of his students could lift. How many people lifted at least 46 pounds? (Unit: people)",
        "image": "images/392.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "392",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 197,
            "img_height": 136,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Mr. Huffman, a P.E. teacher, wrote down how much weight each of his students could lift. How many people lifted at least 46 pounds? (Unit: people)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "weights = [35, 42, 46, 50, 38, 46, 52, 41, 46, 49]\ncount = 0\n\nfor weight in weights:\n    if weight >= 46:\n        count += 1\n\nprint(count)",
        "execution": "6",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "393": {
        "question": "What is the difference between the highest and the lowest dark blue bar?",
        "image": "images/393.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "54",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "393",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between the highest and the lowest dark blue bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dark_blue_bars = [10, 15, 12, 8, 20]\nhighest = max(dark_blue_bars)\nlowest = min(dark_blue_bars)\ndifference = highest - lowest\nprint(difference)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "394": {
        "question": "Which of the following environments has the least GPU days for training?",
        "image": "images/394.jpg",
        "choices": [
            "HomeGrid",
            "Msgr S1",
            "Msgr S2",
            "Msgr S3",
            "VLN",
            "LangRoom"
        ],
        "unit": null,
        "precision": null,
        "answer": "LangRoom",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "394",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1854,
            "img_height": 858,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which of the following environments has the least GPU days for training?\nChoices:\n(A) HomeGrid\n(B) Msgr S1\n(C) Msgr S2\n(D) Msgr S3\n(E) VLN\n(F) LangRoom\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "gpu_days = {\n    'HomeGrid': 10,\n    'Msgr S1': 15,\n    'Msgr S2': 8,\n    'Msgr S3': 12,\n    'VLN': 20,\n    'LangRoom': 5\n}\n\nmin_gpu_days = min(gpu_days.values())\n\nfor env, days in gpu_days.items():\n    if days == min_gpu_days:\n        print(env)",
        "execution": "LangRoom",
        "error": "None",
        "extraction": "LangRoom",
        "prediction": "LangRoom",
        "true_false": true
    },
    "395": {
        "question": "What is the average age of the people in this picture?",
        "image": "images/395.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "395",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the average age of the people in this picture?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "ages = [25, 30, 35, 40, 45]\naverage_age = sum(ages) / len(ages)\nprint(average_age)",
        "execution": "35.0",
        "error": "None",
        "extraction": "37.0",
        "prediction": null,
        "true_false": false
    },
    "396": {
        "question": "From the above food web diagram, if all the algae dies then water flea population will",
        "image": "images/396.jpg",
        "choices": [
            "remains the same",
            "decrease",
            "increase",
            "NA"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "396",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 720,
            "img_height": 576,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: From the above food web diagram, if all the algae dies then water flea population will\nChoices:\n(A) remains the same\n(B) decrease\n(C) increase\n(D) NA\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def water_flea_population(algae_status):\n    if algae_status == \"alive\":\n        return \"remains the same\"\n    elif algae_status == \"dead\":\n        return \"decrease\"\n    else:\n        return \"NA\"\n\nalgae_status = \"dead\"\nprint(water_flea_population(algae_status))",
        "execution": "decrease",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "397": {
        "question": "\u5982\u56fe\uff0c\u70b9A\u3001B\u3001C\u90fd\u5728\u534a\u5f84\u4e3a2\u7684\u2299O\u4e0a\uff0c\u2220C\uff1d30\u00b0\uff0c\u5219\u5f26AB\u957f\u4e3a\uff08\uff09",
        "image": "images/397.jpg",
        "choices": [
            "1",
            "2",
            "2.2",
            "2.5"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "397",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 73,
            "img_height": 70,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u70b9A\u3001B\u3001C\u90fd\u5728\u534a\u5f84\u4e3a2\u7684\u2299O\u4e0a\uff0c\u2220C\uff1d30\u00b0\uff0c\u5219\u5f26AB\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 1\n(B) 2\n(C) 2.2\n(D) 2.5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef chord_length(angle):\n    radius = 2\n    angle_rad = math.radians(angle)\n    chord_length = 2 * radius * math.sin(angle_rad/2)\n    return chord_length\n\nangle = 30\nprint(chord_length(angle))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "2.0",
        "prediction": "2.2",
        "true_false": false
    },
    "398": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/398.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "398",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 727,
            "img_height": 942,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "399": {
        "question": "What is the perimeter of the shape?",
        "image": "images/399.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "399",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 258,
            "img_height": 241,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the shape?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side1 = 5\nside2 = 7\nside3 = 3\nside4 = 4\n\nperimeter = side1 + side2 + side3 + side4\nprint(perimeter)",
        "execution": "19",
        "error": "None",
        "extraction": "19",
        "prediction": "19",
        "true_false": false
    },
    "400": {
        "question": "At which Episode ID does the Retroformer attain its peak Success rate (%)?",
        "image": "images/400.jpg",
        "choices": [
            "1.0",
            "1.5",
            "2.0",
            "2.5",
            "3.0",
            "3.5",
            "4.0"
        ],
        "unit": null,
        "precision": null,
        "answer": "4.0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "400",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1196,
            "img_height": 942,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: At which Episode ID does the Retroformer attain its peak Success rate (%)?\nChoices:\n(A) 1.0\n(B) 1.5\n(C) 2.0\n(D) 2.5\n(E) 3.0\n(F) 3.5\n(G) 4.0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "episode_ids = [1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0]\nsuccess_rates = [80, 85, 90, 95, 92, 88, 86]\n\nmax_success_rate = max(success_rates)\nmax_index = success_rates.index(max_success_rate)\npeak_episode_id = episode_ids[max_index]\n\nprint(peak_episode_id)",
        "execution": "2.5",
        "error": "None",
        "extraction": "2.5",
        "prediction": "2.5",
        "true_false": false
    },
    "401": {
        "question": "What is the value of the smallest individual bar in the whole chart?",
        "image": "images/401.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "401",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'bar1': 10,\n    'bar2': 5,\n    'bar3': 8,\n    'bar4': 3,\n    'bar5': 6\n}\n\nsmallest_bar = min(chart.values())\nprint(smallest_bar)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "402": {
        "question": "From the food chain diagram below, which animal would most directly lack food if Grasshoppers get exterminated?",
        "image": "images/402.jpg",
        "choices": [
            "Rabbit",
            "Deer",
            "Frogs",
            "Wolf"
        ],
        "unit": null,
        "precision": null,
        "answer": "Frogs",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "402",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 909,
            "img_height": 735,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: From the food chain diagram below, which animal would most directly lack food if Grasshoppers get exterminated?\nChoices:\n(A) Rabbit\n(B) Deer\n(C) Frogs\n(D) Wolf\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_chain = {\n    'Grass': ['Grasshoppers'],\n    'Grasshoppers': ['Rabbit', 'Frogs'],\n    'Rabbit': ['Deer', 'Wolf'],\n    'Deer': ['Wolf']\n}\n\ndef find_most_directly_lacking_food(food_chain, animal):\n    if animal not in food_chain:\n        return \"\"\n\n    lacking_food = []\n    for prey in food_chain[animal]:\n        if prey not in food_chain:\n            lacking_food.append(prey)\n\n    return lacking_food\n\nanimal = 'Grasshoppers'\nprint(find_most_directly_lacking_food(food_chain, animal))",
        "execution": "['Frogs']",
        "error": "None",
        "extraction": "['Rabbit', 'Frogs']",
        "prediction": "Rabbit",
        "true_false": false
    },
    "403": {
        "question": "Find TX if $E X=24$ and $D E=7$",
        "image": "images/403.jpg",
        "choices": [
            "7",
            "24",
            "25",
            "32"
        ],
        "unit": null,
        "precision": null,
        "answer": "32",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "403",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 564,
            "img_height": 221,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find TX if $E X=24$ and $D E=7$\nChoices:\n(A) 7\n(B) 24\n(C) 25\n(D) 32\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "ex = 24\nde = 7\n\ntx = ex - de\nprint(tx)",
        "execution": "17",
        "error": "None",
        "extraction": "17",
        "prediction": "7",
        "true_false": false
    },
    "404": {
        "question": "Look at the following schedule. Which activity begins at 11.50 A.M.?'",
        "image": "images/404.jpg",
        "choices": [
            "figure skating practice",
            "private class",
            "adult class",
            "children's class"
        ],
        "unit": null,
        "precision": null,
        "answer": "children's class",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "404",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 325,
            "img_height": 217,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Look at the following schedule. Which activity begins at 11.50 A.M.?'\nChoices:\n(A) figure skating practice\n(B) private class\n(C) adult class\n(D) children's class\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "schedule = {\n    '9.00 A.M.': 'figure skating practice',\n    '10.30 A.M.': 'private class',\n    '11.50 A.M.': 'adult class',\n    '1.30 P.M.': \"children's class\"\n}\n\nfor time, activity in schedule.items():\n    if time == '11.50 A.M.':\n        print(activity)",
        "execution": "adult class",
        "error": "None",
        "extraction": "adult class",
        "prediction": "adult class",
        "true_false": false
    },
    "405": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/405.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "19",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "405",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1801,
            "img_height": 1351,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "406": {
        "question": "How many snowmen are there?",
        "image": "images/406.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "15",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "406",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 714,
            "img_height": 183,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many snowmen are there?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_snowmen(image):\n    snowman_count = 0\n    for object in image:\n        if object == \"snowman\":\n            snowman_count += 1\n    return snowman_count\n\nimage = [\"snowman\", \"tree\", \"snowman\", \"snowman\", \"snowman\"]\nprint(count_snowmen(image))",
        "execution": "4",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "407": {
        "question": "\u5982\u56fe\uff0c\u70b9B\uff0cD\uff0cE\uff0cC\u5728\u540c\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u82e5\u25b3ABD\u224c\u25b3ACE\uff0c\u2220AEC\uff1d110\u00b0\uff0c\u5219\u2220DAE\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/407.jpg",
        "choices": [
            "30\u00b0",
            "40\u00b0",
            "50\u00b0",
            "60\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "407",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 76,
            "img_height": 67,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u70b9B\uff0cD\uff0cE\uff0cC\u5728\u540c\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u82e5\u25b3ABD\u224c\u25b3ACE\uff0c\u2220AEC\uff1d110\u00b0\uff0c\u5219\u2220DAE\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 30\u00b0\n(B) 40\u00b0\n(C) 50\u00b0\n(D) 60\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the variables\nx = sp.Symbol('x')\n\n# Define the equations\neq1 = sp.Eq(x, 180 - 110)\neq2 = sp.Eq(x, 180 - 110 - 30)\n\n# Solve the equations\nsolution = sp.solve((eq1, eq2), (x))\n\n# Print the solution\nprint(solution)",
        "execution": "[]",
        "error": "None",
        "extraction": "[40]",
        "prediction": "40\u00b0",
        "true_false": true
    },
    "408": {
        "question": "Find z.",
        "image": "images/408.jpg",
        "choices": [
            "6",
            "6 \\sqrt { 2 }",
            "6 \\sqrt { 3 }",
            "6 \\sqrt { 5 }"
        ],
        "unit": null,
        "precision": null,
        "answer": "6 \\sqrt { 5 }",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "408",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 362,
            "img_height": 238,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find z.\nChoices:\n(A) 6\n(B) 6 \\sqrt { 2 }\n(C) 6 \\sqrt { 3 }\n(D) 6 \\sqrt { 5 }\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_z():\n    x = 6\n    y = 2 * math.sqrt(3)\n    z = math.sqrt(x**2 + y**2)\n    return z\n\nprint(find_z())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "6.0",
        "prediction": "6",
        "true_false": false
    },
    "409": {
        "question": "What is the radius of this circle?",
        "image": "images/409.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "409",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 358,
            "img_height": 356,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the radius of this circle?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_radius(area):\n    radius = math.sqrt(area / math.pi)\n    return radius\n\narea = 25\nradius = find_radius(area)\nprint(radius)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "5.0",
        "prediction": null,
        "true_false": false
    },
    "410": {
        "question": "Find the perimeter of  $\\triangle D E F,$ if $\\triangle D E F \\sim \\triangle C B F,$ perimeter of $\\triangle C B F=27, D F=6,$ and $F C=8$",
        "image": "images/410.jpg",
        "choices": [
            "20.25",
            "21",
            "27",
            "36"
        ],
        "unit": null,
        "precision": null,
        "answer": "20.25",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "410",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 405,
            "img_height": 226,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the perimeter of  $\\triangle D E F,$ if $\\triangle D E F \\sim \\triangle C B F,$ perimeter of $\\triangle C B F=27, D F=6,$ and $F C=8$\nChoices:\n(A) 20.25\n(B) 21\n(C) 27\n(D) 36\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_perimeter(perimeter_CBF, DF, FC):\n    # Find the ratio of the sides of the similar triangles\n    ratio = perimeter_CBF / (DF + FC)\n\n    # Find the lengths of DE and EF using the ratio\n    DE = DF * ratio\n    EF = FC * ratio\n\n    # Calculate the perimeter of DEF\n    perimeter_DEF = DF + DE + EF\n\n    return perimeter_DEF\n\nperimeter_CBF = 27\nDF = 6\nFC = 8\n\nperimeter_DEF = find_perimeter(perimeter_CBF, DF, FC)\nprint(perimeter_DEF)",
        "execution": "33.0",
        "error": "None",
        "extraction": "21",
        "prediction": "21",
        "true_false": false
    },
    "411": {
        "question": "What is the average percentage of population having access to electricity per year?",
        "image": "images/411.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "100",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "411",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1081,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the average percentage of population having access to electricity per year?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def average_percentage(population_data):\n    total_percentage = 0\n    for year in population_data:\n        total_percentage += population_data[year]\n    average_percentage = total_percentage / len(population_data)\n    return average_percentage\n\npopulation_data = {\n    2015: 85,\n    2016: 87,\n    2017: 89,\n    2018: 91,\n    2019: 93\n}\n\nprint(average_percentage(population_data))",
        "execution": "89.0",
        "error": "None",
        "extraction": "92.0",
        "prediction": null,
        "true_false": false
    },
    "412": {
        "question": "Tanner has $35. Does he have enough to buy a black jacket and a pair of shorts?'",
        "image": "images/412.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "412",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 235,
            "img_height": 192,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Tanner has $35. Does he have enough to buy a black jacket and a pair of shorts?'\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "black_jacket_price = 25.00\nshorts_price = 15.00\n\ntotal_cost = black_jacket_price + shorts_price\n\nif total_cost <= 35.00:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "413": {
        "question": "\u5df2\u77e5\uff1a\u5982\u56fe\uff0c\u25b3ABC\u4e2d\uff0cAB\uff1dAC\uff0cBD\u4e3a\u2220ABC\u7684\u5e73\u5206\u7ebf\uff0c\u2220BDC\uff1d75\u00b0\uff0c\u5219\u2220A\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/413.jpg",
        "choices": [
            "25\u00b0",
            "35\u00b0",
            "40\u00b0",
            "45\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "413",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 123,
            "img_height": 132,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5df2\u77e5\uff1a\u5982\u56fe\uff0c\u25b3ABC\u4e2d\uff0cAB\uff1dAC\uff0cBD\u4e3a\u2220ABC\u7684\u5e73\u5206\u7ebf\uff0c\u2220BDC\uff1d75\u00b0\uff0c\u5219\u2220A\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 25\u00b0\n(B) 35\u00b0\n(C) 40\u00b0\n(D) 45\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    # Given information\n    BD_angle = 75\n\n    # Calculate angle A\n    angle_A = (180 - BD_angle) / 2\n\n    return angle_A\n\nprint(find_angle())",
        "execution": "52.5",
        "error": "None",
        "extraction": "40",
        "prediction": "40\u00b0",
        "true_false": true
    },
    "414": {
        "question": "If $ST=8, TR=4$, and $PT=6$, find $QR$.",
        "image": "images/414.jpg",
        "choices": [
            "6",
            "8",
            "9",
            "10"
        ],
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "414",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 509,
            "img_height": 386,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If $ST=8, TR=4$, and $PT=6$, find $QR$.\nChoices:\n(A) 6\n(B) 8\n(C) 9\n(D) 10\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "ST = 8\nTR = 4\nPT = 6\n\nQR = ST - TR - PT\nprint(QR)",
        "execution": "-2",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "415": {
        "question": "What is the average annual wage in Slovak Republic in the year 2019",
        "image": "images/415.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "15017",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "415",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the average annual wage in Slovak Republic in the year 2019\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "annual_wages = {\n    2018: 13500,\n    2019: 14200,\n    2020: 15000\n}\n\naverage_wage = sum(annual_wages.values()) / len(annual_wages)\nprint(average_wage)",
        "execution": "14233.333333333334",
        "error": "None",
        "extraction": "14200",
        "prediction": "14200",
        "true_false": false
    },
    "416": {
        "question": "what is the highest volume written on the blender?",
        "image": "images/416.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "800",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "416",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 768,
            "img_height": 1024,
            "source": "TextVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: what is the highest volume written on the blender?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def highest_volume(blender_volumes):\n    max_volume = max(blender_volumes)\n    return max_volume\n\nblender_volumes = [500, 750, 1000, 1500, 2000]\nprint(highest_volume(blender_volumes))",
        "execution": "2000",
        "error": "None",
        "extraction": "2000",
        "prediction": "2000",
        "true_false": false
    },
    "417": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/417.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "417",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 564,
            "img_height": 748,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "418": {
        "question": "If the number of grasshoppers decreases, what will the population of spiders most likely do?",
        "image": "images/418.jpg",
        "choices": [
            "remain the same",
            "increase",
            "decrease",
            "NA"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "418",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 375,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If the number of grasshoppers decreases, what will the population of spiders most likely do?\nChoices:\n(A) remain the same\n(B) increase\n(C) decrease\n(D) NA\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def population_change(grasshoppers):\n    if grasshoppers < 0:\n        return \"NA\"\n    elif grasshoppers == 0:\n        return \"remain the same\"\n    else:\n        return \"decrease\"\n\ngrasshoppers = 10\nprint(population_change(grasshoppers))",
        "execution": "decrease",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "419": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) after nine.",
        "image": "images/419.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "419",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) after nine.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "time_word = \"quarter\"\nprint(time_word)",
        "execution": "quarter",
        "error": "None",
        "extraction": "quarter",
        "prediction": "quarter",
        "true_false": true
    },
    "420": {
        "question": "What is the lowest value on the Y axis?",
        "image": "images/420.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "0.0",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "420",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2256,
            "img_height": 1763,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the lowest value on the Y axis?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def lowest_value(y_axis):\n    return min(y_axis)\n\ny_axis = [10, 5, 8, 3, 6]\nprint(lowest_value(y_axis))",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3.0",
        "true_false": false
    },
    "421": {
        "question": "An elevator cab of mass $m=500 \\mathrm{~kg}$ is descending with speed $v_i=4.0 \\mathrm{~m} / \\mathrm{s}$ when its supporting cable begins to slip, allowing it to fall with constant acceleration $\\vec{a}=\\vec{g} / 5$.\r\nDuring the $12 \\mathrm{~m}$ fall, what is the work $W_T$ done on the cab by the upward pull $\\vec{T}$ of the elevator cable?",
        "image": "images/421.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-47",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "421",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 550,
            "img_height": 1190,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: An elevator cab of mass $m=500 \\mathrm{~kg}$ is descending with speed $v_i=4.0 \\mathrm{~m} / \\mathrm{s}$ when its supporting cable begins to slip, allowing it to fall with constant acceleration $\\vec{a}=\\vec{g} / 5$.\r\nDuring the $12 \\mathrm{~m}$ fall, what is the work $W_T$ done on the cab by the upward pull $\\vec{T}$ of the elevator cable?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "m = 500  # mass of the elevator cab in kg\nvi = 4.0  # initial velocity in m/s\na = 9.8 / 5  # acceleration due to gravity divided by 5 in m/s^2\nd = 12  # distance fallen in m\n\nvf = (vi**2 + 2*a*d)**0.5  # final velocity in m/s\nW_T = 0.5 * m * (vf**2 - vi**2)  # work done on the cab in J\n\nprint(W_T)",
        "execution": "11760.000000000002",
        "error": "None",
        "extraction": "-24000.0",
        "prediction": null,
        "true_false": false
    },
    "422": {
        "question": "What is the value of the smallest bar?",
        "image": "images/422.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "422",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def smallest_bar(bars):\n    smallest = float('inf')\n    for bar in bars:\n        if bar < smallest:\n            smallest = bar\n    return smallest\n\nbars = [5, 3, 8, 2, 6]\nprint(smallest_bar(bars))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "423": {
        "question": "Is Deep Pink less than Dark Gray?",
        "image": "images/423.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "423",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 577,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Deep Pink less than Dark Gray?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "deep_pink = (255, 20, 147)\ndark_gray = (169, 169, 169)\n\nif deep_pink < dark_gray:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "no",
        "true_false": true
    },
    "424": {
        "question": "Is the food half eaten?",
        "image": "images/424.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "424",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 428,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the food half eaten?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_status = \"half eaten\"\n\nif food_status == \"half eaten\":\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "425": {
        "question": "\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220C\uff1d90\u00b0\uff0c\u82e5AC\uff1d6\uff0cBC\uff1d8\uff0c\u5219cosA\u7684\u503c\u4e3a\uff08\uff09",
        "image": "images/425.jpg",
        "choices": [
            "0.6",
            "0.8",
            "0.75",
            "\\frac{4}{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "0.6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "425",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 171,
            "img_height": 120,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5728Rt\u25b3ABC\u4e2d\uff0c\u2220C\uff1d90\u00b0\uff0c\u82e5AC\uff1d6\uff0cBC\uff1d8\uff0c\u5219cosA\u7684\u503c\u4e3a\uff08\uff09\nChoices:\n(A) 0.6\n(B) 0.8\n(C) 0.75\n(D) \\frac{4}{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAC = 6\nBC = 8\n\ncosA = AC / math.sqrt(AC**2 + BC**2)\nprint(cosA)",
        "execution": "0.6",
        "error": "None",
        "extraction": "0.75",
        "prediction": "0.75",
        "true_false": false
    },
    "426": {
        "question": "\u5982\u56fe\uff0c\u82e5DE\u662f\u25b3ABC\u7684\u4e2d\u4f4d\u7ebf\uff0c\u25b3ADE\u7684\u5468\u957f\u4e3a1\uff0c\u5219\u25b3ABC\u7684\u5468\u957f\u4e3a\uff08\uff09",
        "image": "images/426.jpg",
        "choices": [
            "1",
            "2",
            "3",
            "4"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "426",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 154,
            "img_height": 111,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u82e5DE\u662f\u25b3ABC\u7684\u4e2d\u4f4d\u7ebf\uff0c\u25b3ADE\u7684\u5468\u957f\u4e3a1\uff0c\u5219\u25b3ABC\u7684\u5468\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 1\n(B) 2\n(C) 3\n(D) 4\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 2 * AD\nBC = 2 * DE\nAC = AB + BC\n\nperimeter = AB + BC + AC\nperimeter",
        "execution": "",
        "error": "name 'AD' is not defined",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "427": {
        "question": "How many people prefer the most preferred object?",
        "image": "images/427.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "427",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people prefer the most preferred object?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_preferred_objects(preferences):\n    preferred_object = max(preferences, key=preferences.get)\n    count = 0\n    for object, preference in preferences.items():\n        if preference == preferences[preferred_object]:\n            count += 1\n    return count\n\npreferences = {\n    'object1': 5,\n    'object2': 3,\n    'object3': 5,\n    'object4': 2,\n    'object5': 1\n}\n\nprint(count_preferred_objects(preferences))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "428": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/428.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "28",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "428",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1259,
            "img_height": 968,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "429": {
        "question": "What percentage of people prefer the least preferred object?",
        "image": "images/429.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "429",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percentage of people prefer the least preferred object?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "least_preferred = 10\ntotal_people = 100\n\npercentage = (least_preferred / total_people) * 100\nprint(percentage)",
        "execution": "10.0",
        "error": "None",
        "extraction": "10.0",
        "prediction": null,
        "true_false": false
    },
    "430": {
        "question": "The derivative of f(x) at x=0 is ____ that at x=5",
        "image": "images/430.jpg",
        "choices": [
            "larger than",
            "equal to",
            "smaller than"
        ],
        "unit": null,
        "precision": null,
        "answer": "smaller than",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "430",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 552,
            "img_height": 393,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The derivative of f(x) at x=0 is ____ that at x=5\nChoices:\n(A) larger than\n(B) equal to\n(C) smaller than\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nf = x**2\n\nderivative_at_0 = sp.diff(f, x).subs(x, 0)\nderivative_at_5 = sp.diff(f, x).subs(x, 5)\n\nif derivative_at_0 > derivative_at_5:\n    answer = \"(A) larger than\"\nelif derivative_at_0 == derivative_at_5:\n    answer = \"(B) equal to\"\nelse:\n    answer = \"(C) smaller than\"\n\nprint(answer)",
        "execution": "(C) smaller than",
        "error": "None",
        "extraction": "(B) equal to",
        "prediction": "equal to",
        "true_false": false
    },
    "431": {
        "question": "From the above food web diagram, what would happen to dragonfly if all mayfly dies",
        "image": "images/431.jpg",
        "choices": [
            "remains the same",
            "increase",
            "decrease",
            "NA"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "431",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 464,
            "img_height": 297,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: From the above food web diagram, what would happen to dragonfly if all mayfly dies\nChoices:\n(A) remains the same\n(B) increase\n(C) decrease\n(D) NA\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_web = {\n    'dragonfly': ['mayfly', 'mosquito'],\n    'mosquito': ['mayfly'],\n    'mayfly': []\n}\n\ndef impact_on_dragonfly(food_web):\n    if 'mayfly' not in food_web:\n        return \"NA\"\n    elif len(food_web['mayfly']) == 0:\n        return \"increase\"\n    else:\n        return \"decrease\"\n\nprint(impact_on_dragonfly(food_web))",
        "execution": "increase",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "432": {
        "question": "In how many years, is the percentage of undernourished male children greater than 0.4 %?",
        "image": "images/432.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "432",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1085,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the percentage of undernourished male children greater than 0.4 %?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_with_greater_percentage(percentage):\n    years = 0\n    undernourished_percentage = 0.2\n\n    while undernourished_percentage <= percentage:\n        years += 1\n        undernourished_percentage += 0.02\n\n    return years\n\npercentage = 0.4\nprint(years_with_greater_percentage(percentage))",
        "execution": "10",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "433": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/433.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "433",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 425,
            "img_height": 350,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "434": {
        "question": "In the figure above, side AC of triangle ABC is on line l. What is x in terms of k?",
        "image": "images/434.jpg",
        "choices": [
            "60-k",
            "k",
            "60+k",
            "120-k",
            "120-2*k"
        ],
        "unit": null,
        "precision": null,
        "answer": "60-k",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "434",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 215,
            "img_height": 157,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, side AC of triangle ABC is on line l. What is x in terms of k?\nChoices:\n(A) 60-k\n(B) k\n(C) 60+k\n(D) 120-k\n(E) 120-2*k\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nk = sp.symbols('k')\nx = 120 - 2*k\n\nx",
        "execution": "",
        "error": "None",
        "extraction": "120-2*k",
        "prediction": "120-2*k",
        "true_false": false
    },
    "435": {
        "question": "In how many years, is the percentage of employed females who are not attending school greater than the average percentage of employed females who are not attending school taken over all years ?",
        "image": "images/435.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "435",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 955,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the percentage of employed females who are not attending school greater than the average percentage of employed females who are not attending school taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_than_average(data):\n    total_years = len(data)\n    average_percentage = sum(data) / total_years\n\n    for i in range(total_years):\n        if data[i] > average_percentage:\n            return total_years - i\n\n    return 0\n\ndata = [50, 60, 70, 80, 90]\nprint(years_greater_than_average(data))",
        "execution": "2",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "436": {
        "question": "How many algorithms have accuracy lower than 8 in at least one dataset?",
        "image": "images/436.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "436",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many algorithms have accuracy lower than 8 in at least one dataset?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_lower_accuracy(algorithms):\n    count = 0\n    for algorithm in algorithms:\n        for dataset in algorithm['datasets']:\n            if algorithm['accuracy'][dataset] < 8:\n                count += 1\n                break\n    return count\n\nalgorithms = [\n    {\n        'name': 'Algorithm 1',\n        'datasets': ['Dataset 1', 'Dataset 2', 'Dataset 3'],\n        'accuracy': {\n            'Dataset 1': 7,\n            'Dataset 2': 9,\n            'Dataset 3': 6\n        }\n    },\n    {\n        'name': 'Algorithm 2',\n        'datasets': ['Dataset 1', 'Dataset 2', 'Dataset 3'],\n        'accuracy': {\n            'Dataset 1': 8,\n            'Dataset 2': 7,\n            'Dataset 3': 9\n        }\n    },\n    {\n        'name': 'Algorithm 3',\n        'datasets': ['Dataset 1', 'Dataset 2', 'Dataset 3'],\n        'accuracy': {\n            'Dataset 1': 9,\n            'Dataset 2': 8,\n            'Dataset 3': 10\n        }\n    }\n]\n\nprint(count_lower_accuracy(algorithms))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "437": {
        "question": "Fig.Q3 shows an excerpt of the transmission phase of a TCP connection. Assume the length of the IP header is 20 bytes. What is the ACK number at message 6?",
        "image": "images/437.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "839",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "437",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 638,
            "img_height": 814,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fig.Q3 shows an excerpt of the transmission phase of a TCP connection. Assume the length of the IP header is 20 bytes. What is the ACK number at message 6?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "ip_header_length = 20\nmessage_6_seq_num = 120\nmessage_6_data_length = 80\n\nack_number = message_6_seq_num + message_6_data_length + ip_header_length\nprint(ack_number)",
        "execution": "220",
        "error": "None",
        "extraction": "220",
        "prediction": "220",
        "true_false": false
    },
    "438": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/438.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "438",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 329,
            "img_height": 367,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "439": {
        "question": "is this function convex?",
        "image": "images/439.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "439",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 539,
            "img_height": 256,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: is this function convex?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_function_convex(f, a, b):\n    h = (b - a) / 1000\n    x = a\n    while x <= b:\n        if f(x + h) - 2 * f(x) + f(x - h) < 0:\n            return False\n        x += h\n    return True\n\n# Example function\ndef f(x):\n    return x**2\n\n# Check if the function f(x) is convex on the interval [0, 1]\nprint(is_function_convex(f, 0, 1))",
        "execution": "True",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "440": {
        "question": "Is the white plate half full?",
        "image": "images/440.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "440",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 480,
            "img_height": 640,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the white plate half full?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "plate_status = \"half full\"\n\nif plate_status == \"half full\":\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "441": {
        "question": "What is the perimeter of the shape?",
        "image": "images/441.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "441",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 258,
            "img_height": 241,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the shape?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side1 = 5\nside2 = 7\nside3 = 3\nside4 = 4\n\nperimeter = side1 + side2 + side3 + side4\nprint(perimeter)",
        "execution": "19",
        "error": "None",
        "extraction": "19",
        "prediction": "19",
        "true_false": false
    },
    "442": {
        "question": "How many objects are preferred by more than 7 people in at least one category?",
        "image": "images/442.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "442",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many objects are preferred by more than 7 people in at least one category?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "objects = {\n    'category1': {\n        'object1': 5,\n        'object2': 8,\n        'object3': 3,\n        'object4': 10\n    },\n    'category2': {\n        'object1': 2,\n        'object2': 6,\n        'object3': 9,\n        'object4': 4\n    },\n    'category3': {\n        'object1': 7,\n        'object2': 1,\n        'object3': 12,\n        'object4': 3\n    }\n}\n\ncount = 0\nfor category in objects:\n    for object in objects[category]:\n        if objects[category][object] > 7:\n            count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "443": {
        "question": "As shown in the figure: In Rt\u25b3ABC, \u2220C = 90.0, AC = 8.0, AB = 10.0, then the value of sinB is equal to ()",
        "image": "images/443.jpg",
        "choices": [
            "\\frac{3}{5}",
            "\\frac{4}{5}",
            "\\frac{3}{4}",
            "\\frac{4}{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{4}{5}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "443",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 169,
            "img_height": 80,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure: In Rt\u25b3ABC, \u2220C = 90.0, AC = 8.0, AB = 10.0, then the value of sinB is equal to ()\nChoices:\n(A) \\frac{3}{5}\n(B) \\frac{4}{5}\n(C) \\frac{3}{4}\n(D) \\frac{4}{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_sinB(AC, AB):\n    BC = math.sqrt(AC**2 + AB**2)\n    sinB = AC / BC\n    return sinB\n\nAC = 8.0\nAB = 10.0\n\nsinB = find_sinB(AC, AB)\nprint(sinB)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "0.6",
        "prediction": "\\frac{3}{5}",
        "true_false": false
    },
    "444": {
        "question": "What is the difference between the two genders?",
        "image": "images/444.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "444",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between the two genders?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "gender1 = \"male\"\ngender2 = \"female\"\n\ndifference = set(gender1) - set(gender2)\nprint(difference)",
        "execution": "set()",
        "error": "None",
        "extraction": "{'m'}",
        "prediction": null,
        "true_false": false
    },
    "445": {
        "question": "Is Light Slate less than Saddle Brown?",
        "image": "images/445.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "445",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 436,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Light Slate less than Saddle Brown?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "light_slate = 1\nsaddle_brown = 2\n\nif light_slate < saddle_brown:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "446": {
        "question": "\u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u70b9D\u662f\u25b3ABC\u7684\u5185\u5fc3\uff0c\u8fde\u63a5DB\uff0cDC\uff0c\u8fc7\u70b9D\u4f5cEF\u2225BC\u5206\u522b\u4ea4AB\u3001AC\u4e8e\u70b9E\u3001F\uff0c\u82e5BE+CF\uff1d8\uff0c\u5219EF\u7684\u957f\u5ea6\u4e3a\uff08\uff09",
        "image": "images/446.jpg",
        "choices": [
            "4",
            "5",
            "8",
            "16"
        ],
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "446",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 144,
            "img_height": 105,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u70b9D\u662f\u25b3ABC\u7684\u5185\u5fc3\uff0c\u8fde\u63a5DB\uff0cDC\uff0c\u8fc7\u70b9D\u4f5cEF\u2225BC\u5206\u522b\u4ea4AB\u3001AC\u4e8e\u70b9E\u3001F\uff0c\u82e5BE+CF\uff1d8\uff0c\u5219EF\u7684\u957f\u5ea6\u4e3a\uff08\uff09\nChoices:\n(A) 4\n(B) 5\n(C) 8\n(D) 16\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the variables\nBE = sp.Symbol('BE')\nCF = sp.Symbol('CF')\nEF = sp.Symbol('EF')\n\n# Define the equations\neq1 = sp.Eq(BE + CF, 8)\neq2 = sp.Eq(EF / BE, EF / CF)\n\n# Solve the equations\nsolution = sp.solve((eq1, eq2), (BE, CF, EF))\n\n# Get the value of EF\nEF_value = solution[EF]\n\n# Print the result\nprint(EF_value)",
        "execution": "",
        "error": "list indices must be integers or slices, not Symbol",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "447": {
        "question": "Does Midnight Blue intersect Purple?",
        "image": "images/447.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "447",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 685,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Midnight Blue intersect Purple?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "midnight_blue = [0, 0, 255]\npurple = [128, 0, 128]\n\ndef intersect(color1, color2):\n    if color1 == color2:\n        return \"yes\"\n    else:\n        return \"no\"\n\nprint(intersect(midnight_blue, purple))",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "448": {
        "question": "Which year recorded the highest share of Urban secondary schools with access to electricity in India?",
        "image": "images/448.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2016",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "448",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which year recorded the highest share of Urban secondary schools with access to electricity in India?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Read the data from the CSV file\ndata = pd.read_csv('urban_schools_data.csv')\n\n# Filter the data for Urban secondary schools in India\nfiltered_data = data[(data['School Type'] == 'Secondary') & (data['Location'] == 'Urban') & (data['Country'] == 'India')]\n\n# Find the year with the highest share of schools with access to electricity\nhighest_share_year = filtered_data['Year'].loc[filtered_data['Access to Electricity (%)'].idxmax()]\n\nprint(highest_share_year)",
        "execution": "",
        "error": "[Errno 2] No such file or directory: 'urban_schools_data.csv'",
        "extraction": "2015",
        "prediction": "2015",
        "true_false": false
    },
    "449": {
        "question": "How many miles per gallon do the average motorcycle get on the highway?",
        "image": "images/449.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "40",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "449",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many miles per gallon do the average motorcycle get on the highway?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "average_mpg = 50\nprint(average_mpg)",
        "execution": "50",
        "error": "None",
        "extraction": "50",
        "prediction": "50",
        "true_false": false
    },
    "450": {
        "question": "If all the grass died, what would be most affected?",
        "image": "images/450.jpg",
        "choices": [
            "garter snakes",
            "hognose snakes",
            "hawks",
            "grasshoppers"
        ],
        "unit": null,
        "precision": null,
        "answer": "grasshoppers",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "450",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 375,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If all the grass died, what would be most affected?\nChoices:\n(A) garter snakes\n(B) hognose snakes\n(C) hawks\n(D) grasshoppers\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_affected():\n    grass = 100\n    garter_snakes = 10\n    hognose_snakes = 5\n    hawks = 2\n    grasshoppers = 50\n\n    if grass == 0:\n        return \"All the grass died. The most affected would be grasshoppers.\"\n\n    return \"\"\n\nprint(most_affected())",
        "execution": "",
        "error": "None",
        "extraction": "All the grass died. The most affected would be grasshoppers.",
        "prediction": "grasshoppers",
        "true_false": true
    },
    "451": {
        "question": "Is the number of small yellow metallic choppers that are behind the large cyan thing less than the number of brown metal double buss that are behind the small yellow shiny thing?",
        "image": "images/451.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "451",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of small yellow metallic choppers that are behind the large cyan thing less than the number of brown metal double buss that are behind the small yellow shiny thing?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_yellow_metallic_choppers = 5\nlarge_cyan_thing = 3\nbrown_metal_double_buss = 4\nsmall_yellow_shiny_thing = 2\n\nif small_yellow_metallic_choppers < brown_metal_double_buss:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\n\nprint(ans)",
        "execution": "No",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "452": {
        "question": "Based on the image, what is the most likely equilibrium population count?",
        "image": "images/452.jpg",
        "choices": [
            "40",
            "60",
            "80",
            "100"
        ],
        "unit": null,
        "precision": null,
        "answer": "80",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "452",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 441,
            "img_height": 366,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Based on the image, what is the most likely equilibrium population count?\nChoices:\n(A) 40\n(B) 60\n(C) 80\n(D) 100\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_likely_population(image):\n    population_counts = {\n        '40': 0,\n        '60': 0,\n        '80': 0,\n        '100': 0\n    }\n\n    if \"40\" in image:\n        population_counts['40'] += 1\n    if \"60\" in image:\n        population_counts['60'] += 1\n    if \"80\" in image:\n        population_counts['80'] += 1\n    if \"100\" in image:\n        population_counts['100'] += 1\n\n    max_population = max(population_counts, key=population_counts.get)\n    return max_population\n\nimage = \"The image shows a graph of population growth over time. The population starts at 40 and steadily increases to 100.\"\n\nprint(most_likely_population(image))",
        "execution": "40",
        "error": "None",
        "extraction": "100",
        "prediction": "100",
        "true_false": false
    },
    "453": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/453.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "453",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 116,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "454": {
        "question": "What is the value of the smallest individual bar in the whole chart?",
        "image": "images/454.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "454",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'bar1': 10,\n    'bar2': 5,\n    'bar3': 8,\n    'bar4': 3,\n    'bar5': 6\n}\n\nsmallest_bar = min(chart.values())\nprint(smallest_bar)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "455": {
        "question": "If x = 32 and r = 18, what is the length of the arc shown in the figure above?",
        "image": "images/455.jpg",
        "choices": [
            "16*\\pi/5",
            "32*\\pi/5",
            "36*\\pi",
            "288*\\pi/5",
            "576*\\pi"
        ],
        "unit": null,
        "precision": null,
        "answer": "16*\\pi/5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "455",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 575,
            "img_height": 353,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If x = 32 and r = 18, what is the length of the arc shown in the figure above?\nChoices:\n(A) 16*\\pi/5\n(B) 32*\\pi/5\n(C) 36*\\pi\n(D) 288*\\pi/5\n(E) 576*\\pi\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nx = 32\nr = 18\n\nlength_of_arc = (x / (2 * math.pi * r)) * (2 * math.pi * r)\nprint(length_of_arc)",
        "execution": "32.0",
        "error": "None",
        "extraction": "32*\\pi",
        "prediction": "36*\\pi",
        "true_false": false
    },
    "456": {
        "question": "Is Periwinkle the minimum?",
        "image": "images/456.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "456",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 532,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Periwinkle the minimum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "min_color = 'Periwinkle'\nchoices = ['Red', 'Blue', 'Green', 'Yellow', 'Periwinkle']\n\nif min_color == choices[0]:\n    ans = 'yes'\nelse:\n    ans = 'no'\n\nprint(ans)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "457": {
        "question": "What number is shown?",
        "image": "images/457.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4525",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "457",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 605,
            "img_height": 97,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "458": {
        "question": "If you add the two visible numbers, on the jerseys, what is the total sum?",
        "image": "images/458.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "458",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If you add the two visible numbers, on the jerseys, what is the total sum?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "visible_numbers = [5, 8, 2, 9, 3, 7]\ntotal_sum = sum(visible_numbers)\nprint(total_sum)",
        "execution": "34",
        "error": "None",
        "extraction": "34",
        "prediction": "34",
        "true_false": false
    },
    "459": {
        "question": "Subtract all large cyan matte balls. Subtract all tiny shiny objects. How many objects are left?",
        "image": "images/459.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "459",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large cyan matte balls. Subtract all tiny shiny objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_cyan_matte_balls = 5\ntiny_shiny_objects = 3\n\nobjects_left = large_cyan_matte_balls - tiny_shiny_objects\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "460": {
        "question": "If there were fewer leaves in this ecosystem, the first organism to experience change as a result would be:",
        "image": "images/460.jpg",
        "choices": [
            "Frogs",
            "Crickets",
            "Snakes",
            "Hawks"
        ],
        "unit": null,
        "precision": null,
        "answer": "Crickets",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "460",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 960,
            "img_height": 720,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If there were fewer leaves in this ecosystem, the first organism to experience change as a result would be:\nChoices:\n(A) Frogs\n(B) Crickets\n(C) Snakes\n(D) Hawks\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def first_organism_to_experience_change(leaves):\n    if leaves < 100:\n        return \"Frogs\"\n    elif leaves < 1000:\n        return \"Crickets\"\n    elif leaves < 10000:\n        return \"Snakes\"\n    else:\n        return \"Hawks\"\n\nleaves = 500\nprint(first_organism_to_experience_change(leaves))",
        "execution": "Crickets",
        "error": "None",
        "extraction": "Crickets",
        "prediction": "Crickets",
        "true_false": true
    },
    "461": {
        "question": "A perceptual audio codec is used to compress an audio signal. The codec groups every 4 barks into a subband and then allocates bits to different subbands according to the result of a spectrum analysis based on a psychoacoustic model. All samples in the same subband are quantized with the same quantizer, and the bit resolution of which is allocated by the codec. (The Bark scale is a psychoacoustical scale proposed by Eberhard Zwicker in 1961.) Fig. Q1a shows the frequency spectrum of a windowed segment of audio signal. The psychoacoustic model shown in Fig. Q1b is used in the audio codec to derive the masking threshold for the audio segment. How many potential maskers in Fig. Q1a?",
        "image": "images/461.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "461",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 908,
            "img_height": 488,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A perceptual audio codec is used to compress an audio signal. The codec groups every 4 barks into a subband and then allocates bits to different subbands according to the result of a spectrum analysis based on a psychoacoustic model. All samples in the same subband are quantized with the same quantizer, and the bit resolution of which is allocated by the codec. (The Bark scale is a psychoacoustical scale proposed by Eberhard Zwicker in 1961.) Fig. Q1a shows the frequency spectrum of a windowed segment of audio signal. The psychoacoustic model shown in Fig. Q1b is used in the audio codec to derive the masking threshold for the audio segment. How many potential maskers in Fig. Q1a?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\n# Frequency spectrum of the audio signal\nfrequency_spectrum = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200]\n\n# Psychoacoustic model for masking threshold\nmasking_threshold = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100]\n\n# Find the potential maskers\npotential_maskers = []\nfor i in range(len(frequency_spectrum)):\n    if frequency_spectrum[i] > masking_threshold[i]:\n        potential_maskers.append(frequency_spectrum[i])\n\nnum_potential_maskers = len(potential_maskers)\nprint(num_potential_maskers)",
        "execution": "20",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "462": {
        "question": "How many bars have values larger than 100?",
        "image": "images/462.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "462",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many bars have values larger than 100?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_bars(bars):\n    count = 0\n    for bar in bars:\n        if bar > 100:\n            count += 1\n    return count\n\nbars = [50, 75, 100, 125, 150, 175]\nprint(count_bars(bars))",
        "execution": "3",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "463": {
        "question": "Subtract all large gray things. Subtract all small brown metallic balls. How many objects are left?",
        "image": "images/463.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "463",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large gray things. Subtract all small brown metallic balls. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_gray_things = 5\nsmall_brown_metallic_balls = 3\n\nobjects_left = large_gray_things - small_brown_metallic_balls\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "464": {
        "question": "Choose the answer for the missing picture.",
        "image": "images/464.jpg",
        "choices": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "464",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1000,
            "img_height": 1316,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Choose the answer for the missing picture.\nChoices:\n(A) 1\n(B) 2\n(C) 3\n(D) 4\n(E) 5\n(F) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "missing_picture = 3\nprint(missing_picture)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "465": {
        "question": "Is Light Green the low median?",
        "image": "images/465.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "465",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 628,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Light Green the low median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "low_median = \"Light Green\"\n\nif low_median == \"Light Green\":\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "466": {
        "question": "Does Dark Periwinkle intersect Yellow Green?",
        "image": "images/466.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "466",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 487,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Dark Periwinkle intersect Yellow Green?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def intersect(color1, color2):\n    colors = {\n        'Dark Periwinkle': ['#665fd1', '#5751c1', '#4a44b2'],\n        'Yellow Green': ['#9acd32', '#8dbb2c', '#7fa227']\n    }\n\n    if color1 in colors and color2 in colors:\n        for shade1 in colors[color1]:\n            for shade2 in colors[color2]:\n                if shade1 == shade2:\n                    return \"yes\"\n        return \"no\"\n    else:\n        return \"Invalid colors\"\n\nprint(intersect('Dark Periwinkle', 'Yellow Green'))",
        "execution": "no",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "467": {
        "question": "The degree measures of minor arc $\\widehat{A C}$ and major arc $\\widehat{A D C}$ are $x$ and $y$ respectively. If $m\u2220ABC = 70\u00b0$, find $x$.",
        "image": "images/467.jpg",
        "choices": [
            "90",
            "100",
            "110",
            "120"
        ],
        "unit": null,
        "precision": null,
        "answer": "110",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "467",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 499,
            "img_height": 235,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The degree measures of minor arc $\\widehat{A C}$ and major arc $\\widehat{A D C}$ are $x$ and $y$ respectively. If $m\u2220ABC = 70\u00b0$, find $x$.\nChoices:\n(A) 90\n(B) 100\n(C) 110\n(D) 120\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\ny = sp.Symbol('y')\n\neq1 = sp.Eq(x, 360 - 2 * 70)\neq2 = sp.Eq(y, 360 - 70)\n\nsolution = sp.solve((eq1, eq2), (x, y))\nx_value = solution[x]\n\nprint(x_value)",
        "execution": "220",
        "error": "None",
        "extraction": "110",
        "prediction": "110",
        "true_false": true
    },
    "468": {
        "question": "How many people prefer the most preferred object?",
        "image": "images/468.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "468",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people prefer the most preferred object?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_preferred(preferences):\n    preferred_object = max(preferences, key=preferences.get)\n    count = 0\n    for object, preference in preferences.items():\n        if preference == preferences[preferred_object]:\n            count += 1\n    return count\n\npreferences = {\n    'object1': 5,\n    'object2': 3,\n    'object3': 5,\n    'object4': 2,\n    'object5': 1\n}\n\nprint(count_preferred(preferences))",
        "execution": "2",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "469": {
        "question": "Is Sky Blue less than Chartreuse?",
        "image": "images/469.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "469",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 532,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Sky Blue less than Chartreuse?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sky_blue = \"Sky Blue\"\nchartreuse = \"Chartreuse\"\n\nif sky_blue < chartreuse:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "470": {
        "question": "Which of the following models has the lowest KS Rollout Loss overall?",
        "image": "images/470.jpg",
        "choices": [
            "Baseline",
            "Diffusion",
            "PDE-Refiner",
            "Pushforward"
        ],
        "unit": null,
        "precision": null,
        "answer": "PDE-Refiner",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "470",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1422,
            "img_height": 854,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which of the following models has the lowest KS Rollout Loss overall?\nChoices:\n(A) Baseline\n(B) Diffusion\n(C) PDE-Refiner\n(D) Pushforward\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "ks_rollout_loss = {\n    'Baseline': 0.05,\n    'Diffusion': 0.08,\n    'PDE-Refiner': 0.03,\n    'Pushforward': 0.06\n}\n\nlowest_loss = min(ks_rollout_loss.values())\nlowest_models = [model for model, loss in ks_rollout_loss.items() if loss == lowest_loss]\nprint(lowest_models)",
        "execution": "",
        "error": "name 'lowest_loss' is not defined",
        "extraction": "['PDE-Refiner']",
        "prediction": "PDE-Refiner",
        "true_false": true
    },
    "471": {
        "question": "Lily and her friends recorded their scores while playing a board game. Which score did the greatest number of people receive?'",
        "image": "images/471.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "471",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 351,
            "img_height": 190,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Lily and her friends recorded their scores while playing a board game. Which score did the greatest number of people receive?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "scores = [4, 5, 3, 4, 2, 5, 4, 3, 5, 5, 2, 4, 5, 3, 4, 5, 2, 3, 4, 5]\n\nscore_counts = {}\nfor score in scores:\n    if score in score_counts:\n        score_counts[score] += 1\n    else:\n        score_counts[score] = 1\n\nmax_count = max(score_counts.values())\nmost_common_scores = [score for score, count in score_counts.items() if count == max_count]\n\nprint(most_common_scores)",
        "execution": "",
        "error": "name 'max_count' is not defined",
        "extraction": "[5]",
        "prediction": null,
        "true_false": false
    },
    "472": {
        "question": "Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.",
        "image": "images/472.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "472",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 633,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dots_per_group = 9 // 3\nprint(dots_per_group)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "473": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/473.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "12",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "473",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2500,
            "img_height": 2604,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "474": {
        "question": "How many miles per gallon do an average city bus get?",
        "image": "images/474.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "25",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "474",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 333,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many miles per gallon do an average city bus get?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "average_city_bus_mpg = 4.0\nprint(average_city_bus_mpg)",
        "execution": "4.0",
        "error": "None",
        "extraction": "4.0",
        "prediction": null,
        "true_false": false
    },
    "475": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/475.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "475",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 71,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "476": {
        "question": "If frogs were removed from this environment what animal would potentially see an increase in its population?",
        "image": "images/476.jpg",
        "choices": [
            "crickets",
            "deer",
            "snakes",
            "hawks"
        ],
        "unit": null,
        "precision": null,
        "answer": "crickets",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "476",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 518,
            "img_height": 405,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If frogs were removed from this environment what animal would potentially see an increase in its population?\nChoices:\n(A) crickets\n(B) deer\n(C) snakes\n(D) hawks\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def increase_population(frogs_removed):\n    if frogs_removed:\n        return \"snakes\"\n    else:\n        return \"\"\n\nfrogs_removed = True\n\nprint(increase_population(frogs_removed))",
        "execution": "snakes",
        "error": "None",
        "extraction": "snakes",
        "prediction": "snakes",
        "true_false": false
    },
    "477": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) past three.",
        "image": "images/477.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "half",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "477",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) past three.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "time_word = \"quarter past\"\nprint(time_word)",
        "execution": "quarter past",
        "error": "None",
        "extraction": "quarter past",
        "prediction": "quarter past",
        "true_false": false
    },
    "478": {
        "question": "As shown in the figure, in the diamond ABCD, two diagonal lines AC = 12.0, BD = 16.0, then the edge length of this diamond is ()",
        "image": "images/478.jpg",
        "choices": [
            "10",
            "8",
            "6",
            "5"
        ],
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "478",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 125,
            "img_height": 97,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the diamond ABCD, two diagonal lines AC = 12.0, BD = 16.0, then the edge length of this diamond is ()\nChoices:\n(A) 10\n(B) 8\n(C) 6\n(D) 5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef diamond_edge_length(AC, BD):\n    diagonal_length = math.sqrt(AC**2 + BD**2)\n    edge_length = diagonal_length / math.sqrt(2)\n    return edge_length\n\nAC = 12.0\nBD = 16.0\n\nprint(diamond_edge_length(AC, BD))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "8.49",
        "prediction": "8",
        "true_false": false
    },
    "479": {
        "question": "How many times Norway data bigger than Italy data ?",
        "image": "images/479.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "2.54",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "479",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many times Norway data bigger than Italy data ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "norway_data = 100\nitaly_data = 20\n\ntimes_bigger = norway_data / italy_data\nprint(times_bigger)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": "5.0",
        "true_false": false
    },
    "480": {
        "question": "Is the number of tiny blue metal bicycles behind the small sedan less than the number of purple fighters?",
        "image": "images/480.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "480",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of tiny blue metal bicycles behind the small sedan less than the number of purple fighters?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_bicycles_fighters(num_bicycles, num_fighters):\n    if num_bicycles < num_fighters:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_bicycles = 5\nnum_fighters = 8\n\nprint(compare_bicycles_fighters(num_bicycles, num_fighters))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "481": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/481.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "481",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 592,
            "img_height": 404,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "482": {
        "question": "In the figure above, triangle ABC is inscribed in the circle with center O and diameter AC. If AB = AO, what is the degree measure of angle ABO?",
        "image": "images/482.jpg",
        "choices": [
            "15*\\degree",
            "30*\\degree",
            "45*\\degree",
            "60*\\degree",
            "90*\\degree"
        ],
        "unit": null,
        "precision": null,
        "answer": "60*\\degree",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "482",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 143,
            "img_height": 134,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, triangle ABC is inscribed in the circle with center O and diameter AC. If AB = AO, what is the degree measure of angle ABO?\nChoices:\n(A) 15*\\degree\n(B) 30*\\degree\n(C) 45*\\degree\n(D) 60*\\degree\n(E) 90*\\degree\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_ABO(AB, AO):\n    # Calculate the radius of the circle\n    radius = AO / 2\n    \n    # Calculate the length of BC using Pythagorean theorem\n    BC = math.sqrt(2 * radius**2 - AB**2)\n    \n    # Calculate the tangent of angle ABO\n    tangent_ABO = BC / AB\n    \n    # Calculate the degree measure of angle ABO using inverse tangent function\n    degree_ABO = math.degrees(math.atan(tangent_ABO))\n    \n    return degree_ABO\n\nAB = 5\nAO = 10\n\nprint(angle_ABO(AB, AO))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "30*\\degree",
        "prediction": "30*\\degree",
        "true_false": false
    },
    "483": {
        "question": "As shown in the figure, AB is the diameter of \u2299O, point C is on \u2299O, AE is the tangent of \u2299O, A is the tangent point, connect BC and extend to intersect AE at point D. If \u2220AOC = 80.0, then the degree of \u2220ADB is ()",
        "image": "images/483.jpg",
        "choices": [
            "40\u00b0",
            "50\u00b0",
            "60\u00b0",
            "20\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "50\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "483",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 165,
            "img_height": 129,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of \u2299O, point C is on \u2299O, AE is the tangent of \u2299O, A is the tangent point, connect BC and extend to intersect AE at point D. If \u2220AOC = 80.0, then the degree of \u2220ADB is ()\nChoices:\n(A) 40\u00b0\n(B) 50\u00b0\n(C) 60\u00b0\n(D) 20\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle_ADB(angle_AOC):\n    angle_AOC_rad = math.radians(angle_AOC)\n    angle_AOB_rad = math.pi - angle_AOC_rad\n    angle_AOB_deg = math.degrees(angle_AOB_rad)\n    angle_ADB_deg = 180 - angle_AOB_deg\n    return angle_ADB_deg\n\nangle_AOC = 80.0\nangle_ADB = find_angle_ADB(angle_AOC)\nprint(angle_ADB)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "60",
        "prediction": "60\u00b0",
        "true_false": false
    },
    "484": {
        "question": "Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.",
        "image": "images/484.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "484",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 633,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dots_per_group = 9 // 3\nprint(dots_per_group)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "485": {
        "question": "\u5982\u56fe\uff0c\u70b9D\u5728\u7b49\u8fb9\u25b3ABC\u7684\u8fb9CB\u7684\u5ef6\u957f\u7ebf\u4e0a\uff0c\u70b9E\u5728\u7ebf\u6bb5BC\u4e0a\uff0c\u8fde\u63a5AD\uff0cAE\uff0c\u82e5DA\uff1dDE\uff0c\u4e14\u2220DAB\uff1d20\u00b0\uff0c\u90a3\u4e48\u2220EAC\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/485.jpg",
        "choices": [
            "20\u00b0",
            "15\u00b0",
            "10\u00b0",
            "5\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "10\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "485",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 235,
            "img_height": 110,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u70b9D\u5728\u7b49\u8fb9\u25b3ABC\u7684\u8fb9CB\u7684\u5ef6\u957f\u7ebf\u4e0a\uff0c\u70b9E\u5728\u7ebf\u6bb5BC\u4e0a\uff0c\u8fde\u63a5AD\uff0cAE\uff0c\u82e5DA\uff1dDE\uff0c\u4e14\u2220DAB\uff1d20\u00b0\uff0c\u90a3\u4e48\u2220EAC\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 20\u00b0\n(B) 15\u00b0\n(C) 10\u00b0\n(D) 5\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef solve_angle():\n    angle_DAB = 20\n    angle_DAE = 180 - angle_DAB\n    angle_ADE = angle_DAE / 2\n    angle_EAC = 180 - angle_ADE - angle_DAB\n    return angle_EAC\n\nprint(solve_angle())",
        "execution": "80.0",
        "error": "None",
        "extraction": "10",
        "prediction": "10\u00b0",
        "true_false": true
    },
    "486": {
        "question": "\u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0cAB\uff1d5\uff0cAD\uff1d7\uff0c\u5219ABCD\u7684\u5468\u957f\u4e3a\uff08\uff09",
        "image": "images/486.jpg",
        "choices": [
            "12",
            "14",
            "35",
            "24"
        ],
        "unit": null,
        "precision": null,
        "answer": "24",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "486",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 156,
            "img_height": 79,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0cAB\uff1d5\uff0cAD\uff1d7\uff0c\u5219ABCD\u7684\u5468\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 12\n(B) 14\n(C) 35\n(D) 24\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 5\nAD = 7\n\nperimeter = 2 * (AB + AD)\nprint(perimeter)",
        "execution": "24",
        "error": "None",
        "extraction": "14",
        "prediction": "14",
        "true_false": false
    },
    "487": {
        "question": "Are there fewer big cars behind the small brown shiny mountain bike than tiny objects on the right side of the bus?",
        "image": "images/487.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "487",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer big cars behind the small brown shiny mountain bike than tiny objects on the right side of the bus?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_objects(big_cars, small_bike, tiny_objects):\n    if big_cars < small_bike:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nbig_cars = 3\nsmall_bike = 1\ntiny_objects = 5\n\nprint(compare_objects(big_cars, small_bike, tiny_objects))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "488": {
        "question": "Subtract all brown things. Subtract all tiny blue metallic objects. How many objects are left?",
        "image": "images/488.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "488",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all brown things. Subtract all tiny blue metallic objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "objects = ['brown', 'brown', 'blue', 'tiny', 'metallic', 'blue', 'brown', 'tiny', 'blue', 'brown']\n\nobjects = [obj for obj in objects if obj != 'brown']\nobjects = [obj for obj in objects if obj != 'tiny' and obj != 'blue' and obj != 'metallic']\n\nprint(len(objects))",
        "execution": "0",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "489": {
        "question": "For trapezoid ABCD shown above, AB = 24, AD = 23, and BC = 16. What is the length of segment CD?",
        "image": "images/489.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "25",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "489",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 426,
            "img_height": 297,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For trapezoid ABCD shown above, AB = 24, AD = 23, and BC = 16. What is the length of segment CD?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 24\nAD = 23\nBC = 16\n\nCD = AB - BC\nprint(CD)",
        "execution": "8",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "490": {
        "question": "\u5982\u56fe\uff0c\u70b9A\u3001C\u3001B\u5728\u540c\u4e00\u76f4\u7ebf\u4e0a\uff0cDC\u22a5EC\uff0c\u82e5\u2220BCD\uff1d40\u00b0\uff0c\u5219\u2220ACE\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/490.jpg",
        "choices": [
            "30\u00b0",
            "40\u00b0",
            "50\u00b0",
            "60\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "50\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "490",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 155,
            "img_height": 88,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u70b9A\u3001C\u3001B\u5728\u540c\u4e00\u76f4\u7ebf\u4e0a\uff0cDC\u22a5EC\uff0c\u82e5\u2220BCD\uff1d40\u00b0\uff0c\u5219\u2220ACE\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 30\u00b0\n(B) 40\u00b0\n(C) 50\u00b0\n(D) 60\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_BCD = 40\n    angle_BCD_rad = math.radians(angle_BCD)\n    angle_ACE_rad = math.pi - angle_BCD_rad\n    angle_ACE_deg = math.degrees(angle_ACE_rad)\n    return angle_ACE_deg\n\nprint(find_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "50",
        "prediction": "50\u00b0",
        "true_false": true
    },
    "491": {
        "question": "Is Dark Blue the high median?",
        "image": "images/491.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "491",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 540,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Blue the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "high_median = \"Dark Blue\"\n\nif high_median == \"Dark Blue\":\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "492": {
        "question": "As shown in the figure, in the \u2299O with a radius of 2.0, C is a point on the extended line of the diameter AB, CD is tangent to the circle at point D. Connect AD, given that \u2220DAC = 30.0, the length of the line segment CD is ()",
        "image": "images/492.jpg",
        "choices": [
            "1",
            "\u221a{3}",
            "2",
            "2\u221a{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "2\u221a{3}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "492",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 158,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the \u2299O with a radius of 2.0, C is a point on the extended line of the diameter AB, CD is tangent to the circle at point D. Connect AD, given that \u2220DAC = 30.0, the length of the line segment CD is ()\nChoices:\n(A) 1\n(B) \u221a{3}\n(C) 2\n(D) 2\u221a{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_CD_length(angle):\n    radius = 2.0\n    angle_rad = math.radians(angle)\n    CD_length = radius * math.sin(angle_rad)\n    return CD_length\n\nangle = 30.0\nCD_length = find_CD_length(angle)\nprint(CD_length)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "2.0",
        "prediction": "2",
        "true_false": false
    },
    "493": {
        "question": "Is the function differentiable at every point?",
        "image": "images/493.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "493",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 847,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the function differentiable at every point?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\nf = sp.sin(x)\n\nderivative = sp.diff(f, x)\n\nif sp.limit(derivative, x, sp.oo) == sp.limit(derivative, x, -sp.oo):\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "494": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/494.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "494",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 97,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "495": {
        "question": "Are there fewer green things in front of the blue metallic car than choppers right of the chopper?",
        "image": "images/495.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "495",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer green things in front of the blue metallic car than choppers right of the chopper?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "green_things_in_front = 5\nblue_metallic_car = 3\nchoppers_right_of_chopper = 7\n\nif green_things_in_front < choppers_right_of_chopper:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "496": {
        "question": "What is the value of the smallest individual bar in the whole chart?",
        "image": "images/496.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "20",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "496",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'bar1': 10,\n    'bar2': 5,\n    'bar3': 8,\n    'bar4': 3,\n    'bar5': 6\n}\n\nsmallest_bar = min(chart.values())\nprint(smallest_bar)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "497": {
        "question": "What is the value of the largest bar?",
        "image": "images/497.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "497",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the largest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_bar(bars):\n    max_value = max(bars)\n    return max_value\n\nbars = [5, 8, 3, 10, 6]\nprint(largest_bar(bars))",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "498": {
        "question": "Is the water half full?",
        "image": "images/498.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "498",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 478,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the water half full?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "water_level = 0.5\n\nif water_level == 0.5:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "499": {
        "question": "Quadrilateral $ABDC$ is a rectangle. If $m\\angle1 = 38$, find $m \\angle 2$",
        "image": "images/499.jpg",
        "choices": [
            "33",
            "38",
            "52",
            "87"
        ],
        "unit": null,
        "precision": null,
        "answer": "52",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "499",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 559,
            "img_height": 323,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Quadrilateral $ABDC$ is a rectangle. If $m\\angle1 = 38$, find $m \\angle 2$\nChoices:\n(A) 33\n(B) 38\n(C) 52\n(D) 87\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_angle(angle1):\n    angle2 = 180 - angle1\n    return angle2\n\nangle1 = 38\nangle2 = find_angle(angle1)\nprint(angle2)",
        "execution": "142",
        "error": "None",
        "extraction": "52",
        "prediction": "52",
        "true_false": true
    },
    "500": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/500.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "500",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 987,
            "img_height": 1236,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "501": {
        "question": "Subtract all big red rubber cylinders. Subtract all blue objects. How many objects are left?",
        "image": "images/501.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "501",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big red rubber cylinders. Subtract all blue objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_red_rubber_cylinders = 5\nblue_objects = 3\n\nobjects_left = big_red_rubber_cylinders - blue_objects\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "502": {
        "question": "Are there fewer tandem bikes that are behind the brown metal bicycle than matte trucks on the left side of the green object?",
        "image": "images/502.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "502",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer tandem bikes that are behind the brown metal bicycle than matte trucks on the left side of the green object?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tandem_bikes_behind_brown_metal_bicycle = 3\nmatte_trucks_left_side_green_object = 5\n\nif tandem_bikes_behind_brown_metal_bicycle < matte_trucks_left_side_green_object:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "503": {
        "question": "What is the age gap between the leftmost and the center person?",
        "image": "images/503.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "503",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 338,
            "img_height": 225,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between the leftmost and the center person? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "leftmost_person_age = 25\ncenter_person_age = 35\n\nage_gap = center_person_age - leftmost_person_age\nprint(age_gap)",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "504": {
        "question": "As shown in the figure, D and E are the points on the edges AB and AC of \u25b3ABC, DE \u2225 BC, if AD:DB=1.0:3.0, AE = 2.0, then the length of AC is ()",
        "image": "images/504.jpg",
        "choices": [
            "10",
            "8",
            "6",
            "4"
        ],
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "504",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 117,
            "img_height": 86,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, D and E are the points on the edges AB and AC of \u25b3ABC, DE \u2225 BC, if AD:DB=1.0:3.0, AE = 2.0, then the length of AC is ()\nChoices:\n(A) 10\n(B) 8\n(C) 6\n(D) 4\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_AC_length(AD_DB_ratio, AE_length):\n    AD = (AD_DB_ratio / (AD_DB_ratio + 1)) * AE_length\n    AC = AE_length + AD\n    return AC\n\nAD_DB_ratio = 1.0 / 3.0\nAE_length = 2.0\n\nAC_length = find_AC_length(AD_DB_ratio, AE_length)\nprint(AC_length)",
        "execution": "2.5",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "505": {
        "question": "As shown in the figure, in the circle O with a radius of 5.0, the length of the chord AB is 8.0, then the distance from the center O to the chord AB is ()",
        "image": "images/505.jpg",
        "choices": [
            "3",
            "4",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "505",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 100,
            "img_height": 92,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the circle O with a radius of 5.0, the length of the chord AB is 8.0, then the distance from the center O to the chord AB is ()\nChoices:\n(A) 3\n(B) 4\n(C) 5\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nradius = 5.0\nchord_length = 8.0\n\ndistance_to_chord = math.sqrt(radius**2 - (chord_length/2)**2)\nprint(distance_to_chord)",
        "execution": "3.0",
        "error": "None",
        "extraction": "3.0",
        "prediction": "3",
        "true_false": true
    },
    "506": {
        "question": "Between which two years does the line  graph saw its maximum peak?",
        "image": "images/506.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "[2014, 2016]",
        "question_type": "free_form",
        "answer_type": "list",
        "pid": "506",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Between which two years does the line  graph saw its maximum peak?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "years = [2010, 2011, 2012, 2013, 2014, 2015, 2016]\nvalues = [10, 15, 20, 25, 30, 35, 30]\n\nmax_value = max(values)\nmax_index = values.index(max_value)\n\nstart_year = years[max_index]\nend_year = years[max_index + 1]\n\nprint(start_year, end_year)",
        "execution": "2015 2016",
        "error": "None",
        "extraction": "2014, 2015",
        "prediction": "2014, 2015",
        "true_false": false
    },
    "507": {
        "question": "What would happen if the hawk population increased?",
        "image": "images/507.jpg",
        "choices": [
            "mice would increase",
            "sparrows increased",
            "garter snakes would decrease",
            "grass decreased"
        ],
        "unit": null,
        "precision": null,
        "answer": "garter snakes would decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "507",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 375,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would happen if the hawk population increased?\nChoices:\n(A) mice would increase\n(B) sparrows increased\n(C) garter snakes would decrease\n(D) grass decreased\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def hawk_population_effect():\n    hawk_population = 100\n    mice_population = 200\n    sparrow_population = 150\n    garter_snake_population = 50\n    grass_coverage = 80\n\n    hawk_population += 10\n    mice_population += 20\n    sparrow_population += 15\n    garter_snake_population -= 5\n    grass_coverage -= 10\n\n    if hawk_population > 100:\n        return \"A) mice would increase\"\n    elif sparrow_population > 150:\n        return \"B) sparrows increased\"\n    elif garter_snake_population < 50:\n        return \"C) garter snakes would decrease\"\n    elif grass_coverage < 80:\n        return \"D) grass decreased\"\n    else:\n        return \"No effect\"\n\nprint(hawk_population_effect())",
        "execution": "A) mice would increase",
        "error": "None",
        "extraction": "A) mice would increase",
        "prediction": "mice would increase",
        "true_false": false
    },
    "508": {
        "question": "The owner of a bed and breakfast inn recalled how many guests the inn had hosted each day. What is the median of the numbers?'",
        "image": "images/508.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "508",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 241,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The owner of a bed and breakfast inn recalled how many guests the inn had hosted each day. What is the median of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def median(numbers):\n    sorted_numbers = sorted(numbers)\n    length = len(sorted_numbers)\n    if length % 2 == 0:\n        middle_index = length // 2\n        median_value = (sorted_numbers[middle_index - 1] + sorted_numbers[middle_index]) / 2\n    else:\n        middle_index = length // 2\n        median_value = sorted_numbers[middle_index]\n    return median_value\n\nnumbers = [5, 2, 8, 3, 9, 1, 7, 4, 6]\nprint(median(numbers))",
        "execution": "5",
        "error": "None",
        "extraction": "4.5",
        "prediction": null,
        "true_false": false
    },
    "509": {
        "question": "Is Cadet Blue the high median?",
        "image": "images/509.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "509",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 400,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Cadet Blue the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_high_median(color_list):\n    sorted_colors = sorted(color_list)\n    median_index = len(sorted_colors) // 2\n    median_color = sorted_colors[median_index]\n    \n    if median_color == \"Cadet Blue\":\n        return \"yes\"\n    else:\n        return \"no\"\n\ncolor_list = [\"Blue\", \"Cadet Blue\", \"Aqua\", \"Teal\", \"Navy Blue\"]\nprint(is_high_median(color_list))",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "510": {
        "question": "As shown in the figure, in Rt\u25b3ABC, \u2220C = 90.0, AC = 4.0, AB = 5.0, then the value of sinB is ()",
        "image": "images/510.jpg",
        "choices": [
            "\\frac{2}{3}",
            "\\frac{3}{5}",
            "\\frac{3}{4}",
            "\\frac{4}{5}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{4}{5}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "510",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 119,
            "img_height": 186,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in Rt\u25b3ABC, \u2220C = 90.0, AC = 4.0, AB = 5.0, then the value of sinB is ()\nChoices:\n(A) \\frac{2}{3}\n(B) \\frac{3}{5}\n(C) \\frac{3}{4}\n(D) \\frac{4}{5}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_sinB(AC, AB):\n    BC = math.sqrt(AC**2 + AB**2)\n    sinB = AC / BC\n    return sinB\n\nAC = 4.0\nAB = 5.0\n\nsinB = find_sinB(AC, AB)\nprint(sinB)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "0.8",
        "prediction": "\\frac{2}{3}",
        "true_false": false
    },
    "511": {
        "question": "How many people like the most preferred object in the whole chart?",
        "image": "images/511.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "511",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people like the most preferred object in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "data = {\n    'object1': 10,\n    'object2': 15,\n    'object3': 8,\n    'object4': 12,\n    'object5': 20\n}\n\nmax_likes = max(data.values())\ncount = 0\n\nfor likes in data.values():\n    if likes == max_likes:\n        count += 1\n\nprint(count)",
        "execution": "1",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "512": {
        "question": "What is the y coordinate of the center of mass of the isosceles right triangle of uniform areal density shown in Figure 9-C?",
        "image": "images/512.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.24",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "512",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 497,
            "img_height": 356,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the y coordinate of the center of mass of the isosceles right triangle of uniform areal density shown in Figure 9-C?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\n# Side length of the triangle\na = 4\n\n# Area of the triangle\narea = (a**2) / 2\n\n# x-coordinate of the center of mass\nx = a / 3\n\n# y-coordinate of the center of mass\ny = a / 3\n\nprint(y)",
        "execution": "1.3333333333333333",
        "error": "None",
        "extraction": "2.6666666666666665",
        "prediction": "2.67",
        "true_false": false
    },
    "513": {
        "question": "What is the highest value in states that border West Virginia ?",
        "image": "images/513.jpg",
        "choices": [
            "43.2%-63.6%",
            "45.2%-65.6%",
            "42.2%-62.6%",
            "41.2%-61.6%",
            "44.2%-64.6%"
        ],
        "unit": null,
        "precision": null,
        "answer": "42.2%-62.6%",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "513",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 500,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest value in states that border West Virginia ?\nChoices:\n(A) 43.2%-63.6%\n(B) 45.2%-65.6%\n(C) 42.2%-62.6%\n(D) 41.2%-61.6%\n(E) 44.2%-64.6%\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "highest_value = 0\nbordering_states = {\n    'Ohio': 43.2,\n    'Pennsylvania': 45.2,\n    'Maryland': 42.2,\n    'Virginia': 41.2,\n    'Kentucky': 44.2\n}\n\nfor state, value in bordering_states.items():\n    if value > highest_value:\n        highest_value = value\n\nprint(highest_value)",
        "execution": "45.2",
        "error": "None",
        "extraction": "45.2",
        "prediction": "45.2%-65.6%",
        "true_false": false
    },
    "514": {
        "question": "If you wanted the leaf with the least main veins, which would you choose?",
        "image": "images/514.jpg",
        "choices": [
            "3 main veins",
            "pinnate",
            "reticulate",
            "palmate"
        ],
        "unit": null,
        "precision": null,
        "answer": "3 main veins",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "514",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 559,
            "img_height": 236,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If you wanted the leaf with the least main veins, which would you choose?\nChoices:\n(A) 3 main veins\n(B) pinnate\n(C) reticulate\n(D) palmate\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def least_main_veins(veins):\n    if veins == '3 main veins':\n        return 'A'\n    elif veins == 'pinnate':\n        return 'B'\n    elif veins == 'reticulate':\n        return 'C'\n    elif veins == 'palmate':\n        return 'D'\n    else:\n        return \"\"\n\nveins = '3 main veins'\nprint(least_main_veins(veins))",
        "execution": "A",
        "error": "None",
        "extraction": "A",
        "prediction": "3 main veins",
        "true_false": true
    },
    "515": {
        "question": "You would potentially see a decrease in which organism if gulls disappeared?",
        "image": "images/515.jpg",
        "choices": [
            "herring",
            "kril",
            "anchovy",
            "phytoplankton"
        ],
        "unit": null,
        "precision": null,
        "answer": "kril",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "515",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 398,
            "img_height": 549,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: You would potentially see a decrease in which organism if gulls disappeared?\nChoices:\n(A) herring\n(B) kril\n(C) anchovy\n(D) phytoplankton\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def decrease_organism(gulls_disappeared):\n    if gulls_disappeared:\n        return \"herring\"\n    else:\n        return \"\"\n\ngulls_disappeared = True\n\nprint(decrease_organism(gulls_disappeared))",
        "execution": "herring",
        "error": "None",
        "extraction": "herring",
        "prediction": "herring",
        "true_false": false
    },
    "516": {
        "question": "Are most the stepping stones square?",
        "image": "images/516.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "516",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 339,
            "img_height": 500,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are most the stepping stones square?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def are_stepping_stones_square(stepping_stones):\n    count_square = 0\n    count_non_square = 0\n\n    for stone in stepping_stones:\n        if stone.shape == \"square\":\n            count_square += 1\n        else:\n            count_non_square += 1\n\n    if count_square > count_non_square:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nstepping_stones = [\n    {\"shape\": \"square\"},\n    {\"shape\": \"square\"},\n    {\"shape\": \"square\"},\n    {\"shape\": \"circle\"},\n    {\"shape\": \"circle\"},\n    {\"shape\": \"triangle\"}\n]\n\nprint(are_stepping_stones_square(stepping_stones))",
        "execution": "",
        "error": "'dict' object has no attribute 'shape'",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "517": {
        "question": "At Bloomington Consulting, the head of human resources examined how the number of employees with health care benefits varied in response to policy changes. According to the table, what was the rate of change between 2014 and 2015? (Unit: employees per year)",
        "image": "images/517.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "517",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 275,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: At Bloomington Consulting, the head of human resources examined how the number of employees with health care benefits varied in response to policy changes. According to the table, what was the rate of change between 2014 and 2015? (Unit: employees per year)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "employees_2014 = 100\nemployees_2015 = 120\n\nrate_of_change = (employees_2015 - employees_2014) / (2015 - 2014)\nprint(rate_of_change)",
        "execution": "20.0",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "518": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/518.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "518",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2838,
            "img_height": 2211,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "519": {
        "question": "How many Triangles do you see in the picture?",
        "image": "images/519.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "519",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 948,
            "img_height": 852,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many Triangles do you see in the picture?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import cv2\nimport numpy as np\n\n# Load the image\nimage = cv2.imread('image.jpg')\n\n# Convert the image to grayscale\ngray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\n# Apply edge detection\nedges = cv2.Canny(gray, 50, 150)\n\n# Find contours in the image\ncontours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n\n# Initialize a counter for triangles\ntriangle_count = 0\n\n# Iterate through the contours\nfor contour in contours:\n    # Approximate the contour to a polygon\n    approx = cv2.approxPolyDP(contour, 0.01 * cv2.arcLength(contour, True), True)\n    \n    # If the polygon has 3 vertices, it is a triangle\n    if len(approx) == 3:\n        triangle_count += 1\n\nprint(triangle_count)",
        "execution": "",
        "error": "OpenCV(4.5.4) /tmp/pip-req-build-khv2fx3p/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'\n",
        "extraction": "The extracted answer is 0.",
        "prediction": null,
        "true_false": false
    },
    "520": {
        "question": "Does Dark Magenta have the maximum area under the curve?",
        "image": "images/520.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "520",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 741,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Dark Magenta have the maximum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\ncolors = ['darkmagenta', 'blue', 'green', 'red', 'yellow']\nareas = []\n\nfor color in colors:\n    plt.fill_between(x, y, color=color, alpha=0.5)\n    areas.append(np.trapz(y, x))\n\nmax_area = max(areas)\nmax_color = colors[areas.index(max_area)]\n\nif max_color == 'darkmagenta':\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "521": {
        "question": "As shown in the figure, AB is the diameter of \u2299O, point C is a point on \u2299O, \u2220C = 20.0, then the degree of \u2220BOC is ()",
        "image": "images/521.jpg",
        "choices": [
            "20\u00b0",
            "30\u00b0",
            "40\u00b0",
            "60\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "521",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 120,
            "img_height": 100,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of \u2299O, point C is a point on \u2299O, \u2220C = 20.0, then the degree of \u2220BOC is ()\nChoices:\n(A) 20\u00b0\n(B) 30\u00b0\n(C) 40\u00b0\n(D) 60\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BOC(angle_C):\n    angle_BOC = 180 - angle_C\n    return angle_BOC\n\nangle_C = 20.0\nangle_BOC = angle_BOC(angle_C)\nprint(angle_BOC)",
        "execution": "160.0",
        "error": "None",
        "extraction": "160",
        "prediction": "60\u00b0",
        "true_false": false
    },
    "522": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/522.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "522",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 86,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "523": {
        "question": "As shown in the figure, a teaching interest group wants to measure the height of a tree CD. They firstly measured the elevation angle of the tree top C at point A as 30.0, and then proceeded 10.0 along the direction of AD to point B, and the elevation angle of tree top C measured at B is 60.0  (the three points A, B, and D are on the same straight line), then the height of the tree CD is ()",
        "image": "images/523.jpg",
        "choices": [
            "10m",
            "5m",
            "5\u221a{3}m",
            "10\u221a{3}m"
        ],
        "unit": null,
        "precision": null,
        "answer": "5\u221a{3}m",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "523",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 285,
            "img_height": 179,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, a teaching interest group wants to measure the height of a tree CD. They firstly measured the elevation angle of the tree top C at point A as 30.0, and then proceeded 10.0 along the direction of AD to point B, and the elevation angle of tree top C measured at B is 60.0  (the three points A, B, and D are on the same straight line), then the height of the tree CD is ()\nChoices:\n(A) 10m\n(B) 5m\n(C) 5\u221a{3}m\n(D) 10\u221a{3}m\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nangle_A = 30.0\nangle_B = 60.0\ndistance_AB = 10.0\n\nangle_C = angle_B - angle_A\ndistance_CD = distance_AB * math.tan(math.radians(angle_C))\n\nheight_CD = distance_CD * math.cos(math.radians(angle_A))\nprint(height_CD)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": "5m",
        "true_false": false
    },
    "524": {
        "question": "The Kingwood Ski Resort asked its guests how many times they went sledding last winter. How many guests went sledding more than 2 times?'",
        "image": "images/524.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "524",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 351,
            "img_height": 163,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The Kingwood Ski Resort asked its guests how many times they went sledding last winter. How many guests went sledding more than 2 times?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "guests_sledding = [1, 3, 2, 4, 5, 2, 1, 3, 2, 1]\ncount = 0\n\nfor sledding in guests_sledding:\n    if sledding > 2:\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "525": {
        "question": "What is the lowest value shown on the X axis of first plot?",
        "image": "images/525.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "525",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1711,
            "img_height": 2209,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the lowest value shown on the X axis of first plot?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 30, 40, 50]\n\nplt.plot(x, y)\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.title('First Plot')\n\nplt.show()\n\n# The lowest value shown on the X-axis is 1.",
        "execution": "",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "526": {
        "question": "What has been done to this letter?",
        "image": "images/526.jpg",
        "choices": [
            "slide",
            "flip",
            "turn"
        ],
        "unit": null,
        "precision": null,
        "answer": "slide",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "526",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 253,
            "img_height": 104,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What has been done to this letter?\nChoices:\n(A) slide\n(B) flip\n(C) turn\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def letter_changes(letter, changes):\n    for change in changes:\n        if change[0] == letter:\n            return change[1]\n    return \"\"\n\nchanges = [('A', 'slide'), ('B', 'flip'), ('C', 'turn')]\nletter = 'B'\n\nprint(letter_changes(letter, changes))",
        "execution": "flip",
        "error": "None",
        "extraction": "flip",
        "prediction": "flip",
        "true_false": false
    },
    "527": {
        "question": "Is the number of big shiny cars in front of the red airliner greater than the number of big purple road bikes?",
        "image": "images/527.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "527",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of big shiny cars in front of the red airliner greater than the number of big purple road bikes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_shiny_cars = 5\nbig_purple_road_bikes = 3\n\nif big_shiny_cars > big_purple_road_bikes:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "528": {
        "question": "\u5982\u56fe\uff0cAB\u2225CD\uff0cBD\u22a5CF\uff0c\u5782\u8db3\u4e3aB\uff0c\u2220ABF\uff1d35\u00b0\uff0c\u5219\u2220BDC\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/528.jpg",
        "choices": [
            "25\u00b0",
            "35\u00b0",
            "45\u00b0",
            "55\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "55\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "528",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 194,
            "img_height": 135,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAB\u2225CD\uff0cBD\u22a5CF\uff0c\u5782\u8db3\u4e3aB\uff0c\u2220ABF\uff1d35\u00b0\uff0c\u5219\u2220BDC\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 25\u00b0\n(B) 35\u00b0\n(C) 45\u00b0\n(D) 55\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    ABF_angle = 35\n    BCF_angle = 90\n    BDF_angle = 180 - ABF_angle - BCF_angle\n    BDC_angle = 180 - BDF_angle\n    return BDC_angle\n\nprint(find_angle())",
        "execution": "125",
        "error": "None",
        "extraction": "45",
        "prediction": "45\u00b0",
        "true_false": false
    },
    "529": {
        "question": "what number does the smaller arrow point to?",
        "image": "images/529.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1020",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "529",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 768,
            "source": "TextVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: what number does the smaller arrow point to?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "smaller_arrow_angle = 45\ntotal_angle = 360\nnumber_of_arrows = 8\n\nangle_per_arrow = total_angle / number_of_arrows\nsmaller_arrow_number = smaller_arrow_angle // angle_per_arrow\n\nprint(smaller_arrow_number)",
        "execution": "1.0",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "530": {
        "question": "The advertising agency counted the number of billboards in each city in the state. How many cities have fewer than 70 billboards? (Unit: cities)",
        "image": "images/530.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "530",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 140,
            "img_height": 180,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The advertising agency counted the number of billboards in each city in the state. How many cities have fewer than 70 billboards? (Unit: cities)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "billboards_per_city = {\n    'city1': 50,\n    'city2': 80,\n    'city3': 65,\n    'city4': 70,\n    'city5': 55,\n    'city6': 90\n}\n\ncount = 0\nfor city, billboards in billboards_per_city.items():\n    if billboards < 70:\n        count += 1\n\nprint(count)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "531": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) to five.",
        "image": "images/531.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "531",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) to five.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "time_word = \"quarter\"\nprint(time_word)",
        "execution": "quarter",
        "error": "None",
        "extraction": "quarter",
        "prediction": "quarter",
        "true_false": true
    },
    "532": {
        "question": "Are there fewer gray trucks that are in front of the large aeroplane than big yellow metal objects in front of the purple object?",
        "image": "images/532.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "532",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer gray trucks that are in front of the large aeroplane than big yellow metal objects in front of the purple object?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "gray_trucks = 5\nlarge_aeroplane = 3\nbig_yellow_metal_objects = 7\npurple_object = 4\n\nif gray_trucks < large_aeroplane:\n    ans = \"Yes\"\nelse:\n    if big_yellow_metal_objects > purple_object:\n        ans = \"No\"\n    else:\n        ans = \"Cannot determine\"\n\nprint(ans)",
        "execution": "No",
        "error": "None",
        "extraction": "Cannot determine",
        "prediction": "Yes",
        "true_false": false
    },
    "533": {
        "question": "Subtract all small cyan cubes. Subtract all large yellow rubber cubes. How many objects are left?",
        "image": "images/533.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "533",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small cyan cubes. Subtract all large yellow rubber cubes. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_cyan_cubes = 10\nlarge_yellow_rubber_cubes = 5\n\nobjects_left = small_cyan_cubes - large_yellow_rubber_cubes\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "534": {
        "question": "In how many years, is the percentage of stunted female children greater than the average percentage of stunted female children taken over all years ?",
        "image": "images/534.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "534",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 883,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the percentage of stunted female children greater than the average percentage of stunted female children taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_than_average(data):\n    total_years = len(data)\n    average_percentage = sum(data) / total_years\n\n    for i in range(total_years):\n        if data[i] > average_percentage:\n            return total_years - i\n\n    return 0\n\ndata = [10, 15, 12, 8, 20, 18, 14]\nprint(years_greater_than_average(data))",
        "execution": "6",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "535": {
        "question": "What is the value of the smallest individual bar in the whole chart?",
        "image": "images/535.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "535",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'bar1': 10,\n    'bar2': 5,\n    'bar3': 8,\n    'bar4': 3,\n    'bar5': 6\n}\n\nsmallest_bar = min(chart.values())\nprint(smallest_bar)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "536": {
        "question": "As shown in the figure, points A, B, and C are on \u2299O, if \u2220C = 35.0, then \u2220AOB = ()",
        "image": "images/536.jpg",
        "choices": [
            "17.5\u00b0",
            "35\u00b0",
            "60\u00b0",
            "70\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "70\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "536",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 115,
            "img_height": 105,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, points A, B, and C are on \u2299O, if \u2220C = 35.0, then \u2220AOB = ()\nChoices:\n(A) 17.5\u00b0\n(B) 35\u00b0\n(C) 60\u00b0\n(D) 70\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_AOB(angle_C):\n    angle_AOB = 2 * angle_C\n    return angle_AOB\n\nangle_C = 35.0\nangle_AOB = angle_AOB(angle_C)\nprint(angle_AOB)",
        "execution": "70.0",
        "error": "None",
        "extraction": "70\u00b0",
        "prediction": "70\u00b0",
        "true_false": true
    },
    "537": {
        "question": "Is the number of red rubber bicycles less than the number of cyan metal school buss?",
        "image": "images/537.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "537",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of red rubber bicycles less than the number of cyan metal school buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "red_bicycles = 10\ncyan_school_buses = 15\n\nif red_bicycles < cyan_school_buses:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "538": {
        "question": "As shown in the figure, in the two concentric circles, the chord AB of the great circle is tangent to the small circle at point C. If AB = 6.0, the area of \u200b\u200bthe ring is ()",
        "image": "images/538.jpg",
        "choices": [
            "9\u03c0",
            "6\u03c0",
            "3\u03c0",
            "\u03c0"
        ],
        "unit": null,
        "precision": null,
        "answer": "9\u03c0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "538",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 115,
            "img_height": 111,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the two concentric circles, the chord AB of the great circle is tangent to the small circle at point C. If AB = 6.0, the area of \u200b\u200bthe ring is ()\nChoices:\n(A) 9\u03c0\n(B) 6\u03c0\n(C) 3\u03c0\n(D) \u03c0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef area_of_ring(radius1, radius2):\n    area1 = math.pi * radius1**2\n    area2 = math.pi * radius2**2\n    area_ring = area1 - area2\n    return area_ring\n\nradius1 = 3.0\nradius2 = 1.5\n\nprint(area_of_ring(radius1, radius2))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "3\u03c0",
        "prediction": "3\u03c0",
        "true_false": false
    },
    "539": {
        "question": "\u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u70b9D\u3001E\u5206\u522b\u662f\u8fb9AB\u3001BC\u7684\u4e2d\u70b9\uff0c\u82e5\u25b3BDE\u7684\u5468\u957f\u662f6\uff0c\u5219\u25b3ABC\u7684\u5468\u957f\u662f\uff08\uff09",
        "image": "images/539.jpg",
        "choices": [
            "8",
            "10",
            "12",
            "14"
        ],
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "539",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 149,
            "img_height": 71,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0c\u70b9D\u3001E\u5206\u522b\u662f\u8fb9AB\u3001BC\u7684\u4e2d\u70b9\uff0c\u82e5\u25b3BDE\u7684\u5468\u957f\u662f6\uff0c\u5219\u25b3ABC\u7684\u5468\u957f\u662f\uff08\uff09\nChoices:\n(A) 8\n(B) 10\n(C) 12\n(D) 14\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 2 * BD\nBC = 2 * BE\nAC = AB + BC\n\nperimeter = AB + BC + AC\nperimeter",
        "execution": "",
        "error": "name 'BD' is not defined",
        "extraction": "12",
        "prediction": "12",
        "true_false": true
    },
    "540": {
        "question": "What fraction of the shape is blue?",
        "image": "images/540.jpg",
        "choices": [
            "3/11",
            "8/11",
            "6/11",
            "3/5"
        ],
        "unit": null,
        "precision": null,
        "answer": "3/11",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "540",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 102,
            "img_height": 103,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What fraction of the shape is blue?\nChoices:\n(A) 3/11\n(B) 8/11\n(C) 6/11\n(D) 3/5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_parts = 11\nblue_parts = 3\n\nfraction_blue = blue_parts / total_parts\nprint(fraction_blue)",
        "execution": "0.2727272727272727",
        "error": "None",
        "extraction": "0.2727272727272727",
        "prediction": "3/11",
        "true_false": true
    },
    "541": {
        "question": "Which of the cubes is not identical to the unfolded net?",
        "image": "images/541.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "D",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "541",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 280,
            "img_height": 560,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which of the cubes is not identical to the unfolded net?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_identical(cube):\n    unfolded_net = [\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' ']\n    ]\n\n    for face in cube:\n        for i in range(3):\n            for j in range(3):\n                if face[i][j] != unfolded_net[i][j]:\n                    return False\n\n    return True\n\ncubes = [\n    [\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' ']\n    ],\n    [\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' ']\n    ],\n    [\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' ']\n    ],\n    [\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' ']\n    ],\n    [\n        [' ', ' ', ' '],\n        [' ', ' ', ' '],\n        [' ', ' ', ' ']\n    ]\n]\n\nfor i in range(len(cubes)):\n    if not is_identical(cubes[i]):\n        print(chr(65 + i))",
        "execution": "",
        "error": "string index out of range",
        "extraction": "A",
        "prediction": "A",
        "true_false": false
    },
    "542": {
        "question": "How many models in the figure achieve an Acc score greater than 60?",
        "image": "images/542.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "542",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1690,
            "img_height": 1358,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many models in the figure achieve an Acc score greater than 60?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "models = [75, 80, 55, 90, 70, 65, 85]\ncount = 0\n\nfor score in models:\n    if score > 60:\n        count += 1\n\nprint(count)",
        "execution": "6",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "543": {
        "question": "Are there fewer small purple matte cars than brown matte things?",
        "image": "images/543.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "543",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer small purple matte cars than brown matte things?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_purple_matte_cars = 10\nbrown_matte_things = 15\n\nif small_purple_matte_cars < brown_matte_things:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "544": {
        "question": "What is the total percentage of people  who say that they do either less or more often than the usual amount of exercise during the coronavirus pandemic in the United States as of April 2020?",
        "image": "images/544.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "44",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "544",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the total percentage of people  who say that they do either less or more often than the usual amount of exercise during the coronavirus pandemic in the United States as of April 2020?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "less_often = 30\nmore_often = 20\n\ntotal_percentage = less_often + more_often\nprint(total_percentage)",
        "execution": "50",
        "error": "None",
        "extraction": "50",
        "prediction": "50",
        "true_false": false
    },
    "545": {
        "question": "Is Violet Red less than Crimson?",
        "image": "images/545.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "545",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 764,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Violet Red less than Crimson?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "violet_red = (199, 21, 133)\ncrimson = (220, 20, 60)\n\nif violet_red < crimson:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "546": {
        "question": "What is the overall ratio of male to female?",
        "image": "images/546.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "546",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the overall ratio of male to female?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def overall_ratio(male_count, female_count):\n    ratio = male_count / female_count\n    return ratio\n\nmale_count = 50\nfemale_count = 100\n\nprint(overall_ratio(male_count, female_count))",
        "execution": "0.5",
        "error": "None",
        "extraction": "2.0",
        "prediction": null,
        "true_false": false
    },
    "547": {
        "question": "Based on the diagram below, which organisms will be most directly affected by a decrease in the amount of grass?",
        "image": "images/547.jpg",
        "choices": [
            "Insects",
            "Hawk and snake",
            "Snake and raccoon",
            "Mouse and cricket"
        ],
        "unit": null,
        "precision": null,
        "answer": "Insects",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "547",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 630,
            "img_height": 377,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Based on the diagram below, which organisms will be most directly affected by a decrease in the amount of grass?\nChoices:\n(A) Insects\n(B) Hawk and snake\n(C) Snake and raccoon\n(D) Mouse and cricket\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_directly_affected(diagram):\n    organisms = {\n        'grass': ['insects', 'mouse', 'cricket'],\n        'insects': [],\n        'mouse': ['hawk', 'snake'],\n        'cricket': [],\n        'hawk': [],\n        'snake': ['hawk', 'raccoon'],\n        'raccoon': []\n    }\n\n    affected = []\n\n    for organism in organisms:\n        if diagram[organism] < diagram['grass']:\n            affected.append(organism)\n\n    return affected\n\ndiagram = {\n    'grass': 10,\n    'insects': 5,\n    'mouse': 8,\n    'cricket': 3,\n    'hawk': 2,\n    'snake': 7,\n    'raccoon': 4\n}\n\nprint(most_directly_affected(diagram))",
        "execution": "['insects', 'mouse', 'cricket', 'hawk', 'snake', 'raccoon']",
        "error": "None",
        "extraction": "['insects', 'mouse', 'cricket']",
        "prediction": "Mouse and cricket",
        "true_false": false
    },
    "548": {
        "question": "Are there fewer cyan jets than big buss?",
        "image": "images/548.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "548",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer cyan jets than big buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cyan_jets = 5\nbig_buss = 8\n\nif cyan_jets < big_buss:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "549": {
        "question": "As shown in the figure, PA and PB are tangent to \u2299O to A and B respectively. Point C and point D are the moving points on line segments PA and PB, and CD always remains tangent to circle O. If PA = 8.0, then perimeter of \u25b3PCD is ()",
        "image": "images/549.jpg",
        "choices": [
            "8",
            "12",
            "16",
            "\u4e0d\u80fd\u786e\u5b9a"
        ],
        "unit": null,
        "precision": null,
        "answer": "16",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "549",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 192,
            "img_height": 111,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, PA and PB are tangent to \u2299O to A and B respectively. Point C and point D are the moving points on line segments PA and PB, and CD always remains tangent to circle O. If PA = 8.0, then perimeter of \u25b3PCD is ()\nChoices:\n(A) 8\n(B) 12\n(C) 16\n(D) \u4e0d\u80fd\u786e\u5b9a\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef perimeter_PCD(PA):\n    PB = PA\n    PC = math.sqrt(PA**2 - (PA/2)**2)\n    PD = math.sqrt(PB**2 - (PB/2)**2)\n    CD = PC + PD\n    perimeter = PA + PC + CD\n    return perimeter\n\nPA = 8.0\nperimeter = perimeter_PCD(PA)\nprint(perimeter)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "16",
        "prediction": "16",
        "true_false": true
    },
    "550": {
        "question": "What is the accuracy of the algorithm with highest accuracy?",
        "image": "images/550.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "550",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the accuracy of the algorithm with highest accuracy?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def highest_accuracy(accuracy_dict):\n    max_accuracy = max(accuracy_dict.values())\n    for algorithm, accuracy in accuracy_dict.items():\n        if accuracy == max_accuracy:\n            return algorithm\n\naccuracy_dict = {\n    'algorithm1': 0.85,\n    'algorithm2': 0.92,\n    'algorithm3': 0.78,\n    'algorithm4': 0.92\n}\n\nprint(highest_accuracy(accuracy_dict))",
        "execution": "algorithm2",
        "error": "None",
        "extraction": "algorithm2",
        "prediction": null,
        "true_false": false
    },
    "551": {
        "question": "What is the difference between the highest tattoos in male and the least in female?",
        "image": "images/551.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "14",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "551",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between the highest tattoos in male and the least in female?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "highest_tattoos_male = 10\nleast_tattoos_female = 3\n\ndifference = highest_tattoos_male - least_tattoos_female\nprint(difference)",
        "execution": "7",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "552": {
        "question": "How many queries have a p-value lower than 0.50?",
        "image": "images/552.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "552",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1726,
            "img_height": 330,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many queries have a p-value lower than 0.50?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_queries(p_values):\n    count = 0\n    for p_value in p_values:\n        if p_value < 0.50:\n            count += 1\n    return count\n\np_values = [0.25, 0.60, 0.40, 0.75, 0.30]\nprint(count_queries(p_values))",
        "execution": "3",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "553": {
        "question": "Is Dark Violet less than Chocolate?",
        "image": "images/553.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "553",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 532,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Violet less than Chocolate?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dark_violet = \"Dark Violet\"\nchocolate = \"Chocolate\"\n\nif dark_violet < chocolate:\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "554": {
        "question": "Is Burlywood the minimum?",
        "image": "images/554.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "554",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 488,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Burlywood the minimum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "color = \"Burlywood\"\nif color == \"Burlywood\":\n    answer = \"yes\"\nelse:\n    answer = \"no\"\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "555": {
        "question": "Is this nest larger than a fist?",
        "image": "images/555.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "555",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 640,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this nest larger than a fist?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_nest_larger_than_fist(nest_size, fist_size):\n    if nest_size > fist_size:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnest_size = 10\nfist_size = 8\n\nprint(is_nest_larger_than_fist(nest_size, fist_size))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "556": {
        "question": "Are there fewer large red metallic things that are on the left side of the cyan shiny scooter than things that are in front of the small jet?",
        "image": "images/556.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "556",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer large red metallic things that are on the left side of the cyan shiny scooter than things that are in front of the small jet?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_large_red_metallic_things(caption):\n    count = 0\n    words = caption.split()\n    for i in range(len(words)-4):\n        if words[i] == \"large\" and words[i+1] == \"red\" and words[i+2] == \"metallic\" and words[i+3] == \"things\":\n            count += 1\n    return count\n\ndef count_things_in_front_of_jet(caption):\n    count = 0\n    words = caption.split()\n    for i in range(len(words)-3):\n        if words[i] == \"in\" and words[i+1] == \"front\" and words[i+2] == \"of\" and words[i+3] == \"the\" and words[i+4] == \"small\" and words[i+5] == \"jet\":\n            count += 1\n    return count\n\ndef compare_counts(caption):\n    count_large_red_metallic = count_large_red_metallic_things(caption)\n    count_things_in_front_of_jet = count_things_in_front_of_jet(caption)\n    if count_large_red_metallic < count_things_in_front_of_jet:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ncaption = \"The image shows a large red metallic car on the left side of the cyan shiny scooter. In front of the small jet, there are several objects.\"\nprint(compare_counts(caption))",
        "execution": "",
        "error": "name 'count_large_red_metallic_things' is not defined",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "557": {
        "question": "\u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220BAC\uff1d90\u00b0\uff0c\u4ee5Rt\u25b3ABC\u7684\u4e09\u8fb9\u4e3a\u8fb9\u5206\u522b\u5411\u5916\u4f5c\u7b49\u8fb9\u4e09\u89d2\u5f62\u25b3A'BC\uff0c\u25b3AB'C\uff0c\u25b3ABC'\uff0c\u82e5\u25b3A'BC\uff0c\u25b3AB'C\u7684\u9762\u79ef\u5206\u522b\u662f10\u548c4\uff0c\u5219\u25b3ABC'\u7684\u9762\u79ef\u662f\uff08\uff09",
        "image": "images/557.jpg",
        "choices": [
            "4",
            "6",
            "8",
            "9"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "557",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 155,
            "img_height": 130,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220BAC\uff1d90\u00b0\uff0c\u4ee5Rt\u25b3ABC\u7684\u4e09\u8fb9\u4e3a\u8fb9\u5206\u522b\u5411\u5916\u4f5c\u7b49\u8fb9\u4e09\u89d2\u5f62\u25b3A'BC\uff0c\u25b3AB'C\uff0c\u25b3ABC'\uff0c\u82e5\u25b3A'BC\uff0c\u25b3AB'C\u7684\u9762\u79ef\u5206\u522b\u662f10\u548c4\uff0c\u5219\u25b3ABC'\u7684\u9762\u79ef\u662f\uff08\uff09\nChoices:\n(A) 4\n(B) 6\n(C) 8\n(D) 9\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef triangle_area(side):\n    return (math.sqrt(3) / 4) * side**2\n\ndef find_triangle_area(area1, area2):\n    side1 = math.sqrt((4 * area1) / (math.sqrt(3)))\n    side2 = math.sqrt((4 * area2) / (math.sqrt(3)))\n    side3 = side1 + side2\n    return triangle_area(side3)\n\narea1 = 10\narea2 = 4\n\nans = find_triangle_area(area1, area2)\nprint(ans)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "558": {
        "question": "What is the value of the largest bar?",
        "image": "images/558.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "558",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the largest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_bar(bars):\n    max_value = max(bars)\n    return max_value\n\nbars = [5, 8, 3, 10, 6]\nprint(largest_bar(bars))",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "559": {
        "question": "what is the highest number shown on the black outer part of the watch?",
        "image": "images/559.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "55",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "559",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 768,
            "source": "TextVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: what is the highest number shown on the black outer part of the watch?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "highest_number = max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\nprint(highest_number)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "560": {
        "question": "Is Light Salmon the roughest?",
        "image": "images/560.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "560",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 514,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Light Salmon the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "roughness_levels = {\n    'Light Salmon': 3,\n    'Medium Salmon': 5,\n    'Dark Salmon': 7,\n    'Salmon': 4\n}\n\ndef is_roughest(color):\n    max_roughness = max(roughness_levels.values())\n    if roughness_levels[color] == max_roughness:\n        return 'yes'\n    else:\n        return 'no'\n\nprint(is_roughest('Light Salmon'))",
        "execution": "",
        "error": "name 'roughness_levels' is not defined",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "561": {
        "question": "Is the number of gray rubber double buss right of the small red aeroplane the same as the number of small objects that are left of the tiny gray matte bicycle?",
        "image": "images/561.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "561",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of gray rubber double buss right of the small red aeroplane the same as the number of small objects that are left of the tiny gray matte bicycle?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(caption):\n    words = caption.split()\n    index_buss = words.index(\"buss\")\n    index_aeroplane = words.index(\"aeroplane\")\n    index_bicycle = words.index(\"bicycle\")\n\n    count_buss = int(words[index_buss - 2])\n    count_aeroplane = int(words[index_aeroplane - 2])\n    count_bicycle = int(words[index_bicycle - 3])\n\n    if count_buss * 2 == count_bicycle:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ncaption = \"The image shows a small red aeroplane on the left side of the frame. To the right of the aeroplane, there are 3 gray rubber double buss. On the other side of the frame, there is a tiny gray matte bicycle with 6 small objects to its left.\"\n\nprint(compare_numbers(caption))",
        "execution": "",
        "error": "'buss' is not in list",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "562": {
        "question": "Subtract all small green cubes. Subtract all large cylinders. How many objects are left?",
        "image": "images/562.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "562",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small green cubes. Subtract all large cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_green_cubes = 10\nlarge_cylinders = 5\n\nobjects_left = small_green_cubes - large_cylinders\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "563": {
        "question": "Which number on the monitor is higher?",
        "image": "images/563.jpg",
        "choices": [
            "top",
            "bottom",
            "left",
            "right"
        ],
        "unit": null,
        "precision": null,
        "answer": "bottom",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "563",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "A-OKVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number on the monitor is higher?\nChoices:\n(A) top\n(B) bottom\n(C) left\n(D) right\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def higher_number(numbers):\n    max_number = max(numbers)\n    if max_number == numbers[0]:\n        return \"top\"\n    elif max_number == numbers[1]:\n        return \"bottom\"\n    elif max_number == numbers[2]:\n        return \"left\"\n    elif max_number == numbers[3]:\n        return \"right\"\n    else:\n        return \"\"\n\nnumbers = [5, 8, 3, 7]\nprint(higher_number(numbers))",
        "execution": "bottom",
        "error": "None",
        "extraction": "right",
        "prediction": "right",
        "true_false": false
    },
    "564": {
        "question": "What is the difference between the highest and the lowest time required to import ?",
        "image": "images/564.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "564",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1056,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between the highest and the lowest time required to import ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ntimes = [5, 8, 3, 10, 6]\ndifference = np.max(times) - np.min(times)\nprint(difference)",
        "execution": "7",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "565": {
        "question": "Which model can achieve the best ImageNet 10-shot Accuracy score?",
        "image": "images/565.jpg",
        "choices": [
            "Soft MoE",
            "Experts Choice",
            "Tokens Choice",
            "Dense"
        ],
        "unit": null,
        "precision": null,
        "answer": "Soft MoE",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "565",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1966,
            "img_height": 978,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which model can achieve the best ImageNet 10-shot Accuracy score?\nChoices:\n(A) Soft MoE\n(B) Experts Choice\n(C) Tokens Choice\n(D) Dense\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "imagenet_scores = {\n    'Soft MoE': 0.85,\n    'Experts Choice': 0.78,\n    'Tokens Choice': 0.82,\n    'Dense': 0.88\n}\n\nbest_model = max(imagenet_scores, key=imagenet_scores.get)\nprint(best_model)",
        "execution": "Dense",
        "error": "None",
        "extraction": "Dense",
        "prediction": "Dense",
        "true_false": false
    },
    "566": {
        "question": "\u5982\u56fe\uff0c\u5df2\u77e5\u25b3ABC\u224c\u25b3DEF\uff0cCD\u5e73\u5206\u2220BCA\uff0c\u82e5\u2220A\uff1d22\u00b0\uff0c\u2220CGF\uff1d88\u00b0\uff0c\u5219\u2220E\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/566.jpg",
        "choices": [
            "26\u00b0",
            "28\u00b0",
            "30\u00b0",
            "34\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "26\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "566",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 89,
            "img_height": 89,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5df2\u77e5\u25b3ABC\u224c\u25b3DEF\uff0cCD\u5e73\u5206\u2220BCA\uff0c\u82e5\u2220A\uff1d22\u00b0\uff0c\u2220CGF\uff1d88\u00b0\uff0c\u5219\u2220E\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 26\u00b0\n(B) 28\u00b0\n(C) 30\u00b0\n(D) 34\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the variables\nA, B, C, D, E, F, G = sp.symbols('A B C D E F G')\n\n# Define the given angles\nangle_A = 22\nangle_CGF = 88\n\n# Define the congruence of triangles\ntriangle_ABC = sp.Eq(sp.Symbol('angle_A') + sp.Symbol('angle_B') + sp.Symbol('angle_C'), 180)\ntriangle_DEF = sp.Eq(sp.Symbol('angle_D') + sp.Symbol('angle_E') + sp.Symbol('angle_F'), 180)\n\n# Define the angle bisector condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGA = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_FGA'), 180)\n\n# Define the angle sum condition\nangle_CGB = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_FGB'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle sum condition\nangle_CGD = sp.Eq(sp.Symbol('angle_CGF') + sp.Symbol('angle_DGF'), 180)\n\n# Define the angle",
        "execution": "",
        "error": "None",
        "extraction": "28\u00b0",
        "prediction": "28\u00b0",
        "true_false": false
    },
    "567": {
        "question": "Move the ruler to measure the length of the slug to the nearest inch. The slug is about (_) inches long.",
        "image": "images/567.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "567",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 252,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the slug to the nearest inch. The slug is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "slug_length = 6.5\nslug_length_rounded = round(slug_length)\nprint(f\"The slug is about {slug_length_rounded} inches long.\")",
        "execution": "The slug is about 6 inches long.",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "568": {
        "question": "For an economics project, Colleen determined the cost of ferry rides for bicycles and cars. How much higher is the fare for a car on the Mukilteu-Clinton ferry than on the Southport-Fort Fisher ferry? (Unit: $)",
        "image": "images/568.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "568",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 349,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For an economics project, Colleen determined the cost of ferry rides for bicycles and cars. How much higher is the fare for a car on the Mukilteu-Clinton ferry than on the Southport-Fort Fisher ferry? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "mukilteu_clinton_ferry_bike_fare = 10.00\nmukilteu_clinton_ferry_car_fare = 20.00\nsouthport_fort_fisher_ferry_bike_fare = 5.00\nsouthport_fort_fisher_ferry_car_fare = 15.00\n\nfare_difference = mukilteu_clinton_ferry_car_fare - southport_fort_fisher_ferry_car_fare\nprint(fare_difference)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": null,
        "true_false": false
    },
    "569": {
        "question": "Which subject had the highest pulse rate in baseline period?",
        "image": "images/569.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "569",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1786,
            "img_height": 2284,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which subject had the highest pulse rate in baseline period?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "pulse_rates = {\n    'math': 80,\n    'science': 75,\n    'english': 85,\n    'history': 70\n}\n\nmax_pulse_rate = max(pulse_rates.values())\nsubject_with_max_pulse_rate = [subject for subject, pulse_rate in pulse_rates.items() if pulse_rate == max_pulse_rate]\n\nprint(subject_with_max_pulse_rate)",
        "execution": "",
        "error": "name 'max_pulse_rate' is not defined",
        "extraction": "['english']",
        "prediction": null,
        "true_false": false
    },
    "570": {
        "question": "Subtract all purple matte blocks. Subtract all brown things. How many objects are left?",
        "image": "images/570.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "570",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all purple matte blocks. Subtract all brown things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "purple_matte_blocks = 10\nbrown_things = 5\n\nobjects_left = purple_matte_blocks - brown_things\nprint(objects_left)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "571": {
        "question": "Is Bubblegum the roughest?",
        "image": "images/571.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "571",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 613,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Bubblegum the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "answer = \"no\"\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "572": {
        "question": "When does the function start decreasing?",
        "image": "images/572.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "572",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 400,
            "img_height": 316,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: When does the function start decreasing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_decreasing_point(function):\n    for i in range(len(function)-1):\n        if function[i] > function[i+1]:\n            return i\n    return -1\n\nfunction = [1, 2, 3, 4, 5, 4, 3, 2, 1]\ndecreasing_point = find_decreasing_point(function)\nprint(decreasing_point)",
        "execution": "4",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "573": {
        "question": "A race car driver kept track of how many laps he drove in the past 5 days. What is the mode of the numbers?'",
        "image": "images/573.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "53",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "573",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A race car driver kept track of how many laps he drove in the past 5 days. What is the mode of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "laps = [10, 12, 15, 10, 10]\n\ndef find_mode(numbers):\n    count_dict = {}\n    for num in numbers:\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    \n    max_count = max(count_dict.values())\n    mode = [num for num, count in count_dict.items() if count == max_count]\n    \n    return mode\n\nmode = find_mode(laps)\nprint(mode)",
        "execution": "[10]",
        "error": "None",
        "extraction": "[10]",
        "prediction": null,
        "true_false": false
    },
    "574": {
        "question": "Do you see the figures inside these boxes? They form a pattern. Choose the figure in the answer row below that continues the pattern.",
        "image": "images/574.jpg",
        "choices": [
            "1",
            "2",
            "3",
            "4",
            "5"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "574",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 868,
            "img_height": 378,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Do you see the figures inside these boxes? They form a pattern. Choose the figure in the answer row below that continues the pattern.\nChoices:\n(A) 1\n(B) 2\n(C) 3\n(D) 4\n(E) 5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_pattern(boxes):\n    patterns = {\n        (1, 2, 3): 4,\n        (2, 4, 6): 8,\n        (3, 6, 9): 12,\n        (4, 8, 12): 16,\n        (5, 10, 15): 20\n    }\n\n    for pattern, answer in patterns.items():\n        if boxes == pattern:\n            return answer\n    return \"\"\n\nboxes = (1, 2, 3)\nprint(find_pattern(boxes))",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "575": {
        "question": "Lines $l$, $m$, and $n$ are perpendicular bisectors of $\\triangle PQR$ and meet at $T$. If $TQ = 2x$, $PT = 3y - 1$, and $TR = 8$, find $z$.",
        "image": "images/575.jpg",
        "choices": [
            "3",
            "4",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "575",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 509,
            "img_height": 287,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Lines $l$, $m$, and $n$ are perpendicular bisectors of $\\triangle PQR$ and meet at $T$. If $TQ = 2x$, $PT = 3y - 1$, and $TR = 8$, find $z$.\nChoices:\n(A) 3\n(B) 4\n(C) 5\n(D) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from sympy import symbols, Eq, solve\n\nx, y, z = symbols('x y z')\nTQ = 2*x\nPT = 3*y - 1\nTR = 8\n\n# Perpendicular bisectors meet at T\neq1 = Eq(TQ, PT)\neq2 = Eq(TQ, TR)\n\n# Solve for x and y\nsol = solve((eq1, eq2), (x, y))\n\n# Substitute the values of x and y into the equation PT = 3y - 1\neq3 = Eq(PT.subs(sol), z)\n\n# Solve for z\nz_sol = solve(eq3, z)\n\nprint(z_sol)",
        "execution": "[8]",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "576": {
        "question": "Which part of the human brain is the largest and most anterior part of each cerebral hemisphere?",
        "image": "images/576.jpg",
        "choices": [
            "motor cortex",
            "occipital lobe",
            "temporal lobe",
            "frontal lobe"
        ],
        "unit": null,
        "precision": null,
        "answer": "frontal lobe",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "576",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 768,
            "img_height": 625,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which part of the human brain is the largest and most anterior part of each cerebral hemisphere?\nChoices:\n(A) motor cortex\n(B) occipital lobe\n(C) temporal lobe\n(D) frontal lobe\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_part_brain(choices):\n    parts_brain = {\n        'motor cortex': 'frontal lobe',\n        'occipital lobe': 'temporal lobe',\n        'temporal lobe': 'occipital lobe',\n        'frontal lobe': 'motor cortex'\n    }\n\n    for choice in choices:\n        if choice == parts_brain['frontal lobe']:\n            return choice\n    return \"\"\n\nchoices = ['motor cortex', 'occipital lobe', 'temporal lobe', 'frontal lobe']\n\nprint(largest_part_brain(choices))",
        "execution": "motor cortex",
        "error": "None",
        "extraction": "frontal lobe",
        "prediction": "frontal lobe",
        "true_false": true
    },
    "577": {
        "question": "Consider the following matrices:\r\n$$\r\n\\mathbf{A}=\\left(\\begin{array}{rrr}\r\n1 & 2 & -1 \\\\\r\n0 & 3 & 1 \\\\\r\n2 & 0 & 1\r\n\\end{array}\\right), \\quad \\mathbf{B}=\\left(\\begin{array}{rrr}\r\n2 & 1 & 0 \\\\\r\n0 & -1 & 2 \\\\\r\n1 & 1 & 3\r\n\\end{array}\\right), \\quad \\mathbf{C}=\\left(\\begin{array}{ll}\r\n2 & 1 \\\\\r\n4 & 3 \\\\\r\n1 & 0\r\n\\end{array}\\right)\r\n$$\r\nFind $|\\mathbf{A B}|$.",
        "image": "images/577.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-104",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "577",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 533,
            "img_height": 142,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Consider the following matrices:\r\n$$\r\n\\mathbf{A}=\\left(\\begin{array}{rrr}\r\n1 & 2 & -1 \\\\\r\n0 & 3 & 1 \\\\\r\n2 & 0 & 1\r\n\\end{array}\\right), \\quad \\mathbf{B}=\\left(\\begin{array}{rrr}\r\n2 & 1 & 0 \\\\\r\n0 & -1 & 2 \\\\\r\n1 & 1 & 3\r\n\\end{array}\\right), \\quad \\mathbf{C}=\\left(\\begin{array}{ll}\r\n2 & 1 \\\\\r\n4 & 3 \\\\\r\n1 & 0\r\n\\end{array}\\right)\r\n$$\r\nFind $|\\mathbf{A B}|$.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\nA = np.array([[1, 2, -1], [0, 3, 1], [2, 0, 1]])\nB = np.array([[2, 1, 0], [0, -1, 2], [1, 1, 3]])\n\nAB = np.dot(A, B)\ndet_AB = np.linalg.det(AB)\n\nprint(det_AB)",
        "execution": "-103.99999999999999",
        "error": "None",
        "extraction": "-10.0",
        "prediction": null,
        "true_false": false
    },
    "578": {
        "question": "What number is shown?",
        "image": "images/578.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9567",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "578",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 637,
            "img_height": 285,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "579": {
        "question": "What is the average number of documents required per shipment to export goods in Uganda per year?",
        "image": "images/579.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "579",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1228,
            "img_height": 700,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the average number of documents required per shipment to export goods in Uganda per year?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_documents = 500\ntotal_shipments = 100\n\naverage_documents_per_shipment = total_documents / total_shipments\nprint(average_documents_per_shipment)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": null,
        "true_false": false
    },
    "580": {
        "question": "Is Slate the high median?",
        "image": "images/580.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "580",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 650,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Slate the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_high_median(numbers):\n    median = sorted(numbers)[len(numbers)//2]\n    if median == \"Slate\":\n        return \"yes\"\n    else:\n        return \"no\"\n\nnumbers = [\"Apple\", \"Banana\", \"Cherry\", \"Slate\", \"Watermelon\"]\nprint(is_high_median(numbers))",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "581": {
        "question": "Subtract all large matte cubes. Subtract all matte blocks. How many objects are left?",
        "image": "images/581.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "581",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large matte cubes. Subtract all matte blocks. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_matte_cubes = 5\nmatte_blocks = 3\n\nobjects_left = large_matte_cubes - matte_blocks\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "582": {
        "question": "Is Web Green greater than Rebecca Purple?",
        "image": "images/582.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "582",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 582,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Web Green greater than Rebecca Purple?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "web_green = '#008000'\nrebecca_purple = '#663399'\n\nif web_green > rebecca_purple:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "583": {
        "question": "Find x. Round to the nearest tenth.\r\n",
        "image": "images/583.jpg",
        "choices": [
            "5.8",
            "6.5",
            "14.2",
            "44.3"
        ],
        "unit": null,
        "precision": null,
        "answer": "5.8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "583",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 319,
            "img_height": 465,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x. Round to the nearest tenth.\r\n\nChoices:\n(A) 5.8\n(B) 6.5\n(C) 14.2\n(D) 44.3\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nx = math.sqrt(33.6)\nrounded_x = round(x, 1)\nprint(rounded_x)",
        "execution": "5.8",
        "error": "None",
        "extraction": "6.5",
        "prediction": "6.5",
        "true_false": false
    },
    "584": {
        "question": "A philanthropic organization compared the amounts of money that its members donated to certain causes. Who donated more money to arts education, Aubrey or Connor?'",
        "image": "images/584.jpg",
        "choices": [
            "Connor",
            "Aubrey"
        ],
        "unit": null,
        "precision": null,
        "answer": "Connor",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "584",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 391,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A philanthropic organization compared the amounts of money that its members donated to certain causes. Who donated more money to arts education, Aubrey or Connor?'\nChoices:\n(A) Connor\n(B) Aubrey\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "aubrey_donation = 500\nconnor_donation = 700\n\nif aubrey_donation > connor_donation:\n    print(\"Aubrey donated more money to arts education\")\nelse:\n    print(\"Connor donated more money to arts education\")",
        "execution": "Connor donated more money to arts education",
        "error": "None",
        "extraction": "Connor",
        "prediction": "Connor",
        "true_false": true
    },
    "585": {
        "question": "\u5982\u56fe\uff0c\u5728\u77e9\u5f62ABCD\u4e2d\uff0cAB\uff1d2\uff0c\u2220AOB\uff1d60\u00b0\uff0c\u5219BD\u7684\u957f\u4e3a\uff08\uff09",
        "image": "images/585.jpg",
        "choices": [
            "4",
            "3",
            "2",
            "2\u221a{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "585",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 148,
            "img_height": 92,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u77e9\u5f62ABCD\u4e2d\uff0cAB\uff1d2\uff0c\u2220AOB\uff1d60\u00b0\uff0c\u5219BD\u7684\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 4\n(B) 3\n(C) 2\n(D) 2\u221a{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAB = 2\nangle_AOB = 60\n\n# Calculate the length of BD using trigonometry\nBD = AB * math.sin(math.radians(angle_AOB))\n\nprint(BD)",
        "execution": "1.7320508075688772",
        "error": "None",
        "extraction": "2.0",
        "prediction": "2",
        "true_false": false
    },
    "586": {
        "question": "As shown in the figure, in Rt\u25b3ABC, \u2220BAC = 90.0, rotate \u25b3ABC clockwise around point A by 90.0 to obtain \u25b3AB\u2032C\u2032 (the corresponding point of point B is point B\u2032, and the corresponding point of point C is point C \u2032), connect CC\u2032. If \u2220CC\u2032B\u2032 = 32.0, then the size of \u2220AC\u2032B\u2032 is ()",
        "image": "images/586.jpg",
        "choices": [
            "32\u00b0",
            "45\u00b0",
            "13\u00b0",
            "30\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "13\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "586",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 80,
            "img_height": 75,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in Rt\u25b3ABC, \u2220BAC = 90.0, rotate \u25b3ABC clockwise around point A by 90.0 to obtain \u25b3AB\u2032C\u2032 (the corresponding point of point B is point B\u2032, and the corresponding point of point C is point C \u2032), connect CC\u2032. If \u2220CC\u2032B\u2032 = 32.0, then the size of \u2220AC\u2032B\u2032 is ()\nChoices:\n(A) 32\u00b0\n(B) 45\u00b0\n(C) 13\u00b0\n(D) 30\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_BAC = 90.0\n    angle_CC_B = 32.0\n\n    angle_BAC_rad = math.radians(angle_BAC)\n    angle_CC_B_rad = math.radians(angle_CC_B)\n\n    angle_AC_B = math.pi - angle_BAC_rad - angle_CC_B_rad\n\n    angle_AC_B_deg = math.degrees(angle_AC_B)\n\n    return angle_AC_B_deg\n\nprint(find_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "45",
        "prediction": "45\u00b0",
        "true_false": false
    },
    "587": {
        "question": "At 9.0 in the morning, a ship departs from point A and sails in the direction due east at a speed of 40.0 nautical miles per hour, and arrives at point B at 9.0 and 30.0 minutes. As shown in the figure, the island M is measured from A and B. In the direction of 45.0 north by east and 15.0 north by east, then the distance between B and island M is ()",
        "image": "images/587.jpg",
        "choices": [
            "20\u6d77\u91cc",
            "20\u221a{2}\u6d77\u91cc",
            "15\u6d77\u91cc",
            "20\u6d77\u91cc"
        ],
        "unit": null,
        "precision": null,
        "answer": "20\u221a{2}\u6d77\u91cc",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "587",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 144,
            "img_height": 124,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: At 9.0 in the morning, a ship departs from point A and sails in the direction due east at a speed of 40.0 nautical miles per hour, and arrives at point B at 9.0 and 30.0 minutes. As shown in the figure, the island M is measured from A and B. In the direction of 45.0 north by east and 15.0 north by east, then the distance between B and island M is ()\nChoices:\n(A) 20\u6d77\u91cc\n(B) 20\u221a{2}\u6d77\u91cc\n(C) 15\u6d77\u91cc\n(D) 20\u6d77\u91cc\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nspeed = 40.0\ntime = 30.0 / 60.0\n\ndistance = speed * time\n\nangle1 = 45.0\nangle2 = 15.0\n\ndistance_M = distance * math.sin(math.radians(angle1)) + distance * math.sin(math.radians(angle2))\n\nprint(distance_M)",
        "execution": "19.318516525781362",
        "error": "None",
        "extraction": "20",
        "prediction": "20\u6d77\u91cc",
        "true_false": false
    },
    "588": {
        "question": "Which year has more actual total income?",
        "image": "images/588.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1982",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "588",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1785,
            "img_height": 2281,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which year has more actual total income?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "year1_actual_income = 50000\nyear2_actual_income = 60000\nyear3_actual_income = 55000\n\nif year1_actual_income > year2_actual_income and year1_actual_income > year3_actual_income:\n    print(\"Year 1 has the highest actual total income\")\nelif year2_actual_income > year1_actual_income and year2_actual_income > year3_actual_income:\n    print(\"Year 2 has the highest actual total income\")\nelse:\n    print(\"Year 3 has the highest actual total income\")",
        "execution": "Year 2 has the highest actual total income",
        "error": "None",
        "extraction": "Year 2 has the highest actual total income",
        "prediction": null,
        "true_false": false
    },
    "589": {
        "question": "What number of things are either large objects behind the shiny double bus or tiny gray metal objects?",
        "image": "images/589.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "589",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number of things are either large objects behind the shiny double bus or tiny gray metal objects?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_objects = 3\nshiny_double_bus = 2\ntiny_gray_metal_objects = 5\n\nnumber_of_things = large_objects + tiny_gray_metal_objects\nprint(number_of_things)",
        "execution": "8",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "590": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/590.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "590",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 376,
            "img_height": 264,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "591": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/591.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "591",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 900,
            "img_height": 600,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "592": {
        "question": "What is the global maximum of this function?",
        "image": "images/592.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "592",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 283,
            "img_height": 318,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the global maximum of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\ndef function(x):\n    return -x**2 + 4*x + 5\n\nx = np.linspace(-10, 10, 100)\ny = function(x)\n\nplt.plot(x, y)\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Graph of the function')\nplt.grid(True)\nplt.show()\n\nmaximum = np.max(y)\nprint(maximum)",
        "execution": "8.993470054076115",
        "error": "None",
        "extraction": "-1.0",
        "prediction": null,
        "true_false": false
    },
    "593": {
        "question": "What is the average of longest light blue bar and shortest gray bar?",
        "image": "images/593.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "273",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "593",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the average of longest light blue bar and shortest gray bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "longest_light_blue_bar = 10\nshortest_gray_bar = 5\n\naverage = (longest_light_blue_bar + shortest_gray_bar) / 2\nprint(average)",
        "execution": "7.5",
        "error": "None",
        "extraction": "9.5",
        "prediction": null,
        "true_false": false
    },
    "594": {
        "question": "When does the expenditure per student in Jamaica have the greatest increase?",
        "image": "images/594.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2005",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "594",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: When does the expenditure per student in Jamaica have the greatest increase?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Read the data from a CSV file\ndata = pd.read_csv('expenditure_per_student.csv')\n\n# Calculate the increase in expenditure per student\ndata['increase'] = data['expenditure'].diff()\n\n# Find the index of the row with the greatest increase\nmax_increase_index = data['increase'].idxmax()\n\n# Get the year with the greatest increase\nyear_with_max_increase = data.loc[max_increase_index, 'year']\n\nprint(year_with_max_increase)",
        "execution": "",
        "error": "[Errno 2] No such file or directory: 'expenditure_per_student.csv'",
        "extraction": "2015",
        "prediction": "2015",
        "true_false": false
    },
    "595": {
        "question": "Is Navy Blue the maximum?",
        "image": "images/595.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "595",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 532,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Navy Blue the maximum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "color = \"Navy Blue\"\nmax_color = \"Navy Blue\"\n\nif color == max_color:\n    ans = \"yes\"\nelse:\n    ans = \"no\"\n\nprint(ans)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "596": {
        "question": "Is Dodger Blue the low median?",
        "image": "images/596.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "596",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 407,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dodger Blue the low median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_low_median(color_list):\n    sorted_colors = sorted(color_list)\n    median_index = len(sorted_colors) // 2\n    median_color = sorted_colors[median_index]\n    \n    if median_color == \"Dodger Blue\":\n        return \"yes\"\n    else:\n        return \"no\"\n\ncolor_list = [\"Red\", \"Green\", \"Blue\", \"Dodger Blue\", \"Yellow\"]\nprint(is_low_median(color_list))",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "597": {
        "question": "What percentage of people prefer the least preferred object?",
        "image": "images/597.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "597",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percentage of people prefer the least preferred object?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "least_preferred = 10\ntotal_people = 100\n\npercentage = (least_preferred / total_people) * 100\nprint(percentage)",
        "execution": "10.0",
        "error": "None",
        "extraction": "10.0",
        "prediction": null,
        "true_false": false
    },
    "598": {
        "question": "What is the most curved beak species?",
        "image": "images/598.jpg",
        "choices": [
            "iiki",
            "swallow-tanager",
            "cliff swallow",
            "hawfinch"
        ],
        "unit": null,
        "precision": null,
        "answer": "iiki",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "598",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 593,
            "img_height": 463,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the most curved beak species?\nChoices:\n(A) iiki\n(B) swallow-tanager\n(C) cliff swallow\n(D) hawfinch\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "beak_curvature = {\n    'iiki': 0.2,\n    'swallow-tanager': 0.4,\n    'cliff swallow': 0.6,\n    'hawfinch': 0.8\n}\n\nmost_curved_beak = max(beak_curvature, key=beak_curvature.get)\nprint(most_curved_beak)",
        "execution": "hawfinch",
        "error": "None",
        "extraction": "cliff swallow",
        "prediction": "cliff swallow",
        "true_false": false
    },
    "599": {
        "question": "In the figure above, AC = 6 and BC = 3. Point P lies on line AB between A and B such that line CP is perpendicular to line AB. Which of the following could be the length of line CP?",
        "image": "images/599.jpg",
        "choices": [
            "2",
            "4",
            "5",
            "7",
            "8"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "599",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 393,
            "img_height": 340,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, AC = 6 and BC = 3. Point P lies on line AB between A and B such that line CP is perpendicular to line AB. Which of the following could be the length of line CP?\nChoices:\n(A) 2\n(B) 4\n(C) 5\n(D) 7\n(E) 8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_length_CP(AC, BC):\n    # Use Pythagorean theorem to find length of line CP\n    CP = math.sqrt(AC**2 - BC**2)\n    return CP\n\nAC = 6\nBC = 3\n\nlength_CP = find_length_CP(AC, BC)\nprint(length_CP)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "4.8",
        "prediction": "4",
        "true_false": false
    },
    "600": {
        "question": "Choose the answer.",
        "image": "images/600.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "A",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "600",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 424,
            "img_height": 637,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Choose the answer.\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "answer = \"A\"\nprint(answer)",
        "execution": "A",
        "error": "None",
        "extraction": "A",
        "prediction": "A",
        "true_false": true
    },
    "601": {
        "question": "What's the ratio of smallest segment and second largest segment?",
        "image": "images/601.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.33",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "601",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 210,
            "img_height": 386,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What's the ratio of smallest segment and second largest segment?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def ratio_of_segments(segments):\n    segments.sort()\n    smallest_segment = segments[0]\n    second_largest_segment = segments[-2]\n    ratio = smallest_segment / second_largest_segment\n    return ratio\n\nsegments = [5, 10, 15, 20]\nprint(ratio_of_segments(segments))",
        "execution": "0.3333333333333333",
        "error": "None",
        "extraction": "0.25",
        "prediction": "0.25",
        "true_false": false
    },
    "602": {
        "question": "Rectangle ABCD is subdivided into two identical square regions, as in the figure above. If the area of each square is 9, what is the perimeter of ABCD?",
        "image": "images/602.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "602",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 435,
            "img_height": 219,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Rectangle ABCD is subdivided into two identical square regions, as in the figure above. If the area of each square is 9, what is the perimeter of ABCD?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side_length = 3\nperimeter = 4 * side_length\nprint(perimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "603": {
        "question": "What is cumulative increase in weight ( in grams) for \"GROUP C\" in third week ( give an approximate value) ?",
        "image": "images/603.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "300",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "603",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1754,
            "img_height": 2237,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is cumulative increase in weight ( in grams) for \"GROUP C\" in third week ( give an approximate value) ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "group_a_weight = 1000\ngroup_b_weight = 1500\ngroup_c_weight = 2000\n\nweek_1_increase = 100\nweek_2_increase = 150\nweek_3_increase = 200\n\ngroup_c_cumulative_increase = week_1_increase + week_2_increase + week_3_increase\nprint(group_c_cumulative_increase)",
        "execution": "450",
        "error": "None",
        "extraction": "450",
        "prediction": "450",
        "true_false": false
    },
    "604": {
        "question": "Is Dark Orchid the roughest?",
        "image": "images/604.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "604",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Orchid the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_roughest(color):\n    colors_roughness = {\n        'Dark Orchid': True,\n        'Crimson': False,\n        'Midnight Blue': False,\n        'Forest Green': False\n    }\n\n    if color in colors_roughness:\n        return colors_roughness[color]\n    else:\n        return \"\"\n\nprint(is_roughest('Dark Orchid'))",
        "execution": "True",
        "error": "None",
        "extraction": "True",
        "prediction": "yes",
        "true_false": false
    },
    "605": {
        "question": "Subtract all large green matte cubes. Subtract all big green blocks. How many objects are left?",
        "image": "images/605.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "605",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large green matte cubes. Subtract all big green blocks. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_green_matte_cubes = 5\nbig_green_blocks = 3\n\nobjects_left = large_green_matte_cubes - big_green_blocks\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "606": {
        "question": "What is the perimeter of the rectangle?",
        "image": "images/606.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "606",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 335,
            "img_height": 209,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the rectangle?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length = 10\nwidth = 5\n\nperimeter = 2 * (length + width)\nprint(perimeter)",
        "execution": "30",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "607": {
        "question": "Subtract all yellow shiny things. Subtract all yellow metal things. How many objects are left?",
        "image": "images/607.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "607",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all yellow shiny things. Subtract all yellow metal things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_shiny_things = 5\nyellow_metal_things = 3\n\nobjects_left = yellow_shiny_things - yellow_metal_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "608": {
        "question": "Does South Carolina have the highest value in the South ?",
        "image": "images/608.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "608",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 775,
            "img_height": 560,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does South Carolina have the highest value in the South ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "highest_value = {\n    'North Carolina': 100,\n    'South Carolina': 150,\n    'Georgia': 120,\n    'Florida': 110\n}\n\nsouth_states = ['North Carolina', 'South Carolina', 'Georgia', 'Florida']\n\nmax_value = max(highest_value[state] for state in south_states)\n\nif highest_value['South Carolina'] == max_value:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "",
        "error": "name 'highest_value' is not defined",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "609": {
        "question": "Subtract all big green matte cylinders. Subtract all big brown cubes. How many objects are left?",
        "image": "images/609.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "609",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big green matte cylinders. Subtract all big brown cubes. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_green_matte_cylinders = 5\nbig_brown_cubes = 3\n\nobjects_left = big_green_matte_cylinders - big_brown_cubes\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "610": {
        "question": "In the figure above, P, Q, and R lie on the same line. P is the center of the larger circle, and Q is the center of the smaller circle. If the radius of the larger circle is 4, what is the radius of the smaller circle?",
        "image": "images/610.jpg",
        "choices": [
            "1",
            "2",
            "4",
            "8",
            "16"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "610",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 411,
            "img_height": 353,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, P, Q, and R lie on the same line. P is the center of the larger circle, and Q is the center of the smaller circle. If the radius of the larger circle is 4, what is the radius of the smaller circle?\nChoices:\n(A) 1\n(B) 2\n(C) 4\n(D) 8\n(E) 16\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_radius_ratio(radius_large):\n    radius_small = radius_large / 2\n    return radius_small\n\nradius_large = 4\nradius_small = find_radius_ratio(radius_large)\nprint(radius_small)",
        "execution": "2.0",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "611": {
        "question": "A shipping company keeps track of the number of boxes in each shipment they send out. How many shipments had exactly 56 boxes? (Unit: shipments)",
        "image": "images/611.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "611",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 153,
            "img_height": 180,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A shipping company keeps track of the number of boxes in each shipment they send out. How many shipments had exactly 56 boxes? (Unit: shipments)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shipments = [45, 56, 56, 67, 56, 78, 56, 89, 56, 56, 56, 100]\n\ncount = 0\nfor shipment in shipments:\n    if shipment == 56:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "612": {
        "question": "Subtract all blue metal things. Subtract all tiny objects. How many objects are left?",
        "image": "images/612.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "612",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all blue metal things. Subtract all tiny objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blue_metal_things = 5\ntiny_objects = 3\n\nobjects_left = blue_metal_things - tiny_objects\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "613": {
        "question": "How many houses are there?",
        "image": "images/613.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "613",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 473,
            "img_height": 87,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many houses are there?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "houses = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnum_houses = len(houses)\nprint(num_houses)",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": true
    },
    "614": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/614.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "614",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 915,
            "img_height": 661,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "615": {
        "question": "If two sides of a triangle measure 12 and 7, which of the following cannot be the perimeter of the triangle?",
        "image": "images/615.jpg",
        "choices": [
            "29",
            "34",
            "37",
            "38"
        ],
        "unit": null,
        "precision": null,
        "answer": "38",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "615",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 522,
            "img_height": 195,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If two sides of a triangle measure 12 and 7, which of the following cannot be the perimeter of the triangle?\nChoices:\n(A) 29\n(B) 34\n(C) 37\n(D) 38\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_possible_perimeter(side1, side2, perimeter):\n    if perimeter < side1 + side2:\n        return False\n    if perimeter - side1 - side2 < side1 or perimeter - side1 - side2 < side2:\n        return False\n    return True\n\nside1 = 12\nside2 = 7\nperimeters = [29, 34, 37, 38]\n\nfor perimeter in perimeters:\n    if not is_possible_perimeter(side1, side2, perimeter):\n        print(perimeter)",
        "execution": "29",
        "error": "None",
        "extraction": "29",
        "prediction": "29",
        "true_false": false
    },
    "616": {
        "question": "What is the ratio of instagram to google?",
        "image": "images/616.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "616",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the ratio of instagram to google?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "instagram_followers = 1000000\ngoogle_followers = 5000000\n\nratio = instagram_followers / google_followers\nprint(ratio)",
        "execution": "0.2",
        "error": "None",
        "extraction": "0.2",
        "prediction": null,
        "true_false": false
    },
    "617": {
        "question": "The magnitude of the acceleration vector a is $10 \\mathrm{~cm} / \\mathrm{s}^2$. Use the figure to estimate the normal components of $\\mathbf{a}$.\r\n",
        "image": "images/617.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "617",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 478,
            "img_height": 484,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The magnitude of the acceleration vector a is $10 \\mathrm{~cm} / \\mathrm{s}^2$. Use the figure to estimate the normal components of $\\mathbf{a}$.\r\n\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nmagnitude = 10\nangle = 30\n\nnormal_component = magnitude * math.cos(math.radians(angle))\nprint(normal_component)",
        "execution": "8.660254037844387",
        "error": "None",
        "extraction": "8.660254037844387",
        "prediction": null,
        "true_false": false
    },
    "618": {
        "question": "Is Dark Orchid the maximum?",
        "image": "images/618.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "618",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 532,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Orchid the maximum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "color = \"Dark Orchid\"\nmaximum_color = max(color)\n\nif color == maximum_color:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "619": {
        "question": "What is the value of f(4)?",
        "image": "images/619.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "16",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "619",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 970,
            "img_height": 666,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of f(4)?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def f(x):\n    return 2*x + 3\n\nprint(f(4))",
        "execution": "11",
        "error": "None",
        "extraction": "11",
        "prediction": "11",
        "true_false": false
    },
    "620": {
        "question": "Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.",
        "image": "images/620.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "620",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 199,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "nail_length = 5.75\nnearest_inch = round(nail_length)\nprint(nearest_inch)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "621": {
        "question": "The figure above is composed of 25 small triangles that are congruent and equilateral. If the area of triangle DFH is 10, what is the area of triangle AFK?",
        "image": "images/621.jpg",
        "choices": [
            "40",
            "42.5",
            "50",
            "52.5",
            "62.5"
        ],
        "unit": null,
        "precision": null,
        "answer": "62.5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "621",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 397,
            "img_height": 315,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The figure above is composed of 25 small triangles that are congruent and equilateral. If the area of triangle DFH is 10, what is the area of triangle AFK?\nChoices:\n(A) 40\n(B) 42.5\n(C) 50\n(D) 52.5\n(E) 62.5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\narea_DFH = 10\narea_AFH = area_DFH / 2\narea_AFK = area_AFH / 2\n\nprint(area_AFK)",
        "execution": "2.5",
        "error": "None",
        "extraction": "20",
        "prediction": "40",
        "true_false": false
    },
    "622": {
        "question": "\u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0cD\u662fBC\u4e0a\u7684\u70b9\uff0c\u4e14BD\uff1d2\uff0cDC\uff1d1\uff0cS\u25b3ACD\uff1d12\uff0c\u90a3\u4e48S\u25b3ABC\u7b49\u4e8e\uff08\uff09",
        "image": "images/622.jpg",
        "choices": [
            "30",
            "36",
            "72",
            "24"
        ],
        "unit": null,
        "precision": null,
        "answer": "36",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "622",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 146,
            "img_height": 92,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0cD\u662fBC\u4e0a\u7684\u70b9\uff0c\u4e14BD\uff1d2\uff0cDC\uff1d1\uff0cS\u25b3ACD\uff1d12\uff0c\u90a3\u4e48S\u25b3ABC\u7b49\u4e8e\uff08\uff09\nChoices:\n(A) 30\n(B) 36\n(C) 72\n(D) 24\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef triangle_area(bd, dc, acd_area):\n    ab = bd + dc\n    abc_area = acd_area * (ab / bd)\n    return abc_area\n\nbd = 2\ndc = 1\nacd_area = 12\n\nabc_area = triangle_area(bd, dc, acd_area)\nprint(abc_area)",
        "execution": "18.0",
        "error": "None",
        "extraction": "36",
        "prediction": "36",
        "true_false": true
    },
    "623": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is twelve (_).",
        "image": "images/623.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "o'clock",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "623",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 95,
            "img_height": 95,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is twelve (_).\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def time_shown(caption):\n    time_words = ['half', 'quarter', \"o'clock\", \"quarter to\", \"quarter past\"]\n\n    for word in time_words:\n        if word in caption:\n            return word\n    return \"\"\n\ncaption = \"The clock in the image shows the time as twelve o'clock.\"\n\nprint(time_shown(caption))",
        "execution": "o'clock",
        "error": "None",
        "extraction": "o'clock",
        "prediction": "o'clock",
        "true_false": true
    },
    "624": {
        "question": "In how many years, is the total unemployed labor force in Upper middle income greater than 1.6 %?",
        "image": "images/624.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "624",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1344,
            "img_height": 700,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the total unemployed labor force in Upper middle income greater than 1.6 %?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "unemployed_labor_force_upper_middle_income = [1.2, 1.4, 1.5, 1.7, 1.8, 1.9, 2.0]\nyears = 0\n\nfor unemployment_rate in unemployed_labor_force_upper_middle_income:\n    if unemployment_rate > 1.6:\n        break\n    years += 1\n\nprint(years)",
        "execution": "3",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "625": {
        "question": "Is the number of blue matte school buss greater than the number of large cyan metallic jets?",
        "image": "images/625.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "625",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of blue matte school buss greater than the number of large cyan metallic jets?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(blue_mattes, large_cyans):\n    if blue_mattes > large_cyans:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nblue_mattes = 10\nlarge_cyans = 5\n\nprint(compare_numbers(blue_mattes, large_cyans))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "626": {
        "question": "Subtract all brown objects. Subtract all large purple cylinders. How many objects are left?",
        "image": "images/626.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "626",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all brown objects. Subtract all large purple cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "brown_objects = 5\nlarge_purple_cylinders = 3\n\nobjects_left = brown_objects - large_purple_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "627": {
        "question": "Some friends played a trivia game and recorded their scores. What is the mode of the numbers?'",
        "image": "images/627.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "627",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 155,
            "img_height": 311,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Some friends played a trivia game and recorded their scores. What is the mode of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_mode(numbers):\n    count_dict = {}\n    for num in numbers:\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    \n    max_count = max(count_dict.values())\n    mode = [num for num, count in count_dict.items() if count == max_count]\n    \n    return mode\n\nscores = [5, 3, 2, 5, 4, 3, 5, 2, 1, 4, 5]\nmode = find_mode(scores)\nprint(mode)",
        "execution": "[5]",
        "error": "None",
        "extraction": "[5]",
        "prediction": null,
        "true_false": false
    },
    "628": {
        "question": "\u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0c\u2220ABC\u7684\u5e73\u5206\u7ebf\u4ea4AD\u4e8e\u70b9E\uff0c\u2220BCD\u7684\u5e73\u5206\u7ebf\u4ea4AD\u4e8e\u70b9F\uff0c\u82e5AB\uff1d3\uff0cAD\uff1d4\uff0c\u5219EF\u7684\u957f\u662f\uff08\uff09",
        "image": "images/628.jpg",
        "choices": [
            "1",
            "2",
            "2.5",
            "3"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "628",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 151,
            "img_height": 111,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0c\u2220ABC\u7684\u5e73\u5206\u7ebf\u4ea4AD\u4e8e\u70b9E\uff0c\u2220BCD\u7684\u5e73\u5206\u7ebf\u4ea4AD\u4e8e\u70b9F\uff0c\u82e5AB\uff1d3\uff0cAD\uff1d4\uff0c\u5219EF\u7684\u957f\u662f\uff08\uff09\nChoices:\n(A) 1\n(B) 2\n(C) 2.5\n(D) 3\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAB = 3\nAD = 4\n\n# Calculate the length of AE using the angle bisector theorem\nAE = (AB * AD) / (AB + AD)\n\n# Calculate the length of DE using the Pythagorean theorem\nDE = math.sqrt(AD**2 - AE**2)\n\n# Calculate the length of EF using the angle bisector theorem\nEF = (AB * DE) / AE\n\nprint(EF)",
        "execution": "6.324555320336759",
        "error": "None",
        "extraction": "2.5",
        "prediction": "2.5",
        "true_false": false
    },
    "629": {
        "question": "What percentage of people prefer the object hut?",
        "image": "images/629.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "20",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "629",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percentage of people prefer the object hut?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_people = 100\nhut_preferred = 35\n\npercentage = (hut_preferred / total_people) * 100\nprint(percentage)",
        "execution": "35.0",
        "error": "None",
        "extraction": "35",
        "prediction": "35",
        "true_false": false
    },
    "630": {
        "question": "Find the size of angle MBD in the figure below.",
        "image": "images/630.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "72",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "630",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 340,
            "img_height": 195,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the size of angle MBD in the figure below.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\n# Given information\nAB = 8\nBC = 6\nCD = 10\n\n# Using the Law of Cosines to find angle BAC\ncos_BAC = (AB**2 + BC**2 - CD**2) / (2 * AB * BC)\nangle_BAC = math.degrees(math.acos(cos_BAC))\n\n# Angle MBD is equal to angle BAC\nangle_MBD = angle_BAC\n\nprint(angle_MBD)",
        "execution": "90.0",
        "error": "None",
        "extraction": "angle_MBD",
        "prediction": null,
        "true_false": false
    },
    "631": {
        "question": "What is the value of the smallest bar?",
        "image": "images/631.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "631",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def smallest_bar(bars):\n    smallest = float('inf')\n    for bar in bars:\n        if bar < smallest:\n            smallest = bar\n    return smallest\n\nbars = [5, 3, 8, 2, 6]\nprint(smallest_bar(bars))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "632": {
        "question": "What is the total value of the More bar?",
        "image": "images/632.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "52",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "632",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 309,
            "img_height": 350,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the total value of the More bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "more_bar_value = 1.50\nmore_bar_quantity = 10\n\ntotal_value = more_bar_value * more_bar_quantity\nprint(total_value)",
        "execution": "15.0",
        "error": "None",
        "extraction": "15.0",
        "prediction": null,
        "true_false": false
    },
    "633": {
        "question": "In the figure, $m\u22201 = 123$. Find the measure of $\\angle 14$.",
        "image": "images/633.jpg",
        "choices": [
            "47",
            "57",
            "67",
            "123"
        ],
        "unit": null,
        "precision": null,
        "answer": "57",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "633",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 361,
            "img_height": 330,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure, $m\u22201 = 123$. Find the measure of $\\angle 14$.\nChoices:\n(A) 47\n(B) 57\n(C) 67\n(D) 123\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "m_angle_1 = 123\nm_angle_14 = 180 - m_angle_1\nprint(m_angle_14)",
        "execution": "57",
        "error": "None",
        "extraction": "57",
        "prediction": "57",
        "true_false": true
    },
    "634": {
        "question": "\u5982\u56fe\uff0c\u76f4\u7ebfAB\uff0cCD\u4ea4\u4e8e\u70b9O\uff0e\u5c04\u7ebfOE\u5e73\u5206\u2220BOC\uff0c\u82e5\u2220AOD\uff1d70\u00b0\uff0c\u5219\u2220AOE\u7b49\u4e8e\uff08\uff09",
        "image": "images/634.jpg",
        "choices": [
            "35\u00b0",
            "110\u00b0",
            "135\u00b0",
            "145\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "145\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "634",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 173,
            "img_height": 141,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u76f4\u7ebfAB\uff0cCD\u4ea4\u4e8e\u70b9O\uff0e\u5c04\u7ebfOE\u5e73\u5206\u2220BOC\uff0c\u82e5\u2220AOD\uff1d70\u00b0\uff0c\u5219\u2220AOE\u7b49\u4e8e\uff08\uff09\nChoices:\n(A) 35\u00b0\n(B) 110\u00b0\n(C) 135\u00b0\n(D) 145\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_AOD = 70\n    angle_BOE = angle_AOD / 2\n    angle_AOE = 180 - angle_BOE\n    return angle_AOE\n\nprint(find_angle())",
        "execution": "145.0",
        "error": "None",
        "extraction": "135",
        "prediction": "135\u00b0",
        "true_false": false
    },
    "635": {
        "question": "As shown in the figure, E is any point in \u25b1ABCD, if S~quadrilateral ABCD~ = 6.0, then the area of \u200b\u200bthe shaded part in the figure is ()",
        "image": "images/635.jpg",
        "choices": [
            "2",
            "3",
            "4",
            "5"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "635",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 179,
            "img_height": 86,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, E is any point in \u25b1ABCD, if S~quadrilateral ABCD~ = 6.0, then the area of \u200b\u200bthe shaded part in the figure is ()\nChoices:\n(A) 2\n(B) 3\n(C) 4\n(D) 5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef area_of_shaded_part(S):\n    # Assuming the length of AB = BC = CD = DA = 1\n    # Let x be the length of AE\n    # Then the length of BE = x, CE = 1-x, DE = 1\n    # Using the formula for the area of a triangle: area = 0.5 * base * height\n    # The area of triangle ABE = 0.5 * x * x = 0.5 * x^2\n    # The area of triangle CDE = 0.5 * (1-x) * 1 = 0.5 * (1-x)\n    # The area of the shaded part = area of quadrilateral ABCD - area of triangle ABE - area of triangle CDE\n    #                          = S - 0.5 * x^2 - 0.5 * (1-x)\n    #                          = S - 0.5 * x^2 - 0.5 + 0.5 * x\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x - 0.5\n    #                          = S - 0.5 * x^2 + 0.5 * x -",
        "execution": "",
        "error": "unexpected EOF while parsing (<string>, line 42)",
        "extraction": "S - 0.5 * x^2 + 0.5 * x - 0.5",
        "prediction": "2",
        "true_false": false
    },
    "636": {
        "question": "What number is shown?",
        "image": "images/636.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "34",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "636",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 92,
            "img_height": 117,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "637": {
        "question": "\u5982\u56fe\uff0c\u76f4\u7ebfa\u2225b\uff0c\u76f4\u7ebfa\u4e0e\u77e9\u5f62ABCD\u7684\u8fb9AB\uff0cAD\u5206\u522b\u4ea4\u4e8e\u70b9E\uff0cF\uff0c\u76f4\u7ebfb\u4e0e\u77e9\u5f62ABCD\u7684\u8fb9CB\uff0cCD\u5206\u522b\u4ea4\u4e8e\u70b9G\uff0cH\uff0e\u82e5\u2220AFE\uff1d30\u00b0\uff0c\u5219\u2220DHG\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/637.jpg",
        "choices": [
            "100\u00b0",
            "110\u00b0",
            "120\u00b0",
            "130\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "120\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "637",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 166,
            "img_height": 108,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u76f4\u7ebfa\u2225b\uff0c\u76f4\u7ebfa\u4e0e\u77e9\u5f62ABCD\u7684\u8fb9AB\uff0cAD\u5206\u522b\u4ea4\u4e8e\u70b9E\uff0cF\uff0c\u76f4\u7ebfb\u4e0e\u77e9\u5f62ABCD\u7684\u8fb9CB\uff0cCD\u5206\u522b\u4ea4\u4e8e\u70b9G\uff0cH\uff0e\u82e5\u2220AFE\uff1d30\u00b0\uff0c\u5219\u2220DHG\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 100\u00b0\n(B) 110\u00b0\n(C) 120\u00b0\n(D) 130\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef solve_angle():\n    angle_AFE = 30\n    angle_AEF = 180 - angle_AFE\n    angle_EAF = 90 - angle_AEF\n\n    angle_EHG = angle_EAF\n    angle_HGD = 90\n    angle_HDG = 180 - angle_HGD\n\n    angle_DHG = 180 - angle_EHG - angle_HDG\n\n    return angle_DHG\n\nprint(solve_angle())",
        "execution": "150",
        "error": "None",
        "extraction": "120",
        "prediction": "120\u00b0",
        "true_false": true
    },
    "638": {
        "question": "In how many years, is the under-5 male mortality rate greater than the average under-5 male mortality rate taken over all years ?",
        "image": "images/638.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "638",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 880,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the under-5 male mortality rate greater than the average under-5 male mortality rate taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_than_average(mortality_rates):\n    average_rate = sum(mortality_rates) / len(mortality_rates)\n    years_greater = 0\n    for rate in mortality_rates:\n        if rate > average_rate:\n            years_greater += 1\n    return years_greater\n\nmortality_rates = [10, 8, 12, 6, 9]\nprint(years_greater_than_average(mortality_rates))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "639": {
        "question": "What does the dial indicate as the top facing number?",
        "image": "images/639.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "475",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "639",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 768,
            "img_height": 1024,
            "source": "VizWiz",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What does the dial indicate as the top facing number?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dial_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\ntop_facing_number = dial_numbers[0]\nprint(top_facing_number)",
        "execution": "1",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "640": {
        "question": "Find $\\widehat{\\mathrm{WN}}$ if $\\triangle \\mathrm{IWN}$ is equilateral and $W N=5$",
        "image": "images/640.jpg",
        "choices": [
            "\\frac { 3 } { 5 } \\pi",
            "\\frac { 5 } { 3 } \\pi",
            "5 \\pi",
            "10 \\pi"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac { 5 } { 3 } \\pi",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "640",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 309,
            "img_height": 222,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $\\widehat{\\mathrm{WN}}$ if $\\triangle \\mathrm{IWN}$ is equilateral and $W N=5$\nChoices:\n(A) \\frac { 3 } { 5 } \\pi\n(B) \\frac { 5 } { 3 } \\pi\n(C) 5 \\pi\n(D) 10 \\pi\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(wn):\n    angle = math.degrees(math.atan(1/math.sqrt(3)))\n    return angle * wn\n\nwn = 5\nans = find_angle(wn)\nprint(ans)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "60",
        "prediction": "5 \\pi",
        "true_false": false
    },
    "641": {
        "question": "The graph of the concentration function $c(t)$ is shown after a 7-mg injection of dye into a heart. Use Simpson's Rule to estimate the cardiac output.",
        "image": "images/641.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "5.77",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "641",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 828,
            "img_height": 420,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The graph of the concentration function $c(t)$ is shown after a 7-mg injection of dye into a heart. Use Simpson's Rule to estimate the cardiac output.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\n# Given data\nt = np.array([0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20])  # time in seconds\nc = np.array([0, 2, 4, 6, 8, 10, 8, 6, 4, 2, 0])  # concentration in mg/L\n\n# Simpson's Rule\nh = t[1] - t[0]  # step size\nn = len(t) - 1  # number of intervals\nsum1 = np.sum(c[1:n:2])  # sum of odd-indexed terms\nsum2 = np.sum(c[2:n:2])  # sum of even-indexed terms\nintegral = (h/3) * (c[0] + 4*sum1 + 2*sum2 + c[n])  # Simpson's Rule formula\n\n# Cardiac output\ncardiac_output = integral * 7  # multiply by the injection volume\n\nprint(\"Estimated cardiac output:\", cardiac_output)",
        "execution": "Estimated cardiac output: 709.3333333333333",
        "error": "None",
        "extraction": "Estimated cardiac output: 56.0",
        "prediction": null,
        "true_false": false
    },
    "642": {
        "question": "Line AB is tangent to circle O. If AB = 8 and OB = 10, find the diameter of the circle.",
        "image": "images/642.jpg",
        "choices": [
            "4",
            "6",
            "8",
            "10",
            "12"
        ],
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "642",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 347,
            "img_height": 443,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Line AB is tangent to circle O. If AB = 8 and OB = 10, find the diameter of the circle.\nChoices:\n(A) 4\n(B) 6\n(C) 8\n(D) 10\n(E) 12\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_diameter(AB, OB):\n    radius = OB\n    diameter = 2 * radius\n    return diameter\n\nAB = 8\nOB = 10\n\ndiameter = find_diameter(AB, OB)\nprint(diameter)",
        "execution": "20",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "643": {
        "question": "As shown in the figure, CD is the diameter of \u2299O, chord DE \u2225 OA, if the degree of \u2220D is 50.0, then the degree of \u2220C is ()",
        "image": "images/643.jpg",
        "choices": [
            "25\u00b0",
            "30\u00b0",
            "40\u00b0",
            "50\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "25\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "643",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 111,
            "img_height": 125,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, CD is the diameter of \u2299O, chord DE \u2225 OA, if the degree of \u2220D is 50.0, then the degree of \u2220C is ()\nChoices:\n(A) 25\u00b0\n(B) 30\u00b0\n(C) 40\u00b0\n(D) 50\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_D):\n    angle_C = 180 - angle_D\n    return angle_C\n\nangle_D = 50.0\nangle_C = find_angle(angle_D)\nprint(angle_C)",
        "execution": "130.0",
        "error": "None",
        "extraction": "130",
        "prediction": "30\u00b0",
        "true_false": false
    },
    "644": {
        "question": "What is the missing number in the picture?",
        "image": "images/644.jpg",
        "choices": [
            "6",
            "8",
            "10",
            "11"
        ],
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "644",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 494,
            "img_height": 452,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the missing number in the picture?\nChoices:\n(A) 6\n(B) 8\n(C) 10\n(D) 11\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def missing_number(numbers):\n    for i in range(1, len(numbers) + 1):\n        if i not in numbers:\n            return i\n    return 0\n\nnumbers = [6, 7, 9, 10, 11]\nprint(missing_number(numbers))",
        "execution": "1",
        "error": "None",
        "extraction": "7",
        "prediction": "6",
        "true_false": true
    },
    "645": {
        "question": "\u5982\u56fe\uff0cAC\uff0cBD\u662f\u83f1\u5f62ABCD\u7684\u5bf9\u89d2\u7ebf\uff0cBH\u22a5AD\u4e8e\u70b9H\uff0c\u82e5AC\uff1d4\uff0cBD\uff1d3\uff0c\u5219BH\u7684\u957f\u4e3a\uff08\uff09",
        "image": "images/645.jpg",
        "choices": [
            "2.4",
            "2.5",
            "4.8",
            "5"
        ],
        "unit": null,
        "precision": null,
        "answer": "2.4",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "645",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 139,
            "img_height": 113,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAC\uff0cBD\u662f\u83f1\u5f62ABCD\u7684\u5bf9\u89d2\u7ebf\uff0cBH\u22a5AD\u4e8e\u70b9H\uff0c\u82e5AC\uff1d4\uff0cBD\uff1d3\uff0c\u5219BH\u7684\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 2.4\n(B) 2.5\n(C) 4.8\n(D) 5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAC = 4\nBD = 3\n\n# Calculate the length of BH using the Pythagorean theorem\nBH = math.sqrt((AC**2 + BD**2) / 4)\n\nBH",
        "execution": "",
        "error": "None",
        "extraction": "2.5",
        "prediction": "2.5",
        "true_false": false
    },
    "646": {
        "question": "The employee at the department store counted the number of ties on each tie rack. How many racks have at least 0 ties? (Unit: racks)",
        "image": "images/646.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "25",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "646",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 131,
            "img_height": 224,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The employee at the department store counted the number of ties on each tie rack. How many racks have at least 0 ties? (Unit: racks)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tie_racks = [5, 3, 0, 2, 4, 1, 0, 3, 2, 1, 0, 4, 2, 3, 0]\n\ncount = 0\nfor rack in tie_racks:\n    if rack >= 0:\n        count += 1\n\nprint(count)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "647": {
        "question": "Find the top view.",
        "image": "images/647.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "B",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "647",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 900,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the top view.\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import cv2\nimport numpy as np\n\n# Load the image\nimage = cv2.imread('top_view.jpg')\n\n# Convert the image to grayscale\ngray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\n# Apply a threshold to the image\n_, threshold = cv2.threshold(gray, 200, 255, cv2.THRESH_BINARY)\n\n# Find contours in the thresholded image\ncontours, _ = cv2.findContours(threshold, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n\n# Sort the contours by area in descending order\ncontours = sorted(contours, key=cv2.contourArea, reverse=True)\n\n# Draw the largest contour on the image\ncv2.drawContours(image, [contours[0]], -1, (0, 255, 0), 2)\n\n# Display the image\ncv2.imshow('Top View', image)\ncv2.waitKey(0)\ncv2.destroyAllWindows()",
        "execution": "",
        "error": "OpenCV(4.5.4) /tmp/pip-req-build-khv2fx3p/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'\n",
        "extraction": "A",
        "prediction": "A",
        "true_false": false
    },
    "648": {
        "question": "What is the minimum value of this function?",
        "image": "images/648.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "648",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 296,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the minimum value of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef minimum_value():\n    x = np.linspace(-10, 10, 1000)\n    y = x**2 + 3*x + 2\n    min_value = np.min(y)\n    return min_value\n\nprint(minimum_value())",
        "execution": "",
        "error": "name 'np' is not defined",
        "extraction": "-9.75",
        "prediction": null,
        "true_false": false
    },
    "649": {
        "question": "How many values are below 30 in Mainly are incidents of individual misconduct?",
        "image": "images/649.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "649",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 310,
            "img_height": 461,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many values are below 30 in Mainly are incidents of individual misconduct?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "values = [10, 25, 35, 15, 40, 20, 30, 5, 50]\n\ncount = 0\nfor value in values:\n    if value < 30:\n        count += 1\n\nprint(count)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "650": {
        "question": "What is the sum of maximum employment rate and minimum employment?",
        "image": "images/650.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "31.3",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "650",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of maximum employment rate and minimum employment?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "maximum_employment_rate = 0.85\nminimum_employment_rate = 0.05\n\nsum_employment = maximum_employment_rate + minimum_employment_rate\nprint(sum_employment)",
        "execution": "0.9",
        "error": "None",
        "extraction": "0.9",
        "prediction": "0.9",
        "true_false": false
    },
    "651": {
        "question": "For an assignment, Johnny looked at which countries got the most Nobel Prizes in various decades. In the 1990s, how many more Nobel Prize winners did Canada have than Italy? (Unit: Nobel Prize winners)",
        "image": "images/651.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "651",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 224,
            "img_height": 156,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For an assignment, Johnny looked at which countries got the most Nobel Prizes in various decades. In the 1990s, how many more Nobel Prize winners did Canada have than Italy? (Unit: Nobel Prize winners)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "canada_1990s = 10\nitaly_1990s = 5\n\ndifference = canada_1990s - italy_1990s\nprint(difference)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "652": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/652.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "652",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 845,
            "img_height": 365,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "653": {
        "question": "Are there at least three distinct shades of blue in this photo?",
        "image": "images/653.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "653",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 425,
            "img_height": 500,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there at least three distinct shades of blue in this photo?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import cv2\nimport numpy as np\n\ndef distinct_shades_of_blue(image_path):\n    image = cv2.imread(image_path)\n    image_hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\n    \n    lower_blue = np.array([90, 50, 50])\n    upper_blue = np.array([130, 255, 255])\n    \n    blue_mask = cv2.inRange(image_hsv, lower_blue, upper_blue)\n    blue_pixels = cv2.countNonZero(blue_mask)\n    \n    if blue_pixels >= 3:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nimage_path = \"photo.jpg\"\nprint(distinct_shades_of_blue(image_path))",
        "execution": "",
        "error": "OpenCV(4.5.4) /tmp/pip-req-build-khv2fx3p/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'\n",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "654": {
        "question": "Are there fewer yellow metallic motorbikes that are in front of the small brown metal dirtbike than big yellow dirtbikes?",
        "image": "images/654.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "654",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer yellow metallic motorbikes that are in front of the small brown metal dirtbike than big yellow dirtbikes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_motorbikes():\n    yellow_metallic_motorbikes = 5\n    small_brown_metal_dirtbike = 3\n    big_yellow_dirtbikes = 7\n\n    if yellow_metallic_motorbikes < small_brown_metal_dirtbike:\n        return \"Yes\"\n    elif yellow_metallic_motorbikes > big_yellow_dirtbikes:\n        return \"No\"\n    else:\n        return \"\"\n\nprint(compare_motorbikes())",
        "execution": "",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "655": {
        "question": "Is the value of Russia has the highest transport?",
        "image": "images/655.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "655",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 858,
            "img_height": 507,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the value of Russia has the highest transport?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "transport_values = {\n    'Russia': 500,\n    'China': 400,\n    'United States': 600,\n    'Germany': 300\n}\n\nmax_value = max(transport_values.values())\nmax_country = [country for country, value in transport_values.items() if value == max_value]\n\nif 'Russia' in max_country:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "",
        "error": "name 'max_value' is not defined",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "656": {
        "question": "Is Web Maroon the low median?",
        "image": "images/656.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "656",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 776,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Web Maroon the low median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "web_maroon = [5, 7, 9, 10, 12, 15, 18, 20, 22, 25]\nlow_median = web_maroon[len(web_maroon)//2 - 1]\n\nif low_median == 10:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "657": {
        "question": "Does Arkansas have a higher value than Indiana ?",
        "image": "images/657.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "657",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 500,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Arkansas have a higher value than Indiana ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "arkansas_value = 500\nindiana_value = 400\n\nif arkansas_value > indiana_value:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "658": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/658.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "658",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 115,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "659": {
        "question": "What is the highest value of navy blue bar?",
        "image": "images/659.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "991",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "659",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest value of navy blue bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "navy_blue_bars = [10, 15, 12, 8, 20, 18, 14]\n\nhighest_value = max(navy_blue_bars)\nprint(highest_value)",
        "execution": "20",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "660": {
        "question": "Are there fewer small fighters than yellow matte tandem bikes?",
        "image": "images/660.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "660",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer small fighters than yellow matte tandem bikes?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_fighters = 10\nyellow_matte_tandem_bikes = 15\n\nif small_fighters < yellow_matte_tandem_bikes:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "661": {
        "question": "What is this function most likely be?",
        "image": "images/661.jpg",
        "choices": [
            "a polynomial",
            "a trigonometric function",
            "an exponential function",
            "a logarithmic function"
        ],
        "unit": null,
        "precision": null,
        "answer": "a trigonometric function",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "661",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1732,
            "img_height": 1274,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is this function most likely be?\nChoices:\n(A) a polynomial\n(B) a trigonometric function\n(C) an exponential function\n(D) a logarithmic function\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef function_type(x):\n    if x < 0:\n        return \"a logarithmic function\"\n    elif x == 0:\n        return \"an exponential function\"\n    elif x > 0 and x <= math.pi/2:\n        return \"a trigonometric function\"\n    else:\n        return \"a polynomial\"\n\nx = 1.5\nprint(function_type(x))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "a trigonometric function",
        "prediction": "a trigonometric function",
        "true_false": true
    },
    "662": {
        "question": "How much more accurate is the most accurate algorithm compared the least accurate algorithm?",
        "image": "images/662.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "80",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "662",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much more accurate is the most accurate algorithm compared the least accurate algorithm?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "most_accurate = 0.95\nleast_accurate = 0.75\n\ndifference = most_accurate - least_accurate\nprint(difference)",
        "execution": "0.19999999999999996",
        "error": "None",
        "extraction": "0.2",
        "prediction": null,
        "true_false": false
    },
    "663": {
        "question": "What time is shown? Answer by typing a time word, not a number. It is (_) past six.",
        "image": "images/663.jpg",
        "choices": [
            "half",
            "quarter",
            "o'clock",
            "quarter to",
            "quarter past"
        ],
        "unit": null,
        "precision": null,
        "answer": "quarter",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "663",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 203,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What time is shown? Answer by typing a time word, not a number. It is (_) past six.\nChoices:\n(A) half\n(B) quarter\n(C) o'clock\n(D) quarter to\n(E) quarter past\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def time_shown(caption, choices):\n    time_words = {\n        'half': 'half',\n        'quarter': 'quarter',\n        'o\\'clock': 'o\\'clock',\n        'quarter to': 'quarter to',\n        'quarter past': 'quarter past'\n    }\n\n    for choice in choices:\n        if choice in caption:\n            return choice\n    return \"\"\n\nchoices = ['half', 'quarter', 'o\\'clock', 'quarter to', 'quarter past']\ncaption = \"The clock in the image shows that it is quarter past six.\"\n\nprint(time_shown(caption, choices))",
        "execution": "quarter",
        "error": "None",
        "extraction": "quarter past",
        "prediction": "quarter past",
        "true_false": false
    },
    "664": {
        "question": "What is the highest number of responses for Question 10, for any given % of inside sales?",
        "image": "images/664.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "17",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "664",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1692,
            "img_height": 2245,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest number of responses for Question 10, for any given % of inside sales?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "responses = {\n    '10%': 50,\n    '20%': 75,\n    '30%': 60,\n    '40%': 90,\n    '50%': 85\n}\n\nmax_responses = max(responses.values())\nmax_percentage = [key for key, value in responses.items() if value == max_responses]\n\nprint(max_percentage)",
        "execution": "",
        "error": "name 'max_responses' is not defined",
        "extraction": "['40%']",
        "prediction": null,
        "true_false": false
    },
    "665": {
        "question": "Find $h$ in the triangle.",
        "image": "images/665.jpg",
        "choices": [
            "4.62",
            "5.66",
            "6.93",
            "8"
        ],
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "665",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 275,
            "img_height": 161,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $h$ in the triangle.\nChoices:\n(A) 4.62\n(B) 5.66\n(C) 6.93\n(D) 8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_h(a, b, c):\n    s = (a + b + c) / 2\n    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    h = (2 * area) / a\n    return h\n\na = 6\nb = 8\nc = 10\n\nh = find_h(a, b, c)\nprint(h)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "6.0",
        "prediction": "6.93",
        "true_false": false
    },
    "666": {
        "question": "Subtract all red objects. Subtract all big green things. How many objects are left?",
        "image": "images/666.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "666",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all red objects. Subtract all big green things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "red_objects = 5\nbig_green_things = 3\n\nobjects_left = red_objects - big_green_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "667": {
        "question": "Which year has the least difference between the used and new cars?",
        "image": "images/667.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2015",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "667",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which year has the least difference between the used and new cars?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "used_cars = [2015, 2012, 2018, 2010, 2017]\nnew_cars = [2019, 2014, 2016, 2011, 2013]\n\nmin_diff = float('inf')\nyear = 0\n\nfor used_year in used_cars:\n    for new_year in new_cars:\n        diff = abs(used_year - new_year)\n        if diff < min_diff:\n            min_diff = diff\n            year = used_year\n\nprint(year)",
        "execution": "2015",
        "error": "None",
        "extraction": "2014",
        "prediction": "2014",
        "true_false": false
    },
    "668": {
        "question": "Does the first symbol in the legend represent the smallest category ?",
        "image": "images/668.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "668",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 775,
            "img_height": 560,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does the first symbol in the legend represent the smallest category ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def first_symbol_smallest_category(legend):\n    symbols = legend.keys()\n    smallest_category = min(legend.values())\n    first_symbol = next(iter(symbols))\n    \n    if legend[first_symbol] == smallest_category:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nlegend = {\n    'symbol1': 10,\n    'symbol2': 15,\n    'symbol3': 5,\n    'symbol4': 12\n}\n\nprint(first_symbol_smallest_category(legend))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "669": {
        "question": "As shown in the figure, line segment AB = 10.0, M is the midpoint of line segment AB, C is the midpoint of line segment MB, N is a point of line segment AM, and MN = 1.0, the length of line segment NC ()",
        "image": "images/669.jpg",
        "choices": [
            "2",
            "2.5",
            "3",
            "3.5"
        ],
        "unit": null,
        "precision": null,
        "answer": "3.5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "669",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 187,
            "img_height": 18,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, line segment AB = 10.0, M is the midpoint of line segment AB, C is the midpoint of line segment MB, N is a point of line segment AM, and MN = 1.0, the length of line segment NC ()\nChoices:\n(A) 2\n(B) 2.5\n(C) 3\n(D) 3.5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 10.0\nMN = 1.0\n\nNC = AB/2 - MN\nprint(NC)",
        "execution": "4.0",
        "error": "None",
        "extraction": "2.5",
        "prediction": "2.5",
        "true_false": false
    },
    "670": {
        "question": "On which date of Meeting was the most number of shares transferred?",
        "image": "images/670.jpg",
        "choices": [
            "04/06/2005",
            "04/02/2005",
            "04/05/2005",
            "04/03/2005",
            "04/04/2005"
        ],
        "unit": null,
        "precision": null,
        "answer": "04/02/2005",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "670",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1582,
            "img_height": 2135,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: On which date of Meeting was the most number of shares transferred?\nChoices:\n(A) 04/06/2005\n(B) 04/02/2005\n(C) 04/05/2005\n(D) 04/03/2005\n(E) 04/04/2005\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from collections import Counter\n\nshares_transferred = ['04/06/2005', '04/02/2005', '04/05/2005', '04/03/2005', '04/04/2005', '04/06/2005', '04/06/2005']\n\ncounter = Counter(shares_transferred)\nmost_common_date = counter.most_common(1)[0][0]\n\nprint(most_common_date)",
        "execution": "04/06/2005",
        "error": "None",
        "extraction": "04/06/2005",
        "prediction": "04/06/2005",
        "true_false": false
    },
    "671": {
        "question": "What is the size of the semicircle rounded to 2 decimal places?",
        "image": "images/671.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "14.14",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "671",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 433,
            "img_height": 312,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the size of the semicircle rounded to 2 decimal places?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nradius = 5\nsemicircle_area = (math.pi * radius**2) / 2\nrounded_area = round(semicircle_area, 2)\n\nprint(rounded_area)",
        "execution": "39.27",
        "error": "None",
        "extraction": "12.57",
        "prediction": "12.57",
        "true_false": false
    },
    "672": {
        "question": "Move the ruler to measure the length of the twig to the nearest inch. The twig is about (_) inches long.",
        "image": "images/672.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "672",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 169,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the twig to the nearest inch. The twig is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "twig_length = 12.5\nnearest_inch = round(twig_length)\nprint(f\"The twig is about {nearest_inch} inches long.\")",
        "execution": "The twig is about 12 inches long.",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "673": {
        "question": "Is the number of large green cars less than the number of brown rubber double buss?",
        "image": "images/673.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "673",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of large green cars less than the number of brown rubber double buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_green_cars = 10\nbrown_rubber_double_buss = 8\n\nif large_green_cars < brown_rubber_double_buss:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "674": {
        "question": "In the figure above, CDE is an equilateral triangle and ABCE is a square with an area of 1. What is the perimeter of polygon ABCDE?",
        "image": "images/674.jpg",
        "choices": [
            "4",
            "5",
            "6",
            "7",
            "8"
        ],
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "674",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 125,
            "img_height": 89,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, CDE is an equilateral triangle and ABCE is a square with an area of 1. What is the perimeter of polygon ABCDE?\nChoices:\n(A) 4\n(B) 5\n(C) 6\n(D) 7\n(E) 8\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\n# Calculate the side length of the square\nside_length_square = math.sqrt(1)\n# Calculate the side length of the equilateral triangle\nside_length_triangle = side_length_square\n\n# Calculate the perimeter of the polygon\nperimeter = 4 * side_length_square + side_length_triangle\n\nprint(perimeter)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "675": {
        "question": "As shown in the figure, the cross section of a small reservoir dam is a right trapezoid, the width of crest BC is 6.0, the height of dam is 14.0, and the slope of the slope CD is i = 1.0:2.0, then the length of the dam bottom AD is ()",
        "image": "images/675.jpg",
        "choices": [
            "13m",
            "34m",
            "(6+14\u221a{3})m",
            "40m"
        ],
        "unit": null,
        "precision": null,
        "answer": "34m",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "675",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 183,
            "img_height": 83,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the cross section of a small reservoir dam is a right trapezoid, the width of crest BC is 6.0, the height of dam is 14.0, and the slope of the slope CD is i = 1.0:2.0, then the length of the dam bottom AD is ()\nChoices:\n(A) 13m\n(B) 34m\n(C) (6+14\u221a{3})m\n(D) 40m\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nwidth_crest_BC = 6.0\nheight_dam = 14.0\nslope_CD = 1.0 / 2.0\n\nlength_dam_bottom_AD = width_crest_BC + (height_dam / math.sqrt(3))\n\nprint(length_dam_bottom_AD)",
        "execution": "14.082903768654761",
        "error": "None",
        "extraction": "(6+14\u221a{3})m",
        "prediction": "(6+14\u221a{3})m",
        "true_false": false
    },
    "676": {
        "question": "What is the value of the smallest individual bar in the whole chart?",
        "image": "images/676.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "676",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'bar1': 10,\n    'bar2': 5,\n    'bar3': 8,\n    'bar4': 3,\n    'bar5': 6\n}\n\nsmallest_bar = min(chart.values())\nprint(smallest_bar)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "677": {
        "question": "Is the number of dirtbikes right of the large blue object less than the number of small green metallic cars in front of the tiny matte bicycle?",
        "image": "images/677.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "677",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of dirtbikes right of the large blue object less than the number of small green metallic cars in front of the tiny matte bicycle?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_objects(dirtbikes, large_blue_object, small_green_metallic_cars, tiny_matte_bicycle):\n    if dirtbikes < small_green_metallic_cars:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ndirtbikes = 5\nlarge_blue_object = 2\nsmall_green_metallic_cars = 7\ntiny_matte_bicycle = 3\n\nprint(compare_objects(dirtbikes, large_blue_object, small_green_metallic_cars, tiny_matte_bicycle))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "678": {
        "question": "Find x",
        "image": "images/678.jpg",
        "choices": [
            "21",
            "34",
            "58",
            "67"
        ],
        "unit": null,
        "precision": null,
        "answer": "58",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "678",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 267,
            "img_height": 149,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x\nChoices:\n(A) 21\n(B) 34\n(C) 58\n(D) 67\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x = 2 * (3 + 5) - 4\nprint(x)",
        "execution": "12",
        "error": "None",
        "extraction": "14",
        "prediction": "34",
        "true_false": false
    },
    "679": {
        "question": "As shown in the figure, in \u25b1ABCD, the diagonal AC and BD intersect at point O, if AC = 12.0, BD = 8.0, AB = 7.0, then the perimeter of \u25b3OAB is ()",
        "image": "images/679.jpg",
        "choices": [
            "15",
            "17",
            "21",
            "27"
        ],
        "unit": null,
        "precision": null,
        "answer": "17",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "679",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 173,
            "img_height": 73,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in \u25b1ABCD, the diagonal AC and BD intersect at point O, if AC = 12.0, BD = 8.0, AB = 7.0, then the perimeter of \u25b3OAB is ()\nChoices:\n(A) 15\n(B) 17\n(C) 21\n(D) 27\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef perimeter_of_triangle(AC, BD, AB):\n    AO = math.sqrt((AC**2 + AB**2)/2)\n    BO = math.sqrt((BD**2 + AB**2)/2)\n    AB = math.sqrt(AB**2 + AB**2)\n    \n    perimeter = AO + BO + AB\n    return perimeter\n\nAC = 12.0\nBD = 8.0\nAB = 7.0\n\nprint(perimeter_of_triangle(AC, BD, AB))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "17",
        "prediction": "17",
        "true_false": true
    },
    "680": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/680.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "680",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 440,
            "img_height": 303,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": true
    },
    "681": {
        "question": "What is the largest city in the nation where this plane is headquartered?",
        "image": "images/681.jpg",
        "choices": [
            "hong kong",
            "osaka",
            "shanghai",
            "tokyo"
        ],
        "unit": null,
        "precision": null,
        "answer": "tokyo",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "681",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "A-OKVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))",
        "execution": "tokyo",
        "error": "None",
        "extraction": "tokyo",
        "prediction": "tokyo",
        "true_false": true
    },
    "682": {
        "question": "From the above food web diagram, if all the grass dies then population of squirrel will",
        "image": "images/682.jpg",
        "choices": [
            "decrease",
            "remains the same",
            "increase",
            "NA"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "682",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 864,
            "img_height": 592,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: From the above food web diagram, if all the grass dies then population of squirrel will\nChoices:\n(A) decrease\n(B) remains the same\n(C) increase\n(D) NA\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def population_change(grass_alive):\n    if grass_alive:\n        return \"remains the same\"\n    else:\n        return \"decrease\"\n\ngrass_alive = False\nprint(population_change(grass_alive))",
        "execution": "decrease",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "683": {
        "question": "Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.",
        "image": "images/683.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "683",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 157,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "nail_length = 5.75\nnearest_inch = round(nail_length)\nprint(nearest_inch)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "684": {
        "question": "$\\overline{CH} \\cong \\overline{KJ}$. Find $x$.",
        "image": "images/684.jpg",
        "choices": [
            "27",
            "54",
            "55",
            "83"
        ],
        "unit": null,
        "precision": null,
        "answer": "55",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "684",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 608,
            "img_height": 444,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: $\\overline{CH} \\cong \\overline{KJ}$. Find $x$.\nChoices:\n(A) 27\n(B) 54\n(C) 55\n(D) 83\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(x, 2*x - 1)\n\nsolution = solve(eq, x)\nprint(solution)",
        "execution": "[1]",
        "error": "None",
        "extraction": "54",
        "prediction": "54",
        "true_false": false
    },
    "685": {
        "question": "What would happen to organism c if organism b increased?",
        "image": "images/685.jpg",
        "choices": [
            "decrease",
            "increase",
            "can't predict",
            "stay same"
        ],
        "unit": null,
        "precision": null,
        "answer": "increase",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "685",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 574,
            "img_height": 246,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would happen to organism c if organism b increased?\nChoices:\n(A) decrease\n(B) increase\n(C) can't predict\n(D) stay same\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def organism_c_outcome(organism_b):\n    if organism_b > 0:\n        return \"increase\"\n    elif organism_b < 0:\n        return \"decrease\"\n    else:\n        return \"stay same\"\n\norganism_b = 5\nprint(organism_c_outcome(organism_b))",
        "execution": "increase",
        "error": "None",
        "extraction": "increase",
        "prediction": "increase",
        "true_false": true
    },
    "686": {
        "question": "Is this function invertible?",
        "image": "images/686.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "686",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 731,
            "img_height": 442,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this function invertible?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_invertible(function):\n    try:\n        inverse = function.__invert__()\n        return True\n    except:\n        return False\n\n# Example function\ndef example_function(x):\n    return x + 5\n\nprint(is_invertible(example_function))",
        "execution": "False",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "687": {
        "question": "What could happen that would increase the number of krill?",
        "image": "images/687.jpg",
        "choices": [
            "increase in phytoplankton",
            "decrease in penguins",
            "increase in fish",
            "increase in birds"
        ],
        "unit": null,
        "precision": null,
        "answer": "increase in phytoplankton",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "687",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 576,
            "img_height": 396,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What could happen that would increase the number of krill?\nChoices:\n(A) increase in phytoplankton\n(B) decrease in penguins\n(C) increase in fish\n(D) increase in birds\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def increase_krill(choices):\n    krill_factors = {\n        'increase in phytoplankton': 'A',\n        'decrease in penguins': 'B',\n        'increase in fish': 'C',\n        'increase in birds': 'D'\n    }\n\n    possible_factors = []\n\n    for choice in choices:\n        if choice in krill_factors.values():\n            possible_factors.append(choice)\n\n    return possible_factors\n\nchoices = ['A', 'B', 'C', 'D']\nprint(increase_krill(choices))",
        "execution": "['A', 'B', 'C', 'D']",
        "error": "None",
        "extraction": "['A', 'C', 'D']",
        "prediction": "increase in fish",
        "true_false": false
    },
    "688": {
        "question": "What is the minimum age group shown in the \u2018plots\u2019?",
        "image": "images/688.jpg",
        "choices": [
            "11-15",
            "21-25",
            "6-10",
            "16-20",
            "0-5"
        ],
        "unit": null,
        "precision": null,
        "answer": "0-5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "688",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 3160,
            "img_height": 2136,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the minimum age group shown in the \u2018plots\u2019?\nChoices:\n(A) 11-15\n(B) 21-25\n(C) 6-10\n(D) 16-20\n(E) 0-5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def minimum_age_group(plots, choices):\n    age_groups = {\n        '11-15': 0,\n        '21-25': 0,\n        '6-10': 0,\n        '16-20': 0,\n        '0-5': 0\n    }\n\n    for plot in plots:\n        if plot['age_group'] == '11-15':\n            age_groups['11-15'] += 1\n        elif plot['age_group'] == '21-25':\n            age_groups['21-25'] += 1\n        elif plot['age_group'] == '6-10':\n            age_groups['6-10'] += 1\n        elif plot['age_group'] == '16-20':\n            age_groups['16-20'] += 1\n        elif plot['age_group'] == '0-5':\n            age_groups['0-5'] += 1\n\n    min_age_group = min(age_groups, key=age_groups.get)\n    return min_age_group\n\nplots = [\n    {'age_group': '11-15'},\n    {'age_group': '21-25'},\n    {'age_group': '6-10'},\n    {'age_group': '16-20'},\n    {'age_group': '0-5'},\n    {'age_group': '0-5'},\n    {'age_group': '0-5'},\n    {'age_group': '6-10'},\n    {'age_group': '6-10'},\n    {'age_group': '11-15'}\n]\n\nchoices = ['11-15', '21-25', '6-10', '16-20', '0-5']\n\nprint(minimum_age_group(plots, choices))",
        "execution": "21-25",
        "error": "None",
        "extraction": "6-10",
        "prediction": "6-10",
        "true_false": false
    },
    "689": {
        "question": "Are these people sitting in a circle?",
        "image": "images/689.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "689",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are these people sitting in a circle?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_sitting_in_circle(people):\n    num_people = len(people)\n    for i in range(num_people):\n        if people[i] != people[(i+1) % num_people]:\n            return \"No\"\n    return \"Yes\"\n\npeople = ['person1', 'person2', 'person3', 'person4']\nprint(is_sitting_in_circle(people))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "690": {
        "question": "In the diagram above, lines M and N are parallel. All of the following are true except",
        "image": "images/690.jpg",
        "choices": [
            "a + b = j + l",
            "g = h",
            "c + f = f + b",
            "g + e + f + h = 360",
            "d + e = f + j"
        ],
        "unit": null,
        "precision": null,
        "answer": "d + e = f + j",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "690",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 625,
            "img_height": 558,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the diagram above, lines M and N are parallel. All of the following are true except\nChoices:\n(A) a + b = j + l\n(B) g = h\n(C) c + f = f + b\n(D) g + e + f + h = 360\n(E) d + e = f + j\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_true_except(choices):\n    lines = {\n        'M': ['a', 'b', 'c', 'd', 'e'],\n        'N': ['f', 'g', 'h', 'j', 'l']\n    }\n\n    for choice in choices:\n        if choice not in lines['M'] and choice not in lines['N']:\n            return choice\n    return \"\"\n\nchoices = ['a + b = j + l', 'g = h', 'c + f = f + b', 'g + e + f + h = 360', 'd + e = f + j']\nprint(is_true_except(choices))",
        "execution": "a + b = j + l",
        "error": "None",
        "extraction": "c + f = f + b",
        "prediction": "c + f = f + b",
        "true_false": false
    },
    "691": {
        "question": "Calculate the missing item.",
        "image": "images/691.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "256",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "691",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 596,
            "img_height": 500,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Calculate the missing item.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def calculate_missing_item(items):\n    total = sum(items)\n    missing_item = 100 - total\n    return missing_item\n\nitems = [10, 20, 30, 40]\nmissing_item = calculate_missing_item(items)\nprint(missing_item)",
        "execution": "0",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "692": {
        "question": "According to the given food chain if grasses dried up in summer, what is likely to happen?",
        "image": "images/692.jpg",
        "choices": [
            "Grasshoppers will decrease.",
            "shrews will become extinct",
            "owls will increase.",
            "None of the above"
        ],
        "unit": null,
        "precision": null,
        "answer": "Grasshoppers will decrease.",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "692",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 189,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: According to the given food chain if grasses dried up in summer, what is likely to happen?\nChoices:\n(A) Grasshoppers will decrease.\n(B) shrews will become extinct\n(C) owls will increase.\n(D) None of the above\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_chain = {\n    'grasses': ['grasshoppers'],\n    'grasshoppers': ['shrews'],\n    'shrews': ['owls']\n}\n\ndef food_chain_effect(food_chain, food):\n    if food in food_chain:\n        return food_chain[food]\n    else:\n        return []\n\ndef grass_dried_up_effect(food_chain):\n    grasshoppers = food_chain_effect(food_chain, 'grasses')\n    shrews = food_chain_effect(food_chain, 'grasshoppers')\n    owls = food_chain_effect(food_chain, 'shrews')\n\n    if len(grasshoppers) == 0 or len(shrews) == 0 or len(owls) == 0:\n        return \"None of the above\"\n    else:\n        return \"Grasshoppers will decrease.\"\n\nprint(grass_dried_up_effect(food_chain))",
        "execution": "",
        "error": "name 'food_chain_effect' is not defined",
        "extraction": "Grasshoppers will decrease.",
        "prediction": "Grasshoppers will decrease.",
        "true_false": true
    },
    "693": {
        "question": "Is the orange larger than the car?",
        "image": "images/693.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "693",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the orange larger than the car?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "orange_size = 10\ncar_size = 8\n\nif orange_size > car_size:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "694": {
        "question": "\u5982\u56fe\uff0c\u5728\u83f1\u5f62ABCD\u4e2d\uff0cM\u3001N\u5206\u522b\u662fBC\u548cCD\u7684\u4e2d\u70b9\uff0cNP\u22a5AB\u4e8e\u70b9P\uff0c\u8fde\u63a5MP\uff0e\u82e5\u2220DAB\uff1d40\u00b0\uff0c\u5219\u2220MPB\uff1d\uff08\uff09",
        "image": "images/694.jpg",
        "choices": [
            "125\u00b0",
            "120\u00b0",
            "115\u00b0",
            "110\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "110\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "694",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 158,
            "img_height": 85,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u83f1\u5f62ABCD\u4e2d\uff0cM\u3001N\u5206\u522b\u662fBC\u548cCD\u7684\u4e2d\u70b9\uff0cNP\u22a5AB\u4e8e\u70b9P\uff0c\u8fde\u63a5MP\uff0e\u82e5\u2220DAB\uff1d40\u00b0\uff0c\u5219\u2220MPB\uff1d\uff08\uff09\nChoices:\n(A) 125\u00b0\n(B) 120\u00b0\n(C) 115\u00b0\n(D) 110\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle_DAB(angle_DAB):\n    angle_DAB = math.radians(angle_DAB)\n    angle_DAB = math.tan(angle_DAB)\n    angle_DAB = math.degrees(angle_DAB)\n    return angle_DAB\n\nangle_DAB = 40\nangle_MPB = 180 - 2 * find_angle_DAB(angle_DAB)\nprint(angle_MPB)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "120",
        "prediction": "120\u00b0",
        "true_false": false
    },
    "695": {
        "question": "Is Dark Salmon greater than Dark Orchid?",
        "image": "images/695.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "695",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 734,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Salmon greater than Dark Orchid?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dark_salmon = \"#E9967A\"\ndark_orchid = \"#9932CC\"\n\nif dark_salmon > dark_orchid:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "696": {
        "question": "Erica has $1,525.00. Does she have enough to buy a motorcycle and a canoe?'",
        "image": "images/696.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "696",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 214,
            "img_height": 192,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Erica has $1,525.00. Does she have enough to buy a motorcycle and a canoe?'\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "motorcycle_price = 1200.00\ncanoe_price = 800.00\n\ntotal_cost = motorcycle_price + canoe_price\n\nif total_cost <= 1525.00:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "697": {
        "question": "As shown in the figure, in the parallelogram ABCD, it is known that AB = 6.0, BC = 9.0, \u2220B = 30.0, then the area of \u200b\u200bthe parallelogram ABCD is ()",
        "image": "images/697.jpg",
        "choices": [
            "12",
            "18",
            "27",
            "54"
        ],
        "unit": null,
        "precision": null,
        "answer": "27",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "697",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 205,
            "img_height": 68,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the parallelogram ABCD, it is known that AB = 6.0, BC = 9.0, \u2220B = 30.0, then the area of \u200b\u200bthe parallelogram ABCD is ()\nChoices:\n(A) 12\n(B) 18\n(C) 27\n(D) 54\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAB = 6.0\nBC = 9.0\nangle_B = 30.0\n\n# Calculate the height of the parallelogram\nheight = BC * math.sin(math.radians(angle_B))\n\n# Calculate the area of the parallelogram\narea = AB * height\n\nprint(area)",
        "execution": "26.999999999999993",
        "error": "None",
        "extraction": "27.0",
        "prediction": "27",
        "true_false": true
    },
    "698": {
        "question": "In the triangle in the figure above, what is the value of x?",
        "image": "images/698.jpg",
        "choices": [
            "2*\\sqrt{3}",
            "6*\\sqrt{2}",
            "6*\\sqrt{3}",
            "6",
            "12"
        ],
        "unit": null,
        "precision": null,
        "answer": "2*\\sqrt{3}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "698",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 615,
            "img_height": 376,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the triangle in the figure above, what is the value of x?\nChoices:\n(A) 2*\\sqrt{3}\n(B) 6*\\sqrt{2}\n(C) 6*\\sqrt{3}\n(D) 6\n(E) 12\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_x(base, height):\n    x = math.sqrt(base**2 + height**2)\n    return x\n\nbase = 6\nheight = 6 * math.sqrt(3)\n\nx = find_x(base, height)\nprint(x)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "699": {
        "question": "What is the age gap between the center and the rightmost person?",
        "image": "images/699.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "699",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 4577,
            "img_height": 2684,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between the center and the rightmost person? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "center_age = 30\nrightmost_age = 45\n\nage_gap = rightmost_age - center_age\nprint(age_gap)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "700": {
        "question": "\u5982\u56fe\uff0c\u2299O\u662f\u25b3ABC\u7684\u5916\u63a5\u5706\uff0cAB\uff1dBC\uff1d4\uff0c\u628a\u5f27AB\u6cbf\u5f26AB\u5411\u4e0b\u6298\u53e0\u4ea4BC\u4e8e\u70b9D\uff0c\u82e5\u70b9D\u4e3aBC\u4e2d\u70b9\uff0c\u5219AC\u957f\u4e3a\uff08\uff09",
        "image": "images/700.jpg",
        "choices": [
            "1",
            "2",
            "2\u221a{2}",
            "\u221a{6}"
        ],
        "unit": null,
        "precision": null,
        "answer": "2\u221a{2}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "700",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 144,
            "img_height": 132,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u2299O\u662f\u25b3ABC\u7684\u5916\u63a5\u5706\uff0cAB\uff1dBC\uff1d4\uff0c\u628a\u5f27AB\u6cbf\u5f26AB\u5411\u4e0b\u6298\u53e0\u4ea4BC\u4e8e\u70b9D\uff0c\u82e5\u70b9D\u4e3aBC\u4e2d\u70b9\uff0c\u5219AC\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 1\n(B) 2\n(C) 2\u221a{2}\n(D) \u221a{6}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_AC_length():\n    AB = 4\n    BC = 4\n    AD = AB / 2\n    CD = BC / 2\n    AC = math.sqrt(AD**2 + CD**2)\n    return AC\n\nprint(find_AC_length())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "2.8284271247461903",
        "prediction": "2\u221a{2}",
        "true_false": true
    },
    "701": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/701.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "701",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 109,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "702": {
        "question": "What is cumulative increase in weight ( in grams) for \"GROUP A\" in third week ( give an approximate value) ?",
        "image": "images/702.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "400",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "702",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1754,
            "img_height": 2237,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is cumulative increase in weight ( in grams) for \"GROUP A\" in third week ( give an approximate value) ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "group_a_weight_week1 = 1000\ngroup_a_weight_week2 = 1200\ngroup_a_weight_week3 = 1400\n\ncumulative_increase = group_a_weight_week3 - group_a_weight_week1\nprint(cumulative_increase)",
        "execution": "400",
        "error": "None",
        "extraction": "400",
        "prediction": "400",
        "true_false": true
    },
    "703": {
        "question": "What is the sum of highest value and lowest value of navy blue bar?",
        "image": "images/703.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "2372.1",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "703",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of highest value and lowest value of navy blue bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "navy_blue_bar = [5, 10, 15, 20, 25]\n\nsum_of_highest_and_lowest = max(navy_blue_bar) + min(navy_blue_bar)\nprint(sum_of_highest_and_lowest)",
        "execution": "30",
        "error": "None",
        "extraction": "45",
        "prediction": "45.0",
        "true_false": false
    },
    "704": {
        "question": "Which two puzzle pieces form the larger square?",
        "image": "images/704.jpg",
        "choices": [
            "1 & 2",
            "1 & 3",
            "1 & 4",
            "2 & 3",
            "2 & 4"
        ],
        "unit": null,
        "precision": null,
        "answer": "1 & 3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "704",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 396,
            "img_height": 440,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which two puzzle pieces form the larger square?\nChoices:\n(A) 1 & 2\n(B) 1 & 3\n(C) 1 & 4\n(D) 2 & 3\n(E) 2 & 4\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_larger_square(puzzle_pieces):\n    for i in range(len(puzzle_pieces)):\n        for j in range(i+1, len(puzzle_pieces)):\n            if puzzle_pieces[i] + puzzle_pieces[j] == \"larger square\":\n                return (i+1, j+1)\n    return \"\"\n\npuzzle_pieces = [\"1\", \"2\", \"3\", \"4\"]\nprint(find_larger_square(puzzle_pieces))",
        "execution": "",
        "error": "None",
        "extraction": "[1, 3]",
        "prediction": "1 & 3",
        "true_false": true
    },
    "705": {
        "question": "Is the heart wider than more than half the width of the thorax?",
        "image": "images/705.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "705",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 419,
            "img_height": 512,
            "source": "VQA-RAD",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "medical image",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the heart wider than more than half the width of the thorax?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "heart_width = 10\nthorax_width = 20\n\nif heart_width > thorax_width/2:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "No",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "706": {
        "question": "Find the image of the dot (8,-2) under a clockwise rotation by 270\u00b0 about the origin.\"",
        "image": "images/706.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E"
        ],
        "unit": null,
        "precision": null,
        "answer": "C",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "706",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 432,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the image of the dot (8,-2) under a clockwise rotation by 270\u00b0 about the origin.\"\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef rotate_point(x, y, angle):\n    angle_rad = math.radians(angle)\n    new_x = x * math.cos(angle_rad) - y * math.sin(angle_rad)\n    new_y = x * math.sin(angle_rad) + y * math.cos(angle_rad)\n    return (new_x, new_y)\n\npoint = (8, -2)\nangle = 270\n\nnew_point = rotate_point(point[0], point[1], angle)\nprint(new_point)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "(-2.0, -8.0)",
        "prediction": "A",
        "true_false": false
    },
    "707": {
        "question": "\u5982\u56fe\uff0ca\u2225b\uff0c\u22201\uff1d60\u00b0\uff0c\u5219\u22202\u7684\u5927\u5c0f\u662f\uff08\uff09",
        "image": "images/707.jpg",
        "choices": [
            "60\u00b0",
            "80\u00b0",
            "100\u00b0",
            "120\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "120\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "707",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 154,
            "img_height": 120,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0ca\u2225b\uff0c\u22201\uff1d60\u00b0\uff0c\u5219\u22202\u7684\u5927\u5c0f\u662f\uff08\uff09\nChoices:\n(A) 60\u00b0\n(B) 80\u00b0\n(C) 100\u00b0\n(D) 120\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_2(angle_1):\n    angle_2 = 180 - angle_1\n    return angle_2\n\nangle_1 = 60\nangle_2 = angle_2(angle_1)\nprint(angle_2)",
        "execution": "120",
        "error": "None",
        "extraction": "120",
        "prediction": "120\u00b0",
        "true_false": true
    },
    "708": {
        "question": "As shown in the figure, the light source P is directly above the crossbar AB, the shadow of AB under the light is CD, AB \u2225 CD, AB = 2.0, CD = 5.0, the distance between point P and CD is 3.0, then the distance between AB and CD is ().",
        "image": "images/708.jpg",
        "choices": [
            "\\frac{6}{5}",
            "\\frac{7}{6}",
            "\\frac{9}{5}",
            "\\frac{15}{2}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{9}{5}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "708",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 156,
            "img_height": 110,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the light source P is directly above the crossbar AB, the shadow of AB under the light is CD, AB \u2225 CD, AB = 2.0, CD = 5.0, the distance between point P and CD is 3.0, then the distance between AB and CD is ().\nChoices:\n(A) \\frac{6}{5}\n(B) \\frac{7}{6}\n(C) \\frac{9}{5}\n(D) \\frac{15}{2}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AB = 2.0\nCD = 5.0\ndistance_P_CD = 3.0\n\ndistance_AB_CD = (AB / distance_P_CD) * CD\nprint(distance_AB_CD)",
        "execution": "3.333333333333333",
        "error": "None",
        "extraction": "6.666666666666667",
        "prediction": "\\frac{6}{5}",
        "true_false": false
    },
    "709": {
        "question": "What is the value of f(0)?",
        "image": "images/709.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "709",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 552,
            "img_height": 393,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of f(0)?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def f(x):\n    return 2*x + 3\n\nvalue = f(0)\nprint(value)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "710": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/710.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "710",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2293,
            "img_height": 1555,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "711": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/711.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "711",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 369,
            "img_height": 270,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "712": {
        "question": "What is the perimeter of the shape?",
        "image": "images/712.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "712",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 258,
            "img_height": 244,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the shape?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side1 = 5\nside2 = 7\nside3 = 3\nside4 = 4\n\nperimeter = side1 + side2 + side3 + side4\nprint(perimeter)",
        "execution": "19",
        "error": "None",
        "extraction": "19",
        "prediction": "19",
        "true_false": false
    },
    "713": {
        "question": "Find $x$.",
        "image": "images/713.jpg",
        "choices": [
            "3",
            "4",
            "6",
            "7"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "713",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 521,
            "img_height": 422,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $x$.\nChoices:\n(A) 3\n(B) 4\n(C) 6\n(D) 7\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\neq = sp.Eq(2*x + 1, 15)\nsol = sp.solve(eq, x)\n\nprint(sol)",
        "execution": "[7]",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "714": {
        "question": "Is the number of large brown rubber motorbikes in front of the big motorbike greater than the number of big green sedans?",
        "image": "images/714.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "714",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of large brown rubber motorbikes in front of the big motorbike greater than the number of big green sedans?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_brown_rubber_motorbikes = 5\nbig_motorbike = 3\nbig_green_sedans = 4\n\nif large_brown_rubber_motorbikes > big_green_sedans:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\n\nprint(ans)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "715": {
        "question": "Is this a periodic function?",
        "image": "images/715.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "715",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1920,
            "img_height": 1920,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this a periodic function?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 2*np.pi, 100)\ny = np.sin(x)\n\nplt.plot(x, y)\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Graph of y = sin(x)')\nplt.show()",
        "execution": "",
        "error": "None",
        "extraction": "(B) No",
        "prediction": "No",
        "true_false": true
    },
    "716": {
        "question": "Find y.",
        "image": "images/716.jpg",
        "choices": [
            "16 \\sqrt { 2 }",
            "16 \\sqrt { 3 }",
            "32",
            "16 \\sqrt { 5 }"
        ],
        "unit": null,
        "precision": null,
        "answer": "16 \\sqrt { 5 }",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "716",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 427,
            "img_height": 196,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find y.\nChoices:\n(A) 16 \\sqrt { 2 }\n(B) 16 \\sqrt { 3 }\n(C) 32\n(D) 16 \\sqrt { 5 }\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\neq = sp.Eq(4*x - 8, sp.sqrt(288))\nsol = sp.solve(eq, x)\ny = 2*sol[0]\ny",
        "execution": "",
        "error": "None",
        "extraction": "16 \\sqrt { 3 }",
        "prediction": "16 \\sqrt { 3 }",
        "true_false": false
    },
    "717": {
        "question": "Is \\int_1^{\\infty} {1\\over x^{0.99}} dx finite according to this graph ?\n",
        "image": "images/717.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "717",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 314,
            "img_height": 350,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is \\int_1^{\\infty} {1\\over x^{0.99}} dx finite according to this graph ?\n\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nintegral = sp.integrate(1/x**0.99, (x, 1, sp.oo))\n\nif sp.is_finite(integral):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "",
        "error": "expr not of form a*x**b: 0.994162299216064",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "718": {
        "question": "Jeffrey is the proud owner of an eclectic bow tie collection. He keeps track of how many bow ties he has, and organizes them by pattern and material. What is the probability that a randomly selected bow tie is designed with swirls and is made of velvet? Simplify any fractions.'",
        "image": "images/718.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.21",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "718",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 215,
            "img_height": 94,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Jeffrey is the proud owner of an eclectic bow tie collection. He keeps track of how many bow ties he has, and organizes them by pattern and material. What is the probability that a randomly selected bow tie is designed with swirls and is made of velvet? Simplify any fractions.'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_bow_ties = 100\nswirls_bow_ties = 30\nvelvet_bow_ties = 20\nswirls_and_velvet_bow_ties = 10\n\nprobability = swirls_and_velvet_bow_ties / total_bow_ties\nprint(probability)",
        "execution": "0.1",
        "error": "None",
        "extraction": "0.1",
        "prediction": "0.1",
        "true_false": false
    },
    "719": {
        "question": "Brenda graphed the daily low temperature for 5 days. What is the range of the numbers?'",
        "image": "images/719.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "719",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 225,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Brenda graphed the daily low temperature for 5 days. What is the range of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "temperatures = [32, 28, 35, 30, 33]\nrange_of_temperatures = max(temperatures) - min(temperatures)\nprint(range_of_temperatures)",
        "execution": "7",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "720": {
        "question": "When does the function value first reach 2?",
        "image": "images/720.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "720",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 362,
            "img_height": 350,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: When does the function value first reach 2?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_first_value():\n    x = 0\n    while True:\n        if function(x) == 2:\n            return x\n        x += 1\n\ndef function(x):\n    return x**2 + 1\n\nprint(find_first_value())",
        "execution": "",
        "error": "name 'function' is not defined",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "721": {
        "question": "How many odd functions are in the graph?",
        "image": "images/721.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "721",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 441,
            "img_height": 297,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many odd functions are in the graph?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef count_odd_functions(graph):\n    count = 0\n    for i in range(len(graph)):\n        if np.all(graph[i] == -graph[i]):\n            count += 1\n    return count\n\ngraph = np.array([1, -2, 3, -4, 5])\nprint(count_odd_functions(graph))",
        "execution": "",
        "error": "name 'np' is not defined",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "722": {
        "question": "Is Deep Sky Blue the high median?",
        "image": "images/722.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "722",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 677,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Deep Sky Blue the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "high_median = \"Deep Sky Blue\"\n\nif high_median == \"Deep Sky Blue\":\n    answer = \"yes\"\nelse:\n    answer = \"no\"\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "723": {
        "question": "Is the function convex?",
        "image": "images/723.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "723",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 468,
            "img_height": 277,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the function convex?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_convex(points):\n    n = len(points)\n    if n < 3:\n        return False\n\n    orientation = 0\n    for i in range(n):\n        p1 = points[i]\n        p2 = points[(i + 1) % n]\n        p3 = points[(i + 2) % n]\n\n        cross_product = (p2[0] - p1[0]) * (p3[1] - p2[1]) - (p2[1] - p1[1]) * (p3[0] - p2[0])\n\n        if cross_product == 0:\n            continue\n        elif orientation == 0:\n            orientation = cross_product\n        elif cross_product * orientation < 0:\n            return False\n\n    return True\n\npoints = [(0, 0), (1, 1), (2, 0)]\nprint(is_convex(points))",
        "execution": "True",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "724": {
        "question": "Does Rebecca Purple have the minimum area under the curve?",
        "image": "images/724.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "724",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 638,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Rebecca Purple have the minimum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 100)\ny = x**2 + 2*x + 1\n\nplt.plot(x, y)\nplt.fill_between(x, y, color='purple', alpha=0.5)\n\nmin_area = min(y)\nif min_area == y[-1]:\n    answer = \"(A) yes\"\nelse:\n    answer = \"(B) no\"\n\nprint(answer)",
        "execution": "(B) no",
        "error": "None",
        "extraction": "(A) yes",
        "prediction": "yes",
        "true_false": true
    },
    "725": {
        "question": "In Figure, suppose that Barbara's velocity relative to Alex is a constant $v_{B A}=52 \\mathrm{~km} / \\mathrm{h}$ and car $P$ is moving in the negative direction of the $x$ axis.\r\n(a) If Alex measures a constant $v_{P A}=-78 \\mathrm{~km} / \\mathrm{h}$ for car $P$, what velocity $v_{P B}$ will Barbara measure?",
        "image": "images/725.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-130",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "725",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 976,
            "img_height": 690,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In Figure, suppose that Barbara's velocity relative to Alex is a constant $v_{B A}=52 \\mathrm{~km} / \\mathrm{h}$ and car $P$ is moving in the negative direction of the $x$ axis.\r\n(a) If Alex measures a constant $v_{P A}=-78 \\mathrm{~km} / \\mathrm{h}$ for car $P$, what velocity $v_{P B}$ will Barbara measure?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "v_BA = 52\nv_PA = -78\n\nv_PB = v_PA - v_BA\nprint(v_PB)",
        "execution": "-130",
        "error": "None",
        "extraction": "-130",
        "prediction": "-130",
        "true_false": true
    },
    "726": {
        "question": "Find x. Assume that any segment that appears to be tangent is tangent.",
        "image": "images/726.jpg",
        "choices": [
            "10",
            "30",
            "90",
            "120"
        ],
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "726",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 228,
            "img_height": 199,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x. Assume that any segment that appears to be tangent is tangent.\nChoices:\n(A) 10\n(B) 30\n(C) 90\n(D) 120\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_x():\n    # Given information\n    angle_A = 60\n    angle_B = 90\n    angle_C = 90\n\n    # Using trigonometry to find x\n    x = math.tan(math.radians(angle_A)) * math.tan(math.radians(angle_B)) * math.tan(math.radians(angle_C))\n    x = round(x)\n\n    return x\n\nprint(find_x())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "120",
        "prediction": "120",
        "true_false": false
    },
    "727": {
        "question": "What is the difference between the largest and the smallest value in the chart?",
        "image": "images/727.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "70",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "727",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between the largest and the smallest value in the chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "data = [10, 5, 8, 3, 12, 7]\ndifference = max(data) - min(data)\nprint(difference)",
        "execution": "9",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "728": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/728.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "728",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 69,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "729": {
        "question": "What is the lowest accuracy reported in the whole chart?",
        "image": "images/729.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "729",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the lowest accuracy reported in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'Model A': {\n        'Accuracy': 0.85,\n        'Precision': 0.90,\n        'Recall': 0.80\n    },\n    'Model B': {\n        'Accuracy': 0.92,\n        'Precision': 0.88,\n        'Recall': 0.95\n    },\n    'Model C': {\n        'Accuracy': 0.78,\n        'Precision': 0.85,\n        'Recall': 0.82\n    }\n}\n\nlowest_accuracy = min(chart.values(), key=lambda x: x['Accuracy'])['Accuracy']\nprint(lowest_accuracy)",
        "execution": "0.78",
        "error": "None",
        "extraction": "0.78",
        "prediction": null,
        "true_false": false
    },
    "730": {
        "question": "In which year the market share of KLA is highest?",
        "image": "images/730.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2019",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "730",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In which year the market share of KLA is highest?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "market_share = {\n    2015: 0.15,\n    2016: 0.18,\n    2017: 0.22,\n    2018: 0.25,\n    2019: 0.20\n}\n\nmax_share = max(market_share.values())\nyear = [k for k, v in market_share.items() if v == max_share]\nprint(year[0])",
        "execution": "",
        "error": "name 'max_share' is not defined",
        "extraction": "2018",
        "prediction": "2018",
        "true_false": false
    },
    "731": {
        "question": "The train conductor made sure to count the number of passengers on each train. What is the smallest number of passengers? (Unit: passengers)",
        "image": "images/731.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "40",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "731",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 159,
            "img_height": 180,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The train conductor made sure to count the number of passengers on each train. What is the smallest number of passengers? (Unit: passengers)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "passenger_counts = [50, 30, 45, 20, 35]\nsmallest_number = min(passenger_counts)\nprint(smallest_number)",
        "execution": "20",
        "error": "None",
        "extraction": "20",
        "prediction": "20",
        "true_false": false
    },
    "732": {
        "question": "Which organism would be most affected if there was a shortage of plants?",
        "image": "images/732.jpg",
        "choices": [
            "Grasshopper",
            "Snake",
            "Mouse",
            "Hawk"
        ],
        "unit": null,
        "precision": null,
        "answer": "Grasshopper",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "732",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1152,
            "img_height": 1080,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which organism would be most affected if there was a shortage of plants?\nChoices:\n(A) Grasshopper\n(B) Snake\n(C) Mouse\n(D) Hawk\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_affected_organism():\n    organisms = {\n        'Grasshopper': 'plants',\n        'Snake': 'grasshoppers',\n        'Mouse': 'plants',\n        'Hawk': 'mice'\n    }\n\n    most_affected = ''\n    max_count = 0\n\n    for organism, food in organisms.items():\n        count = list(organisms.values()).count(food)\n        if count > max_count:\n            max_count = count\n            most_affected = organism\n\n    return most_affected\n\nprint(most_affected_organism())",
        "execution": "Grasshopper",
        "error": "None",
        "extraction": "Mouse",
        "prediction": "Mouse",
        "true_false": false
    },
    "733": {
        "question": "Square ABCD. CT: tangent to semicircle. Find the angle \u2220CTD. Return the numeric value.",
        "image": "images/733.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "63.4",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "733",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 972,
            "img_height": 1018,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Square ABCD. CT: tangent to semicircle. Find the angle \u2220CTD. Return the numeric value.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    radius = 1\n    diameter = 2 * radius\n    side_length = math.sqrt(2) * diameter\n\n    angle_CTD = math.degrees(math.atan(side_length / radius))\n    return angle_CTD\n\nprint(find_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "45",
        "prediction": "45.0",
        "true_false": false
    },
    "734": {
        "question": "Are there fewer double buss that are behind the aeroplane than things on the left side of the yellow double bus?",
        "image": "images/734.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "734",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer double buss that are behind the aeroplane than things on the left side of the yellow double bus?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_double_buses(caption):\n    count = 0\n    words = caption.split()\n    for i in range(len(words)-1):\n        if words[i] == \"double\" and words[i+1] == \"bus\":\n            count += 1\n    return count\n\ndef count_things_left_of_yellow_double_bus(caption):\n    count = 0\n    words = caption.split()\n    index = words.index(\"yellow\")\n    for i in range(index):\n        if words[i] != \"double\" and words[i] != \"bus\":\n            count += 1\n    return count\n\ndef compare_counts(caption):\n    double_buses = count_double_buses(caption)\n    things_left_of_yellow_double_bus = count_things_left_of_yellow_double_bus(caption)\n    if double_buses < things_left_of_yellow_double_bus:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ncaption = \"There are two double buses behind the aeroplane. On the left side of the yellow double bus, there are three things.\"\nprint(compare_counts(caption))",
        "execution": "",
        "error": "name 'count_double_buses' is not defined",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "735": {
        "question": "Is the number of big cyan things in front of the cyan rubber suv less than the number of big suvs that are behind the red bus?",
        "image": "images/735.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "735",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of big cyan things in front of the cyan rubber suv less than the number of big suvs that are behind the red bus?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(cyan_things, cyan_suv, red_bus, big_suv):\n    if cyan_things < big_suv:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ncyan_things = 5\ncyan_suv = 3\nred_bus = 2\nbig_suv = 4\n\nprint(compare_numbers(cyan_things, cyan_suv, red_bus, big_suv))",
        "execution": "No",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "736": {
        "question": "\u5982\u56fe\uff0c\u5df2\u77e5\u76f4\u7ebfa\u2225b\uff0c\u76f4\u89d2\u4e09\u89d2\u5f62ABC\u4e2d\uff0c\u2220C\uff1d90\u00b0\uff0c\u82e5\u2220B\uff1d58\u00b0\uff0c\u90a3\u4e48\u22201\ufe63\u22202\uff1d\uff08\uff09",
        "image": "images/736.jpg",
        "choices": [
            "28\u00b0",
            "30\u00b0",
            "32\u00b0",
            "58\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "32\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "736",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 226,
            "img_height": 154,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5df2\u77e5\u76f4\u7ebfa\u2225b\uff0c\u76f4\u89d2\u4e09\u89d2\u5f62ABC\u4e2d\uff0c\u2220C\uff1d90\u00b0\uff0c\u82e5\u2220B\uff1d58\u00b0\uff0c\u90a3\u4e48\u22201\ufe63\u22202\uff1d\uff08\uff09\nChoices:\n(A) 28\u00b0\n(B) 30\u00b0\n(C) 32\u00b0\n(D) 58\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef solve_angle():\n    angle_B = 58\n    angle_C = 90\n    angle_A = 180 - angle_B - angle_C\n\n    angle_1 = angle_A\n    angle_2 = 180 - angle_1\n\n    return angle_1 - angle_2\n\nprint(solve_angle())",
        "execution": "-116",
        "error": "None",
        "extraction": "-2",
        "prediction": "32\u00b0",
        "true_false": true
    },
    "737": {
        "question": "Find the perimeter of the parallelogram.",
        "image": "images/737.jpg",
        "choices": [
            "32",
            "39",
            "46",
            "78"
        ],
        "unit": null,
        "precision": null,
        "answer": "78",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "737",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 352,
            "img_height": 179,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the perimeter of the parallelogram.\nChoices:\n(A) 32\n(B) 39\n(C) 46\n(D) 78\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side1 = 10\nside2 = 13\nperimeter = 2 * (side1 + side2)\nprint(perimeter)",
        "execution": "46",
        "error": "None",
        "extraction": "23",
        "prediction": "32",
        "true_false": false
    },
    "738": {
        "question": "Is this function continuous?",
        "image": "images/738.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "738",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 383,
            "img_height": 268,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is this function continuous?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_continuous(function):\n    try:\n        x = 0\n        y = function(x)\n        x += 0.0001\n        while True:\n            new_y = function(x)\n            if abs(new_y - y) > 0.0001:\n                return False\n            y = new_y\n            x += 0.0001\n    except:\n        return False\n\n# Example usage\ndef linear_function(x):\n    return 2*x + 1\n\nprint(is_continuous(linear_function))",
        "execution": "False",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "739": {
        "question": "How much money does Hannah need to buy a baking dish and a cookie jar? (Unit: $)",
        "image": "images/739.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "23",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "739",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 201,
            "img_height": 160,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much money does Hannah need to buy a baking dish and a cookie jar? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "baking_dish_price = 4.00\ncookie_jar_price = 5.00\n\nans = baking_dish_price + cookie_jar_price\nprint(ans)",
        "execution": "9.0",
        "error": "None",
        "extraction": "9.0",
        "prediction": null,
        "true_false": false
    },
    "740": {
        "question": "What percent of the stands are full?",
        "image": "images/740.jpg",
        "choices": [
            "15",
            "100",
            "50",
            "50"
        ],
        "unit": null,
        "precision": null,
        "answer": "15",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "740",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 375,
            "source": "A-OKVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percent of the stands are full?\nChoices:\n(A) 15\n(B) 100\n(C) 50\n(D) 50\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_stands = 200\nfull_stands = 100\n\npercent_full = (full_stands / total_stands) * 100\nprint(percent_full)",
        "execution": "50.0",
        "error": "None",
        "extraction": "50",
        "prediction": "50",
        "true_false": false
    },
    "741": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/741.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "741",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1920,
            "img_height": 1080,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "742": {
        "question": "Move the ruler to measure the length of the twig to the nearest inch. The twig is about (_) inches long.",
        "image": "images/742.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "742",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 159,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the twig to the nearest inch. The twig is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "twig_length = 12.5\nnearest_inch = round(twig_length)\nprint(f\"The twig is about {nearest_inch} inches long.\")",
        "execution": "The twig is about 12 inches long.",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "743": {
        "question": "What is the different between the highest unemployment rate and the lowest?",
        "image": "images/743.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "10.53",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "743",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the different between the highest unemployment rate and the lowest?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "unemployment_rates = [5.2, 4.8, 6.1, 3.9, 5.5]\ndifference = max(unemployment_rates) - min(unemployment_rates)\nprint(difference)",
        "execution": "2.1999999999999997",
        "error": "None",
        "extraction": "1. 13\n2. 0.6\n3. 1.45\n4. [2007, 2008]\n5. B\n6. 13.0\n7. shanghai\n8. 2.2",
        "prediction": null,
        "true_false": false
    },
    "744": {
        "question": "If RL = 5, RT = 9, and WS = 6, find RW.",
        "image": "images/744.jpg",
        "choices": [
            "5.4",
            "6",
            "6.6",
            "7.5"
        ],
        "unit": null,
        "precision": null,
        "answer": "7.5",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "744",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 404,
            "img_height": 199,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If RL = 5, RT = 9, and WS = 6, find RW.\nChoices:\n(A) 5.4\n(B) 6\n(C) 6.6\n(D) 7.5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "RL = 5\nRT = 9\nWS = 6\n\nRW = (RT * WS) / RL\nprint(RW)",
        "execution": "10.8",
        "error": "None",
        "extraction": "6.0",
        "prediction": "6.6",
        "true_false": false
    },
    "745": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/745.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "745",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 4256,
            "img_height": 2832,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "746": {
        "question": "Mrs. Zimmerman hosts an annual art contest for kids, and she keeps a record of the number of entries each year. According to the table, what was the rate of change between 2013 and 2014? (Unit: entries per year)",
        "image": "images/746.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "746",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 199,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Mrs. Zimmerman hosts an annual art contest for kids, and she keeps a record of the number of entries each year. According to the table, what was the rate of change between 2013 and 2014? (Unit: entries per year)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "entries_2013 = 100\nentries_2014 = 150\n\nrate_of_change = (entries_2014 - entries_2013) / (2014 - 2013)\nprint(rate_of_change)",
        "execution": "50.0",
        "error": "None",
        "extraction": "50",
        "prediction": "50",
        "true_false": false
    },
    "747": {
        "question": "In $\\odot M$, $FL=24,HJ=48$, and $m \\widehat {HP}=65$. Find $m \\widehat {HJ}$.",
        "image": "images/747.jpg",
        "choices": [
            "65",
            "120",
            "130",
            "155"
        ],
        "unit": null,
        "precision": null,
        "answer": "130",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "747",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 507,
            "img_height": 467,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In $\\odot M$, $FL=24,HJ=48$, and $m \\widehat {HP}=65$. Find $m \\widehat {HJ}$.\nChoices:\n(A) 65\n(B) 120\n(C) 130\n(D) 155\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(FL, HJ, HP):\n    # Law of Cosines\n    angle_HJ = math.degrees(math.acos((FL**2 + HJ**2 - 2*FL*HJ*math.cos(math.radians(HP)))/(2*FL*HJ)))\n    return angle_HJ\n\nFL = 24\nHJ = 48\nHP = 65\n\nangle_HJ = find_angle(FL, HJ, HP)\nprint(angle_HJ)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "130",
        "prediction": "130",
        "true_false": true
    },
    "748": {
        "question": "As shown in the figure, PA and PB are tangents of \u2299O, the tangent point of point A and B, AC is the diameter of \u2299O, given that \u2220P = 50.0, then the size of \u2220ACB is ()",
        "image": "images/748.jpg",
        "choices": [
            "65\u00b0",
            "60\u00b0",
            "55\u00b0",
            "50\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "65\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "748",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 207,
            "img_height": 117,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, PA and PB are tangents of \u2299O, the tangent point of point A and B, AC is the diameter of \u2299O, given that \u2220P = 50.0, then the size of \u2220ACB is ()\nChoices:\n(A) 65\u00b0\n(B) 60\u00b0\n(C) 55\u00b0\n(D) 50\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_acb(angle_p):\n    angle_acb = 180 - angle_p\n    return angle_acb\n\nangle_p = 50.0\nangle_acb = angle_acb(angle_p)\nprint(angle_acb)",
        "execution": "130.0",
        "error": "None",
        "extraction": "130.0",
        "prediction": "60\u00b0",
        "true_false": false
    },
    "749": {
        "question": "As shown in the figure, in \u25b3ABC, DE \u2225 BC, if AB = 7.0, AC = 5.0, AD = 3.0, then DE = ()",
        "image": "images/749.jpg",
        "choices": [
            "\\frac{15}{4}cm",
            "\\frac{20}{3}cm",
            "\\frac{15}{7}cm",
            "\\frac{20}{7}cm"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{20}{7}cm",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "749",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 181,
            "img_height": 98,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in \u25b3ABC, DE \u2225 BC, if AB = 7.0, AC = 5.0, AD = 3.0, then DE = ()\nChoices:\n(A) \\frac{15}{4}cm\n(B) \\frac{20}{3}cm\n(C) \\frac{15}{7}cm\n(D) \\frac{20}{7}cm\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_DE(AB, AC, AD):\n    DE = (AD * AC) / AB\n    return DE\n\nAB = 7.0\nAC = 5.0\nAD = 3.0\n\nDE = find_DE(AB, AC, AD)\nprint(DE)",
        "execution": "2.142857142857143",
        "error": "None",
        "extraction": "4.285714285714286",
        "prediction": "\\frac{15}{4}cm",
        "true_false": false
    },
    "750": {
        "question": "Which number is missing?",
        "image": "images/750.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "750",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 290,
            "img_height": 356,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number is missing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [1, 2, 3, 4, 6, 7, 8, 9, 10]\n\nmissing_number = None\nfor i in range(1, 11):\n    if i not in numbers:\n        missing_number = i\n        break\n\nprint(missing_number)",
        "execution": "5",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "751": {
        "question": "What would most likely happen if Artemia was removed?",
        "image": "images/751.jpg",
        "choices": [
            "Seahorses would decrease",
            "Rotifers would decrease",
            "Mysids would decrease",
            "Algae would decrease"
        ],
        "unit": null,
        "precision": null,
        "answer": "Seahorses would decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "751",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 862,
            "img_height": 363,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would most likely happen if Artemia was removed?\nChoices:\n(A) Seahorses would decrease\n(B) Rotifers would decrease\n(C) Mysids would decrease\n(D) Algae would decrease\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def remove_artemia():\n    seahorses = 10\n    rotifers = 20\n    mysids = 30\n    algae = 40\n\n    artemia = 5\n\n    seahorses -= artemia\n    rotifers -= artemia\n    mysids -= artemia\n    algae -= artemia\n\n    if seahorses < rotifers and seahorses < mysids and seahorses < algae:\n        return \"Seahorses would decrease\"\n    elif rotifers < seahorses and rotifers < mysids and rotifers < algae:\n        return \"Rotifers would decrease\"\n    elif mysids < seahorses and mysids < rotifers and mysids < algae:\n        return \"Mysids would decrease\"\n    else:\n        return \"Algae would decrease\"\n\nprint(remove_artemia())",
        "execution": "Seahorses would decrease",
        "error": "None",
        "extraction": "Seahorses would decrease",
        "prediction": "Seahorses would decrease",
        "true_false": true
    },
    "752": {
        "question": "\u5982\u56fe\uff0cPA\u662f\u2299O\u7684\u5207\u7ebf\uff0c\u5207\u70b9\u4e3aA\uff0cOP\uff1d4\uff0c\u2220APO\uff1d30\u00b0\uff0c\u5219\u2299O\u7684\u534a\u5f84\u957f\u4e3a\uff08\uff09",
        "image": "images/752.jpg",
        "choices": [
            "1",
            "\u221a{3}",
            "2",
            "3"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "752",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 122,
            "img_height": 87,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cPA\u662f\u2299O\u7684\u5207\u7ebf\uff0c\u5207\u70b9\u4e3aA\uff0cOP\uff1d4\uff0c\u2220APO\uff1d30\u00b0\uff0c\u5219\u2299O\u7684\u534a\u5f84\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 1\n(B) \u221a{3}\n(C) 2\n(D) 3\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef radius_length(OP, angle):\n    # calculate the length of AP using trigonometry\n    AP = OP * math.tan(math.radians(angle))\n    \n    # calculate the radius length using Pythagorean theorem\n    radius = math.sqrt(OP**2 + AP**2)\n    \n    return radius\n\nOP = 4\nangle = 30\n\nprint(radius_length(OP, angle))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "753": {
        "question": "What is the value of the smallest bar?",
        "image": "images/753.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "753",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def smallest_bar(bars):\n    smallest = float('inf')\n    for bar in bars:\n        if bar < smallest:\n            smallest = bar\n    return smallest\n\nbars = [5, 3, 8, 2, 6]\nprint(smallest_bar(bars))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "754": {
        "question": "Base your answers on the diagram below, which shows a partial food web. What will happen to fish population if algae's are decreased?",
        "image": "images/754.jpg",
        "choices": [
            "Population will decrease",
            "Population will remain the same",
            "Population will increase",
            "None of the above"
        ],
        "unit": null,
        "precision": null,
        "answer": "Population will decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "754",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 464,
            "img_height": 364,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Base your answers on the diagram below, which shows a partial food web. What will happen to fish population if algae's are decreased?\nChoices:\n(A) Population will decrease\n(B) Population will remain the same\n(C) Population will increase\n(D) None of the above\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def fish_population(algae_decreased):\n    if algae_decreased:\n        return \"Population will decrease\"\n    else:\n        return \"Population will remain the same\"\n\nalgae_decreased = True\nprint(fish_population(algae_decreased))",
        "execution": "Population will decrease",
        "error": "None",
        "extraction": "Population will decrease",
        "prediction": "Population will decrease",
        "true_false": true
    },
    "755": {
        "question": "What is this function most likely be?",
        "image": "images/755.jpg",
        "choices": [
            "a polynomial",
            "a trigonometric function",
            "an exponential function",
            "a logarithmic function"
        ],
        "unit": null,
        "precision": null,
        "answer": "a polynomial",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "755",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1430,
            "img_height": 776,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is this function most likely be?\nChoices:\n(A) a polynomial\n(B) a trigonometric function\n(C) an exponential function\n(D) a logarithmic function\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef function_type(x):\n    if x < 0:\n        return \"a logarithmic function\"\n    elif x == 0:\n        return \"an exponential function\"\n    elif x > 0 and x <= math.pi/2:\n        return \"a trigonometric function\"\n    else:\n        return \"a polynomial\"\n\nx = 1.5\nprint(function_type(x))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "a trigonometric function",
        "prediction": "a trigonometric function",
        "true_false": false
    },
    "756": {
        "question": "If the trees died, the population of porcupine would most likely",
        "image": "images/756.jpg",
        "choices": [
            "double",
            "skyrocket",
            "decrease",
            "increase"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "756",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 765,
            "img_height": 591,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If the trees died, the population of porcupine would most likely\nChoices:\n(A) double\n(B) skyrocket\n(C) decrease\n(D) increase\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def porcupine_population(trees_alive):\n    if trees_alive:\n        return \"decrease\"\n    else:\n        return \"increase\"\n\ntrees_alive = False\nprint(porcupine_population(trees_alive))",
        "execution": "increase",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "757": {
        "question": "Find x to the nearest tenth. Assume that segments that appear to be tangent are tangent.",
        "image": "images/757.jpg",
        "choices": [
            "7.2",
            "8",
            "12",
            "15"
        ],
        "unit": null,
        "precision": null,
        "answer": "7.2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "757",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 220,
            "img_height": 165,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x to the nearest tenth. Assume that segments that appear to be tangent are tangent.\nChoices:\n(A) 7.2\n(B) 8\n(C) 12\n(D) 15\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_x(radius, distance):\n    x = math.sqrt(radius**2 - distance**2)\n    return round(x, 1)\n\nradius = 10\ndistance = 6\n\nprint(find_x(radius, distance))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "7.2",
        "prediction": "7.2",
        "true_false": true
    },
    "758": {
        "question": "Is the number of tiny purple trucks behind the small matte motorbike less than the number of fighters that are behind the big metal utility bike?",
        "image": "images/758.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "758",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of tiny purple trucks behind the small matte motorbike less than the number of fighters that are behind the big metal utility bike?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_trucks_and_fighters(num_purple_trucks, num_motorbike, num_fighters, num_utility_bike):\n    if num_purple_trucks < num_fighters:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_purple_trucks = 5\nnum_motorbike = 2\nnum_fighters = 8\nnum_utility_bike = 4\n\nprint(compare_trucks_and_fighters(num_purple_trucks, num_motorbike, num_fighters, num_utility_bike))",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "759": {
        "question": "Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.",
        "image": "images/759.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "759",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 201,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "nail_length = 5.75\nnearest_inch = round(nail_length)\nprint(nearest_inch)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "760": {
        "question": "Is the number of yellow tandem bikes less than the number of big objects?",
        "image": "images/760.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "760",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of yellow tandem bikes less than the number of big objects?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(num_yellow_tandem_bikes, num_big_objects):\n    if num_yellow_tandem_bikes < num_big_objects:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_yellow_tandem_bikes = 5\nnum_big_objects = 8\n\nprint(compare_numbers(num_yellow_tandem_bikes, num_big_objects))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "761": {
        "question": "What happens to the crayfish population if the Largemouth Bass and Northern Pike populations decrease?",
        "image": "images/761.jpg",
        "choices": [
            "Nothing",
            "Decrease",
            "Slightly Decrease",
            "Increase"
        ],
        "unit": null,
        "precision": null,
        "answer": "Increase",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "761",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 405,
            "img_height": 319,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What happens to the crayfish population if the Largemouth Bass and Northern Pike populations decrease?\nChoices:\n(A) Nothing\n(B) Decrease\n(C) Slightly Decrease\n(D) Increase\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "crayfish_population = 100\nlargemouth_bass_population = 50\nnorthern_pike_population = 30\n\nif largemouth_bass_population < 50 and northern_pike_population < 30:\n    crayfish_population -= 10\n\nprint(crayfish_population)",
        "execution": "100",
        "error": "None",
        "extraction": "90",
        "prediction": "Nothing",
        "true_false": false
    },
    "762": {
        "question": "What is the center of symmetry of this function?",
        "image": "images/762.jpg",
        "choices": [
            "(0, 0)",
            "(-1, 0)",
            "(2, 0)"
        ],
        "unit": null,
        "precision": null,
        "answer": "(0, 0)",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "762",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 395,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the center of symmetry of this function?\nChoices:\n(A) (0, 0)\n(B) (-1, 0)\n(C) (2, 0)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\ny = x**2 - 4*x + 3\n\nsymmetry_point = sp.solve(sp.Eq(y, y.subs(x, -x)), x)\nprint(symmetry_point)",
        "execution": "[0]",
        "error": "None",
        "extraction": "[2]",
        "prediction": "(2, 0)",
        "true_false": false
    },
    "763": {
        "question": "Subtract all tiny shiny balls. Subtract all purple objects. How many objects are left?",
        "image": "images/763.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "763",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny shiny balls. Subtract all purple objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_shiny_balls = 5\npurple_objects = 3\n\nobjects_left = tiny_shiny_balls - purple_objects\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "764": {
        "question": "What is the average number of bananas on each stock?",
        "image": "images/764.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "764",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 349,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the average number of bananas on each stock?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def average_bananas(stock):\n    total_bananas = sum(stock)\n    average = total_bananas / len(stock)\n    return average\n\nstock = [10, 15, 20, 25, 30]\nprint(average_bananas(stock))",
        "execution": "20.0",
        "error": "None",
        "extraction": "4.0",
        "prediction": null,
        "true_false": false
    },
    "765": {
        "question": "Is Chartreuse the roughest?",
        "image": "images/765.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "765",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 514,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Chartreuse the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "answer = \"no\"\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "766": {
        "question": "Are there fewer tiny red trucks than small blue bicycles?",
        "image": "images/766.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "766",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer tiny red trucks than small blue bicycles?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_red_trucks = 10\nsmall_blue_bicycles = 15\n\nif tiny_red_trucks < small_blue_bicycles:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "767": {
        "question": "What is the maximum value of y?",
        "image": "images/767.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "767",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 483,
            "img_height": 429,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the maximum value of y?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\nx = np.array([1, 2, 3, 4, 5])\ny = np.array([3, 5, 2, 7, 1])\n\nmax_y = np.max(y)\nprint(max_y)",
        "execution": "7",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": false
    },
    "768": {
        "question": "Use the graph to answer the question below. Which month is the hottest on average in Rome?",
        "image": "images/768.jpg",
        "choices": [
            "December, January, and February",
            "July and August",
            "March and April"
        ],
        "unit": null,
        "precision": null,
        "answer": "July and August",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "768",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 323,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "line plot",
            "grade": "elementary school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Use the graph to answer the question below. Which month is the hottest on average in Rome?\nChoices:\n(A) December, January, and February\n(B) July and August\n(C) March and April\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\nmonths = ['December', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November']\ntemperatures = [10, 12, 14, 16, 18, 20, 22, 24, 26, 22, 18, 14]\n\nplt.plot(months, temperatures)\nplt.xlabel('Month')\nplt.ylabel('Temperature (\u00b0C)')\nplt.title('Average Monthly Temperatures in Rome')\nplt.show()\n\nhottest_month = months[temperatures.index(max(temperatures))]\nprint(hottest_month)",
        "execution": "August",
        "error": "None",
        "extraction": "July and August",
        "prediction": "July and August",
        "true_false": true
    },
    "769": {
        "question": "The diagram below is a model of two solutions. Each blue ball represents one particle of solute. Which solution has a higher concentration of blue particles?",
        "image": "images/769.jpg",
        "choices": [
            "neither; their concentrations are the same",
            "Solution A",
            "Solution B"
        ],
        "unit": null,
        "precision": null,
        "answer": "Solution A",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "769",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 378,
            "img_height": 251,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "elementary school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The diagram below is a model of two solutions. Each blue ball represents one particle of solute. Which solution has a higher concentration of blue particles?\nChoices:\n(A) neither; their concentrations are the same\n(B) Solution A\n(C) Solution B\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def higher_concentration(solution_a, solution_b):\n    if solution_a > solution_b:\n        return \"Solution A\"\n    elif solution_b > solution_a:\n        return \"Solution B\"\n    else:\n        return \"Neither; their concentrations are the same\"\n\nsolution_a = 10\nsolution_b = 8\n\nprint(higher_concentration(solution_a, solution_b))",
        "execution": "Solution A",
        "error": "None",
        "extraction": "Solution A",
        "prediction": "Solution A",
        "true_false": true
    },
    "770": {
        "question": "What is the amplitude of this function?",
        "image": "images/770.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "770",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 482,
            "img_height": 276,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the amplitude of this function?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef amplitude(function):\n    max_value = np.max(function)\n    min_value = np.min(function)\n    amplitude = (max_value - min_value) / 2\n    return amplitude\n\nfunction = [1, 4, 2, 7, 3, 6, 5]\nprint(amplitude(function))",
        "execution": "",
        "error": "name 'np' is not defined",
        "extraction": "3.0",
        "prediction": null,
        "true_false": false
    },
    "771": {
        "question": "Base your answers on the diagram of a food chain below and on your knowledge of science. If the population of snakes increases, the population of frogs will most likely",
        "image": "images/771.jpg",
        "choices": [
            "decrease",
            "remain the same",
            "increase",
            "None"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "771",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 960,
            "img_height": 720,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Base your answers on the diagram of a food chain below and on your knowledge of science. If the population of snakes increases, the population of frogs will most likely\nChoices:\n(A) decrease\n(B) remain the same\n(C) increase\n(D) None\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def population_change(snake_population):\n    if snake_population > 0:\n        return \"decrease\"\n    else:\n        return \"remain the same\"\n\nsnake_population = 10\n\nprint(population_change(snake_population))",
        "execution": "decrease",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "772": {
        "question": "Is the number of small yellow shiny motorbikes greater than the number of red rubber fighters?",
        "image": "images/772.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "772",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of small yellow shiny motorbikes greater than the number of red rubber fighters?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_yellow_shiny_motorbikes = 10\nred_rubber_fighters = 8\n\nif small_yellow_shiny_motorbikes > red_rubber_fighters:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "773": {
        "question": "As shown in the figure, AB is the diameter of \u2299O, point D is on the extended line of AB, passing point D is the tangent of \u2299O, and the tangent point is C, if \u2220A = 25.0, then \u2220D = ()",
        "image": "images/773.jpg",
        "choices": [
            "25\u00b0",
            "40\u00b0",
            "50\u00b0",
            "65\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "40\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "773",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 163,
            "img_height": 117,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of \u2299O, point D is on the extended line of AB, passing point D is the tangent of \u2299O, and the tangent point is C, if \u2220A = 25.0, then \u2220D = ()\nChoices:\n(A) 25\u00b0\n(B) 40\u00b0\n(C) 50\u00b0\n(D) 65\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(A):\n    # Calculate angle D using the formula: D = 180 - A\n    D = 180 - A\n    return D\n\nA = 25.0\nD = find_angle(A)\nprint(D)",
        "execution": "155.0",
        "error": "None",
        "extraction": "155.0",
        "prediction": "25\u00b0",
        "true_false": false
    },
    "774": {
        "question": "Are there fewer large matte utility bikes than small yellow bicycles?",
        "image": "images/774.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "774",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer large matte utility bikes than small yellow bicycles?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_matte_utility_bikes = 10\nsmall_yellow_bicycles = 15\n\nif large_matte_utility_bikes < small_yellow_bicycles:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "775": {
        "question": "Is Orange Red the roughest?",
        "image": "images/775.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "775",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 724,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Orange Red the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_roughest(color):\n    rough_colors = ['Orange Red', 'Crimson', 'Firebrick', 'Dark Red']\n    if color in rough_colors:\n        return \"yes\"\n    else:\n        return \"no\"\n\nprint(is_roughest(\"Orange Red\"))",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "776": {
        "question": "Find $JQ$ if $Q$ is the incenter of $\\triangle JLN$.  Rounded to the nearest hundredth.",
        "image": "images/776.jpg",
        "choices": [
            "16.50",
            "18.79",
            "20.32",
            "25.50"
        ],
        "unit": null,
        "precision": null,
        "answer": "18.79",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "776",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 589,
            "img_height": 424,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $JQ$ if $Q$ is the incenter of $\\triangle JLN$.  Rounded to the nearest hundredth.\nChoices:\n(A) 16.50\n(B) 18.79\n(C) 20.32\n(D) 25.50\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_JQ(JL, LN):\n    s = (JL + LN + JL) / 2\n    area = math.sqrt(s * (s - JL) * (s - LN) * (s - JL))\n    JQ = (2 * area) / (JL + LN)\n    return round(JQ, 2)\n\nJL = 10\nLN = 12\n\nprint(find_JQ(JL, LN))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "18.79",
        "prediction": "18.79",
        "true_false": true
    },
    "777": {
        "question": "In rhombus LMPQ, $m \\angle Q L M=2 x^{2}-10$, $m \\angle Q P M=8 x$,  and $M P=10$ . \r\nFind the perimeter of $LMPQ$",
        "image": "images/777.jpg",
        "choices": [
            "10",
            "40",
            "70",
            "140"
        ],
        "unit": null,
        "precision": null,
        "answer": "40",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "777",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 337,
            "img_height": 177,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In rhombus LMPQ, $m \\angle Q L M=2 x^{2}-10$, $m \\angle Q P M=8 x$,  and $M P=10$ . \r\nFind the perimeter of $LMPQ$\nChoices:\n(A) 10\n(B) 40\n(C) 70\n(D) 140\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\nangle_QLM = 2*x**2 - 10\nangle_QPM = 8*x\nMP = 10\n\nperimeter = 4 * MP\nprint(perimeter)",
        "execution": "40",
        "error": "None",
        "extraction": "40",
        "prediction": "40",
        "true_false": true
    },
    "778": {
        "question": "Can you find the missing shape in this picture puzzle?",
        "image": "images/778.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D"
        ],
        "unit": null,
        "precision": null,
        "answer": "A",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "778",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 797,
            "img_height": 431,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Can you find the missing shape in this picture puzzle?\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import cv2\nimport numpy as np\n\ndef find_missing_shape(image_path):\n    # Load the image\n    image = cv2.imread(image_path)\n\n    # Convert the image to grayscale\n    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\n    # Apply a threshold to the image\n    _, thresh = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY)\n\n    # Find contours in the image\n    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n\n    # Find the missing shape\n    missing_shape = None\n    for contour in contours:\n        # Approximate the contour to a polygon\n        epsilon = 0.02 * cv2.arcLength(contour, True)\n        approx = cv2.approxPolyDP(contour, epsilon, True)\n\n        # Check the number of sides of the polygon\n        sides = len(approx)\n        if sides != 3 and sides != 4 and sides != 5:\n            missing_shape = approx\n            break\n\n    # Draw the missing shape on the image\n    if missing_shape is not None:\n        cv2.drawContours(image, [missing_shape], -1, (0, 0, 255), 2)\n\n    # Display the image\n    cv2.imshow(\"Missing Shape\", image)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n\n# Example usage\nimage_path = \"puzzle.jpg\"\nfind_missing_shape(image_path)",
        "execution": "",
        "error": "OpenCV(4.5.4) /tmp/pip-req-build-khv2fx3p/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'\n",
        "extraction": "C",
        "prediction": "C",
        "true_false": false
    },
    "779": {
        "question": "Is the cardiac silhouette less than half the diameter of the diaphragm?",
        "image": "images/779.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "779",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1023,
            "img_height": 841,
            "source": "VQA-RAD",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "medical image",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the cardiac silhouette less than half the diameter of the diaphragm?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cardiac_silhouette_diameter = 10.0\ndiaphragm_diameter = 20.0\n\nif cardiac_silhouette_diameter < (diaphragm_diameter / 2):\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "780": {
        "question": "Which number is missing?",
        "image": "images/780.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "780",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 848,
            "img_height": 209,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number is missing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [1, 2, 3, 4, 6, 7, 8, 9, 10]\n\nmissing_number = None\nfor i in range(1, 11):\n    if i not in numbers:\n        missing_number = i\n        break\n\nprint(missing_number)",
        "execution": "5",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "781": {
        "question": "In $\\triangle CDF$, $K$ is the centroid and $DK=16$. Find $CD$.",
        "image": "images/781.jpg",
        "choices": [
            "9",
            "12",
            "18",
            "18"
        ],
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "781",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 461,
            "img_height": 540,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In $\\triangle CDF$, $K$ is the centroid and $DK=16$. Find $CD$.\nChoices:\n(A) 9\n(B) 12\n(C) 18\n(D) 18\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_CD(DK):\n    CD = DK * 3\n    return CD\n\nDK = 16\nCD = find_CD(DK)\nprint(CD)",
        "execution": "48",
        "error": "None",
        "extraction": "48",
        "prediction": "18",
        "true_false": true
    },
    "782": {
        "question": "Which number is missing?",
        "image": "images/782.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "782",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 384,
            "img_height": 376,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number is missing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [1, 2, 3, 5, 6, 7, 8, 9, 10]\n\nmissing_number = None\nfor i in range(1, 11):\n    if i not in numbers:\n        missing_number = i\n        break\n\nprint(missing_number)",
        "execution": "4",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "783": {
        "question": "In order to measure the width of parallel river AB, \u2220ACB = 30.0, \u2220ADB = 60.0, CD = 60.0, then the width of the river AB is ()",
        "image": "images/783.jpg",
        "choices": [
            "30m",
            "30\u221a{3}m",
            "(30\u221a{3}+30)m",
            "(30\u221a{3}-30)m"
        ],
        "unit": null,
        "precision": null,
        "answer": "30\u221a{3}m",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "783",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 130,
            "img_height": 87,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In order to measure the width of parallel river AB, \u2220ACB = 30.0, \u2220ADB = 60.0, CD = 60.0, then the width of the river AB is ()\nChoices:\n(A) 30m\n(B) 30\u221a{3}m\n(C) (30\u221a{3}+30)m\n(D) (30\u221a{3}-30)m\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef calculate_width(angle_acb, angle_adb, cd):\n    angle_acb_rad = math.radians(angle_acb)\n    angle_adb_rad = math.radians(angle_adb)\n    \n    width_ab = cd * math.tan(angle_acb_rad) / (math.tan(angle_acb_rad) + math.tan(angle_adb_rad))\n    \n    return width_ab\n\nangle_acb = 30.0\nangle_adb = 60.0\ncd = 60.0\n\nwidth_ab = calculate_width(angle_acb, angle_adb, cd)\nprint(width_ab)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "30.0",
        "prediction": "30m",
        "true_false": false
    },
    "784": {
        "question": "Across all years, what is the maximum rating of statistical capacity in Maldives ?",
        "image": "images/784.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "70",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "784",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 938,
            "img_height": 700,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Across all years, what is the maximum rating of statistical capacity in Maldives ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Read the data from the csv file\ndata = pd.read_csv('data.csv')\n\n# Filter the data for Maldives\nmaldives_data = data[data['Country'] == 'Maldives']\n\n# Find the maximum rating of statistical capacity\nmax_rating = maldives_data['Rating of Statistical Capacity'].max()\n\nprint(max_rating)",
        "execution": "",
        "error": "[Errno 2] No such file or directory: 'data.csv'",
        "extraction": "4.0",
        "prediction": null,
        "true_false": false
    },
    "785": {
        "question": "Part of an ecosystem is shown in this diagram. Imagine the algae and floating plants are prevented from growing. How will that most likely affect this ecosystem?",
        "image": "images/785.jpg",
        "choices": [
            "The number of ducks will increase",
            "The number of minnows will increase",
            "There will be no effect on this ecosystem",
            "The number of aquatic crustaceans will decrease"
        ],
        "unit": null,
        "precision": null,
        "answer": "The number of aquatic crustaceans will decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "785",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 456,
            "img_height": 258,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Part of an ecosystem is shown in this diagram. Imagine the algae and floating plants are prevented from growing. How will that most likely affect this ecosystem?\nChoices:\n(A) The number of ducks will increase\n(B) The number of minnows will increase\n(C) There will be no effect on this ecosystem\n(D) The number of aquatic crustaceans will decrease\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def ecosystem_effect(algae, floating_plants):\n    if not algae and not floating_plants:\n        return \"The number of aquatic crustaceans will decrease\"\n    else:\n        return \"There will be no effect on this ecosystem\"\n\nalgae = False\nfloating_plants = False\n\nprint(ecosystem_effect(algae, floating_plants))",
        "execution": "The number of aquatic crustaceans will decrease",
        "error": "None",
        "extraction": "The number of aquatic crustaceans will decrease",
        "prediction": "The number of aquatic crustaceans will decrease",
        "true_false": true
    },
    "786": {
        "question": "Find $m \\angle K$",
        "image": "images/786.jpg",
        "choices": [
            "6",
            "60",
            "100",
            "180"
        ],
        "unit": null,
        "precision": null,
        "answer": "100",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "786",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 317,
            "img_height": 237,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $m \\angle K$\nChoices:\n(A) 6\n(B) 60\n(C) 100\n(D) 180\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(side1, side2, side3):\n    angle = math.degrees(math.acos((side1**2 + side2**2 - side3**2) / (2 * side1 * side2)))\n    return angle\n\nside1 = 5\nside2 = 5\nside3 = 5\n\nangle_K = find_angle(side1, side2, side3)\nprint(angle_K)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "60",
        "prediction": "60",
        "true_false": false
    },
    "787": {
        "question": "What percentage of the zebra's stripes are horizontal?",
        "image": "images/787.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "50",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "787",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 427,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percentage of the zebra's stripes are horizontal?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def calculate_horizontal_percentage(total_stripes, horizontal_stripes):\n    percentage = (horizontal_stripes / total_stripes) * 100\n    return percentage\n\ntotal_stripes = 50\nhorizontal_stripes = 30\n\npercentage = calculate_horizontal_percentage(total_stripes, horizontal_stripes)\nprint(percentage)",
        "execution": "60.0",
        "error": "None",
        "extraction": "60.0",
        "prediction": null,
        "true_false": false
    },
    "788": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/788.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "788",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 515,
            "img_height": 332,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "789": {
        "question": "What is the sum of the values of posse and mortar?",
        "image": "images/789.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "789",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the values of posse and mortar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "posse = 10\nmortar = 5\n\nsum_values = posse + mortar\nprint(sum_values)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15",
        "true_false": false
    },
    "790": {
        "question": "\u5982\u56fe\uff0c\u25b3ABC\u4e2d\uff0cN\u662fBC\u8fb9\u4e0a\u7684\u4e2d\u70b9\uff0cAM\u5e73\u5206\u2220BAC\uff0cBM\u22a5AM\u4e8e\u70b9M\uff0c\u82e5AB\uff1d8\uff0cMN\uff1d2\uff0e\u5219AC\u7684\u957f\u4e3a\uff08\uff09",
        "image": "images/790.jpg",
        "choices": [
            "10",
            "11",
            "12",
            "13"
        ],
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "790",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 145,
            "img_height": 105,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u25b3ABC\u4e2d\uff0cN\u662fBC\u8fb9\u4e0a\u7684\u4e2d\u70b9\uff0cAM\u5e73\u5206\u2220BAC\uff0cBM\u22a5AM\u4e8e\u70b9M\uff0c\u82e5AB\uff1d8\uff0cMN\uff1d2\uff0e\u5219AC\u7684\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 10\n(B) 11\n(C) 12\n(D) 13\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nAB = 8\nMN = 2\n\n# Calculate the length of BM using Pythagorean theorem\nBM = math.sqrt(AB**2 - MN**2)\n\n# Calculate the length of AC using the property of midpoints\nAC = 2 * BM\n\nAC",
        "execution": "",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": true
    },
    "791": {
        "question": "Given $V_s$ = 5V, $R_1$ = 1k\u03a9, $R_2$ = 2.2k\u03a9, $R_3$ = 2.2k\u03a9, $R_4$ = 1.5k\u03a9, and $R_L$ = 4.7k\u03a9. Determine the voltage and current across $R_L$. Answer in unit of V (3 sig.fig.).",
        "image": "images/791.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "1.06",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "791",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 444,
            "img_height": 400,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "algebraic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Given $V_s$ = 5V, $R_1$ = 1k\u03a9, $R_2$ = 2.2k\u03a9, $R_3$ = 2.2k\u03a9, $R_4$ = 1.5k\u03a9, and $R_L$ = 4.7k\u03a9. Determine the voltage and current across $R_L$. Answer in unit of V (3 sig.fig.).\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "Vs = 5\nR1 = 1000\nR2 = 2200\nR3 = 2200\nR4 = 1500\nRL = 4700\n\n# Calculate the total resistance\nRT = R1 + R2 + R3 + R4 + RL\n\n# Calculate the current flowing through the circuit\nI = Vs / RT\n\n# Calculate the voltage across RL\nVL = I * RL\n\nprint(round(VL, 3))",
        "execution": "2.026",
        "error": "None",
        "extraction": "4.255",
        "prediction": "4.25",
        "true_false": false
    },
    "792": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/792.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "792",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 3936,
            "img_height": 2624,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "793": {
        "question": "What is the highest Elo score for the agent using an offline RL algorithm?",
        "image": "images/793.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1578",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "793",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1922,
            "img_height": 1056,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest Elo score for the agent using an offline RL algorithm?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "elo_scores = [2400, 2500, 2600, 2700, 2800]\nhighest_elo_score = max(elo_scores)\nprint(highest_elo_score)",
        "execution": "2800",
        "error": "None",
        "extraction": "2800",
        "prediction": "2800",
        "true_false": false
    },
    "794": {
        "question": "How many bars have values larger than 4?",
        "image": "images/794.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "794",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many bars have values larger than 4?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bars = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ncount = 0\n\nfor bar in bars:\n    if bar > 4:\n        count += 1\n\nprint(count)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "795": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/795.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "75",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "795",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 475,
            "img_height": 601,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "796": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/796.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "796",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2516,
            "img_height": 1938,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "797": {
        "question": "What is the missing pattern in the picture?",
        "image": "images/797.jpg",
        "choices": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "797",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 386,
            "img_height": 291,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the missing pattern in the picture?\nChoices:\n(A) 1\n(B) 2\n(C) 3\n(D) 4\n(E) 5\n(F) 6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\ndef missing_pattern(image):\n    patterns = {\n        1: [[1, 1, 1], [1, 0, 1], [1, 1, 1]],\n        2: [[0, 1, 0], [1, 0, 1], [0, 1, 0]],\n        3: [[1, 0, 1], [0, 1, 0], [1, 0, 1]],\n        4: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n        5: [[1, 1, 0], [1, 0, 1], [0, 1, 1]],\n        6: [[0, 1, 1], [1, 0, 0], [1, 0, 1]]\n    }\n\n    image_array = np.array(image)\n    for pattern, matrix in patterns.items():\n        if np.array_equal(image_array, matrix):\n            return pattern\n    return \"\"\n\nimage = [[1, 1, 1], [1, 0, 1], [1, 1, 1]]\nprint(missing_pattern(image))",
        "execution": "",
        "error": "name 'np' is not defined",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "798": {
        "question": "In the figure above, l || m. Which of the following must equal 180?",
        "image": "images/798.jpg",
        "choices": [
            "k + n + r",
            "k + p + s",
            "n + p + s",
            "n + p + t",
            "r + s + t"
        ],
        "unit": null,
        "precision": null,
        "answer": "k + p + s",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "798",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 371,
            "img_height": 372,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure above, l || m. Which of the following must equal 180?\nChoices:\n(A) k + n + r\n(B) k + p + s\n(C) n + p + s\n(D) n + p + t\n(E) r + s + t\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_sum_equal_180(l, m):\n    angles = {\n        'k': 90,\n        'n': 90,\n        'r': 90,\n        'p': 90,\n        's': 90,\n        't': 90\n    }\n\n    if l == m:\n        angles['k'] = 180 - angles['k']\n        angles['n'] = 180 - angles['n']\n        angles['r'] = 180 - angles['r']\n    else:\n        angles['p'] = 180 - angles['p']\n        angles['s'] = 180 - angles['s']\n        angles['t'] = 180 - angles['t']\n\n    for key, value in angles.items():\n        if value == 180:\n            return key\n\n    return \"\"\n\nl = True\nm = True\n\nprint(find_sum_equal_180(l, m))",
        "execution": "",
        "error": "None",
        "extraction": "A",
        "prediction": "k + n + r",
        "true_false": false
    },
    "799": {
        "question": "How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)",
        "image": "images/799.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "13",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "799",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 229,
            "img_height": 128,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\ntotal_cost = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(\"Ruth needs $\" + str(total_cost) + \" to buy a baking dish, a casserole dish, and an ice cream scoop.\")",
        "execution": "Ruth needs $13.0 to buy a baking dish, a casserole dish, and an ice cream scoop.",
        "error": "None",
        "extraction": "13.0",
        "prediction": null,
        "true_false": false
    },
    "800": {
        "question": "Does Medium Orchid intersect Forest Green?",
        "image": "images/800.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "800",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 596,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Medium Orchid intersect Forest Green?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "medium_orchid = (186, 85, 211)\nforest_green = (34, 139, 34)\n\nif medium_orchid == forest_green:\n    ans = \"yes\"\nelse:\n    ans = \"no\"\n\nprint(ans)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": true
    },
    "801": {
        "question": "A gymnast jotted down the number of cartwheels she did each day. What is the mode of the numbers?'",
        "image": "images/801.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "801",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 272,
            "img_height": 280,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A gymnast jotted down the number of cartwheels she did each day. What is the mode of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_mode(numbers):\n    count_dict = {}\n    for num in numbers:\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    \n    max_count = max(count_dict.values())\n    mode = [num for num, count in count_dict.items() if count == max_count]\n    \n    return mode\n\nnumbers = [2, 3, 4, 2, 5, 4, 2, 3, 4, 5, 5]\nmode = find_mode(numbers)\nprint(mode)",
        "execution": "[2, 4, 5]",
        "error": "None",
        "extraction": "[2, 4, 5]",
        "prediction": null,
        "true_false": false
    },
    "802": {
        "question": "Karen bought 4 pounds of silk scraps and 4 pounds of canvas scraps. How much did she spend? (Unit: $)",
        "image": "images/802.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "69",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "802",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 243,
            "img_height": 194,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Karen bought 4 pounds of silk scraps and 4 pounds of canvas scraps. How much did she spend? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "silk_scraps_price_per_pound = 5.00\ncanvas_scraps_price_per_pound = 3.00\n\ntotal_spent = (silk_scraps_price_per_pound * 4) + (canvas_scraps_price_per_pound * 4)\nprint(total_spent)",
        "execution": "32.0",
        "error": "None",
        "extraction": "32.0",
        "prediction": null,
        "true_false": false
    },
    "803": {
        "question": "What is the value of the smallest individual bar in the whole chart?",
        "image": "images/803.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "803",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'bar1': 10,\n    'bar2': 5,\n    'bar3': 8,\n    'bar4': 3,\n    'bar5': 6\n}\n\nsmallest_bar = min(chart.values())\nprint(smallest_bar)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "804": {
        "question": "In $\\odot B$, $CE=13.5$. Find $BD$. Round to the nearest hundredth.",
        "image": "images/804.jpg",
        "choices": [
            "3.71",
            "4.29",
            "4.53",
            "6.75"
        ],
        "unit": null,
        "precision": null,
        "answer": "4.29",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "804",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 493,
            "img_height": 524,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In $\\odot B$, $CE=13.5$. Find $BD$. Round to the nearest hundredth.\nChoices:\n(A) 3.71\n(B) 4.29\n(C) 4.53\n(D) 6.75\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_BD(CE):\n    radius = CE / 2\n    angle = math.radians(60)\n    BD = radius * math.sin(angle)\n    return round(BD, 2)\n\nCE = 13.5\nBD = find_BD(CE)\nprint(BD)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "4.29",
        "prediction": "4.29",
        "true_false": true
    },
    "805": {
        "question": "Is the donut more than half eaten?",
        "image": "images/805.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "805",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 434,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the donut more than half eaten?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "donut_eaten_percentage = 60\n\nif donut_eaten_percentage > 50:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "806": {
        "question": "As shown in the figure, AB is the diameter of \u2299O, and point C is on \u2299O. If \u2220A = 40.0, then the degree of \u2220B is ()",
        "image": "images/806.jpg",
        "choices": [
            "80\u00b0",
            "60\u00b0",
            "50\u00b0",
            "40\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "50\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "806",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 127,
            "img_height": 107,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, AB is the diameter of \u2299O, and point C is on \u2299O. If \u2220A = 40.0, then the degree of \u2220B is ()\nChoices:\n(A) 80\u00b0\n(B) 60\u00b0\n(C) 50\u00b0\n(D) 40\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_A):\n    angle_B = 180 - angle_A\n    return angle_B\n\nangle_A = 40.0\nangle_B = find_angle(angle_A)\nprint(angle_B)",
        "execution": "140.0",
        "error": "None",
        "extraction": "40\u00b0",
        "prediction": "40\u00b0",
        "true_false": false
    },
    "807": {
        "question": "Which of the following leaf shapes would have the least amount of wind resistance and water loss?",
        "image": "images/807.jpg",
        "choices": [
            "Truncate",
            "Acuminate",
            "Rounded",
            "Sagittate"
        ],
        "unit": null,
        "precision": null,
        "answer": "Acuminate",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "807",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 508,
            "img_height": 300,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which of the following leaf shapes would have the least amount of wind resistance and water loss?\nChoices:\n(A) Truncate\n(B) Acuminate\n(C) Rounded\n(D) Sagittate\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def least_resistance_leaf(choices):\n    leaf_resistance = {\n        'Truncate': 3,\n        'Acuminate': 5,\n        'Rounded': 2,\n        'Sagittate': 4\n    }\n\n    min_resistance = float('inf')\n    min_leaf = \"\"\n\n    for choice in choices:\n        if leaf_resistance[choice] < min_resistance:\n            min_resistance = leaf_resistance[choice]\n            min_leaf = choice\n\n    return min_leaf\n\nchoices = ['Truncate', 'Acuminate', 'Rounded', 'Sagittate']\nprint(least_resistance_leaf(choices))",
        "execution": "Rounded",
        "error": "None",
        "extraction": "Rounded",
        "prediction": "Rounded",
        "true_false": false
    },
    "808": {
        "question": "Subtract all large purple spheres. Subtract all small gray things. How many objects are left?",
        "image": "images/808.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "808",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large purple spheres. Subtract all small gray things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_purple_spheres = 5\nsmall_gray_things = 3\n\nobjects_left = large_purple_spheres - small_gray_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "809": {
        "question": "In a group of horses, some individuals have a black coat and others have a reddish-brown coat. In this group, the gene for the coat color trait has two alleles. The allele for a black coat (L) is dominant over the allele for a reddish-brown coat (l).\nThis Punnett square shows a cross between two horses. What is the expected ratio of offspring with a reddish-brown coat to offspring with a black coat? Choose the most likely ratio.",
        "image": "images/809.jpg",
        "choices": [
            "1:3",
            "4:0",
            "3:1",
            "0:4",
            "2:2"
        ],
        "unit": null,
        "precision": null,
        "answer": "2:2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "809",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 233,
            "img_height": 241,
            "source": "ScienceQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In a group of horses, some individuals have a black coat and others have a reddish-brown coat. In this group, the gene for the coat color trait has two alleles. The allele for a black coat (L) is dominant over the allele for a reddish-brown coat (l).\nThis Punnett square shows a cross between two horses. What is the expected ratio of offspring with a reddish-brown coat to offspring with a black coat? Choose the most likely ratio.\nChoices:\n(A) 1:3\n(B) 4:0\n(C) 3:1\n(D) 0:4\n(E) 2:2\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def punnett_square_ratio():\n    black_coat = ['L', 'L']\n    reddish_brown_coat = ['l', 'l']\n\n    offspring = []\n    for i in black_coat:\n        for j in reddish_brown_coat:\n            offspring.append(i + j)\n\n    black_count = 0\n    reddish_brown_count = 0\n    for o in offspring:\n        if 'l' in o:\n            reddish_brown_count += 1\n        else:\n            black_count += 1\n\n    return f\"{reddish_brown_count}:{black_count}\"\n\nprint(punnett_square_ratio())",
        "execution": "4:0",
        "error": "None",
        "extraction": "3:1",
        "prediction": "3:1",
        "true_false": false
    },
    "810": {
        "question": "Subtract all yellow metallic balls. Subtract all small yellow shiny things. How many objects are left?",
        "image": "images/810.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "810",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all yellow metallic balls. Subtract all small yellow shiny things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_metallic_balls = 5\nsmall_yellow_shiny_things = 3\n\nobjects_left = yellow_metallic_balls - small_yellow_shiny_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "811": {
        "question": "A machine at the candy factory dispensed different numbers of lemon-flavored candies into various bags. What is the smallest number of lemon-flavored candies? (Unit: lemon-flavored candies)",
        "image": "images/811.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "34",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "811",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 247,
            "img_height": 136,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A machine at the candy factory dispensed different numbers of lemon-flavored candies into various bags. What is the smallest number of lemon-flavored candies? (Unit: lemon-flavored candies)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "candies_in_bags = [10, 5, 8, 12, 6]\nsmallest_number = min(candies_in_bags)\nprint(smallest_number)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "812": {
        "question": "Does the gray bar always have smaller value?",
        "image": "images/812.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "812",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 840,
            "img_height": 1286,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does the gray bar always have smaller value?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def gray_bar_smaller(gray_bar_values):\n    for i in range(len(gray_bar_values)-1):\n        if gray_bar_values[i] >= gray_bar_values[i+1]:\n            return False\n    return True\n\ngray_bar_values = [1, 2, 3, 4, 5]\nprint(gray_bar_smaller(gray_bar_values))",
        "execution": "True",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "813": {
        "question": "What is the highest value on the X axis?",
        "image": "images/813.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "30",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "813",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1768,
            "img_height": 2264,
            "source": "DocVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "document image",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest value on the X axis?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x_values = [10, 15, 20, 25, 30]\nhighest_value = max(x_values)\nprint(highest_value)",
        "execution": "30",
        "error": "None",
        "extraction": "30",
        "prediction": "30",
        "true_false": true
    },
    "814": {
        "question": "What is the value of the largest individual bar in the whole chart?",
        "image": "images/814.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "100000000",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "814",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the largest individual bar in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_bar(chart):\n    max_value = 0\n    for bar in chart:\n        if bar > max_value:\n            max_value = bar\n    return max_value\n\nchart = [5, 8, 3, 10, 6]\nprint(largest_bar(chart))",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "815": {
        "question": "Find $m \\angle N C L$",
        "image": "images/815.jpg",
        "choices": [
            "60",
            "120",
            "240",
            "360"
        ],
        "unit": null,
        "precision": null,
        "answer": "120",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "815",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 367,
            "img_height": 279,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $m \\angle N C L$\nChoices:\n(A) 60\n(B) 120\n(C) 240\n(D) 360\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(m, n, c, l):\n    # Calculate the coordinates of the points\n    x_m, y_m = m\n    x_n, y_n = n\n    x_c, y_c = c\n    x_l, y_l = l\n    \n    # Calculate the vectors\n    vector_mc = (x_c - x_m, y_c - y_m)\n    vector_nl = (x_l - x_n, y_l - y_n)\n    \n    # Calculate the dot product\n    dot_product = vector_mc[0] * vector_nl[0] + vector_mc[1] * vector_nl[1]\n    \n    # Calculate the magnitudes of the vectors\n    magnitude_mc = math.sqrt(vector_mc[0]**2 + vector_mc[1]**2)\n    magnitude_nl = math.sqrt(vector_nl[0]**2 + vector_nl[1]**2)\n    \n    # Calculate the cosine of the angle\n    cosine_angle = dot_product / (magnitude_mc * magnitude_nl)\n    \n    # Calculate the angle in degrees\n    angle = math.degrees(math.acos(cosine_angle))\n    \n    return angle\n\nm = (0, 0)\nn = (1, 0)\nc = (1, math.sqrt(3))\nl = (0, math.sqrt(3))\n\nangle = find_angle(m, n, c, l)\nprint(angle)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "60",
        "prediction": "60",
        "true_false": false
    },
    "816": {
        "question": "Find x. Round to the nearest tenth, if necessary.",
        "image": "images/816.jpg",
        "choices": [
            "3",
            "9",
            "12.25",
            "24"
        ],
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "816",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 379,
            "img_height": 272,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x. Round to the nearest tenth, if necessary.\nChoices:\n(A) 3\n(B) 9\n(C) 12.25\n(D) 24\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nx = math.sqrt(150)\nx = round(x, 1)\nprint(x)",
        "execution": "12.2",
        "error": "None",
        "extraction": "12.2",
        "prediction": "12.25",
        "true_false": false
    },
    "817": {
        "question": "As shown in the figure, the straight line a \u2225 b, the point B is on the straight line b, and AB \u22a5 BC, \u22202 = 65.0, then the degree of \u22201 is ()",
        "image": "images/817.jpg",
        "choices": [
            "65\u00b0",
            "25\u00b0",
            "35\u00b0",
            "45\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "25\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "817",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 171,
            "img_height": 94,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, the straight line a \u2225 b, the point B is on the straight line b, and AB \u22a5 BC, \u22202 = 65.0, then the degree of \u22201 is ()\nChoices:\n(A) 65\u00b0\n(B) 25\u00b0\n(C) 35\u00b0\n(D) 45\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle2):\n    angle1 = 180 - angle2\n    return angle1\n\nangle2 = 65.0\nangle1 = find_angle(angle2)\nprint(angle1)",
        "execution": "115.0",
        "error": "None",
        "extraction": "115.0",
        "prediction": "65\u00b0",
        "true_false": false
    },
    "818": {
        "question": "What's the ratio of least value of light brown graph and leftmost value of dark brown graph?",
        "image": "images/818.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.32",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "818",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 310,
            "img_height": 434,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What's the ratio of least value of light brown graph and leftmost value of dark brown graph?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "light_brown_graph = [2, 4, 6, 8, 10]\ndark_brown_graph = [5, 10, 15, 20, 25]\n\nratio = min(light_brown_graph) / dark_brown_graph[0]\nprint(ratio)",
        "execution": "0.4",
        "error": "None",
        "extraction": "0.4",
        "prediction": "0.4",
        "true_false": false
    },
    "819": {
        "question": "Find the value of $t$ in the parallelogram.",
        "image": "images/819.jpg",
        "choices": [
            "6",
            "7",
            "8",
            "13"
        ],
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "819",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 428,
            "img_height": 400,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the value of $t$ in the parallelogram.\nChoices:\n(A) 6\n(B) 7\n(C) 8\n(D) 13\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_t(parallelogram):\n    for i in range(1, 10):\n        if parallelogram[0] + parallelogram[1] + parallelogram[2] + parallelogram[3] == i * 4:\n            return i\n    return 0\n\nparallelogram = [2, 3, 4, 5]\nprint(find_t(parallelogram))",
        "execution": "0",
        "error": "None",
        "extraction": "7",
        "prediction": "7",
        "true_false": true
    },
    "820": {
        "question": "$a=14, b=48,$ and $c=50$ find $cosA$",
        "image": "images/820.jpg",
        "choices": [
            "0.14",
            "0.48",
            "0.50",
            "0.96"
        ],
        "unit": null,
        "precision": null,
        "answer": "0.96",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "820",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 238,
            "img_height": 160,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: $a=14, b=48,$ and $c=50$ find $cosA$\nChoices:\n(A) 0.14\n(B) 0.48\n(C) 0.50\n(D) 0.96\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\na = 14\nb = 48\nc = 50\n\ncosA = (b**2 + c**2 - a**2) / (2 * b * c)\ncosA = round(cosA, 2)\n\nprint(cosA)",
        "execution": "0.96",
        "error": "None",
        "extraction": "0.96",
        "prediction": "0.96",
        "true_false": true
    },
    "821": {
        "question": "Are most of the people young men?",
        "image": "images/821.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "821",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 360,
            "img_height": 500,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are most of the people young men?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def are_most_people_young_men(data):\n    young_men_count = 0\n    total_count = 0\n\n    for person in data:\n        if person['age'] < 30 and person['gender'] == 'male':\n            young_men_count += 1\n        total_count += 1\n\n    if young_men_count / total_count > 0.5:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ndata = [\n    {'age': 25, 'gender': 'male'},\n    {'age': 35, 'gender': 'female'},\n    {'age': 28, 'gender': 'male'},\n    {'age': 22, 'gender': 'male'},\n    {'age': 40, 'gender': 'female'}\n]\n\nprint(are_most_people_young_men(data))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "822": {
        "question": "Find the perimeter of the parallelogram. Round to the nearest tenth if necessary.",
        "image": "images/822.jpg",
        "choices": [
            "22",
            "40",
            "44",
            "48"
        ],
        "unit": null,
        "precision": null,
        "answer": "44",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "822",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 356,
            "img_height": 227,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find the perimeter of the parallelogram. Round to the nearest tenth if necessary.\nChoices:\n(A) 22\n(B) 40\n(C) 44\n(D) 48\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side1 = 8.5\nside2 = 10.2\n\nperimeter = 2 * (side1 + side2)\nrounded_perimeter = round(perimeter, 1)\n\nprint(rounded_perimeter)",
        "execution": "37.4",
        "error": "None",
        "extraction": "18.4",
        "prediction": "44",
        "true_false": true
    },
    "823": {
        "question": "You can see how organisms are interconnected from the diagram given. What will be the effect if all the Killer whales are removed?",
        "image": "images/823.jpg",
        "choices": [
            "The population of tuna will increase",
            "Mouse will decrease in number",
            "The phytoplankton will decrease",
            "The grasshopper will die"
        ],
        "unit": null,
        "precision": null,
        "answer": "The population of tuna will increase",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "823",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1152,
            "img_height": 1080,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: You can see how organisms are interconnected from the diagram given. What will be the effect if all the Killer whales are removed?\nChoices:\n(A) The population of tuna will increase\n(B) Mouse will decrease in number\n(C) The phytoplankton will decrease\n(D) The grasshopper will die\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def effect_of_removing_killer_whales():\n    organisms_interconnected = {\n        'Killer whales': ['Tuna', 'Mouse'],\n        'Tuna': ['Phytoplankton'],\n        'Mouse': ['Grasshopper'],\n        'Phytoplankton': [],\n        'Grasshopper': []\n    }\n\n    effect = []\n\n    if 'Killer whales' in organisms_interconnected:\n        prey = organisms_interconnected['Killer whales']\n        for p in prey:\n            if p == 'Tuna':\n                effect.append('The population of tuna will increase')\n            elif p == 'Mouse':\n                effect.append('Mouse will decrease in number')\n\n    return effect\n\nprint(effect_of_removing_killer_whales())",
        "execution": "['The population of tuna will increase', 'Mouse will decrease in number']",
        "error": "None",
        "extraction": "['The population of tuna will increase', 'Mouse will decrease in number']",
        "prediction": "The population of tuna will increase",
        "true_false": true
    },
    "824": {
        "question": "How much money does Luca need to buy a sour apple candy and a butterscotch candy? (Unit: $)",
        "image": "images/824.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "0.13",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "824",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 247,
            "img_height": 192,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much money does Luca need to buy a sour apple candy and a butterscotch candy? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sour_apple_candy_price = 1.50\nbutterscotch_candy_price = 0.75\n\nans = sour_apple_candy_price + butterscotch_candy_price\nprint(ans)",
        "execution": "2.25",
        "error": "None",
        "extraction": "2.25",
        "prediction": "2.25",
        "true_false": false
    },
    "825": {
        "question": "Is the number of metallic road bikes that are behind the large bus less than the number of small matte double buss?",
        "image": "images/825.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "825",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of metallic road bikes that are behind the large bus less than the number of small matte double buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_bikes_and_busses(num_metallic_road_bikes, num_small_matte_double_busses):\n    if num_metallic_road_bikes < num_small_matte_double_busses:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_metallic_road_bikes = 5\nnum_small_matte_double_busses = 8\n\nprint(compare_bikes_and_busses(num_metallic_road_bikes, num_small_matte_double_busses))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "826": {
        "question": "Which is the largest part of the lung?",
        "image": "images/826.jpg",
        "choices": [
            "Inferior lobes",
            "Cardiac notch",
            "Superior lobes",
            "Middle lobe"
        ],
        "unit": null,
        "precision": null,
        "answer": "Superior lobes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "826",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 638,
            "img_height": 479,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which is the largest part of the lung?\nChoices:\n(A) Inferior lobes\n(B) Cardiac notch\n(C) Superior lobes\n(D) Middle lobe\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_part_of_lung(choices):\n    lung_parts = {\n        'Inferior lobes': 'largest',\n        'Cardiac notch': 'smallest',\n        'Superior lobes': 'second largest',\n        'Middle lobe': 'third largest'\n    }\n\n    largest_part = ''\n    largest_size = 0\n\n    for choice in choices:\n        if lung_parts[choice] == 'largest':\n            largest_part = choice\n        elif lung_parts[choice] == 'second largest':\n            return choice\n        elif lung_parts[choice] == 'third largest':\n            return choice\n\n    return largest_part\n\nchoices = ['Inferior lobes', 'Cardiac notch', 'Superior lobes', 'Middle lobe']\nprint(largest_part_of_lung(choices))",
        "execution": "Superior lobes",
        "error": "None",
        "extraction": "Inferior lobes",
        "prediction": "Inferior lobes",
        "true_false": false
    },
    "827": {
        "question": "Choose the answer for the missing picture.",
        "image": "images/827.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D",
            "E",
            "F"
        ],
        "unit": null,
        "precision": null,
        "answer": "D",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "827",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 828,
            "img_height": 1138,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Choose the answer for the missing picture.\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\n(E) E\n(F) F\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import random\n\nchoices = ['A', 'B', 'C', 'D', 'E', 'F']\nmissing_picture = random.choice(choices)\n\nprint(missing_picture)",
        "execution": "A",
        "error": "None",
        "extraction": "A",
        "prediction": "A",
        "true_false": false
    },
    "828": {
        "question": "Linda wants to buy 0.9 pounds of double chocolate cookie dough. How much will she spend? (Unit: $)",
        "image": "images/828.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "2.7",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "828",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 357,
            "img_height": 194,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Linda wants to buy 0.9 pounds of double chocolate cookie dough. How much will she spend? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "cookie_dough_price_per_pound = 5.00\nweight = 0.9\n\ntotal_cost = cookie_dough_price_per_pound * weight\nprint(total_cost)",
        "execution": "4.5",
        "error": "None",
        "extraction": "4.5",
        "prediction": "4.5",
        "true_false": false
    },
    "829": {
        "question": "Which matchstick needs to be moved in order to create a square?",
        "image": "images/829.jpg",
        "choices": [
            "Top",
            "Bottom",
            "Left",
            "Right",
            "Not possible"
        ],
        "unit": null,
        "precision": null,
        "answer": "Left",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "829",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 378,
            "img_height": 396,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which matchstick needs to be moved in order to create a square?\nChoices:\n(A) Top\n(B) Bottom\n(C) Left\n(D) Right\n(E) Not possible\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def move_matchstick():\n    # Define the initial configuration of the matchstick\n    matchstick = [\n        [' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ']\n    ]\n\n    # Define the target configuration of the matchstick\n    target = [\n        [' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ']\n    ]\n\n    # Check if the matchstick can be moved to create a square\n    for i in range(4):\n        for j in range(4):\n            # Move the matchstick\n            matchstick[i][j] = '|'\n\n            # Check if the matchstick configuration matches the target configuration\n            if matchstick == target:\n                return f\"The matchstick at position ({i+1}, {j+1}) needs to be moved to create a square.\"\n\n            # Reset the matchstick configuration\n            matchstick[i][j] = ' '\n\n    # If no matchstick configuration matches the target configuration, return \"Not possible\"\n    return \"Not possible\"\n\nprint(move_matchstick())",
        "execution": "Not possible",
        "error": "None",
        "extraction": "Not possible",
        "prediction": "Not possible",
        "true_false": false
    },
    "830": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/830.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "830",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 870,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "831": {
        "question": "An author recorded how many words she wrote in the past 3 days. How many words in total did the author write on Thursday and Friday? (Unit: words)",
        "image": "images/831.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "679",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "831",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 236,
            "img_height": 156,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: An author recorded how many words she wrote in the past 3 days. How many words in total did the author write on Thursday and Friday? (Unit: words)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "thursday_words = 500\nfriday_words = 700\n\ntotal_words = thursday_words + friday_words\nprint(total_words)",
        "execution": "1200",
        "error": "None",
        "extraction": "1200",
        "prediction": "1200",
        "true_false": false
    },
    "832": {
        "question": "What is the value of f(0)?",
        "image": "images/832.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "-2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "832",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1920,
            "img_height": 1920,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of f(0)?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def f(x):\n    return 2*x + 3\n\nvalue = f(0)\nprint(value)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "833": {
        "question": "Phenylalanine (Phe, 5) is a naturally occurring amino acid. What is the energy of interaction between its phenyl group and the electric dipole moment of a neighbouring peptide group? Take the distance between the groups as $4.0 \\mathrm{~nm}$ and treat the phenyl group as a benzene molecule. The magnitude of the dipole moment of the peptide group is $\\mu=1.3 \\mathrm{D}$ and the polarizability volume of benzene is $\\alpha^{\\prime}=1.04 \\times 10^{-29} \\mathrm{~m}^3$.\r\n",
        "image": "images/833.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "-4.3",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "833",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 474,
            "img_height": 372,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Phenylalanine (Phe, 5) is a naturally occurring amino acid. What is the energy of interaction between its phenyl group and the electric dipole moment of a neighbouring peptide group? Take the distance between the groups as $4.0 \\mathrm{~nm}$ and treat the phenyl group as a benzene molecule. The magnitude of the dipole moment of the peptide group is $\\mu=1.3 \\mathrm{D}$ and the polarizability volume of benzene is $\\alpha^{\\prime}=1.04 \\times 10^{-29} \\mathrm{~m}^3$.\r\n\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "distance = 4.0 * 10**-9  # convert nm to m\ndipole_moment = 1.3 * 10**-30  # convert D to C.m\npolarizability_volume = 1.04 * 10**-29  # m^3\n\nenergy = (dipole_moment**2) / (4 * 3.14 * 8.85 * 10**-12 * distance**3) * polarizability_volume\nprint(energy)",
        "execution": "2.4706268667458347e-54",
        "error": "None",
        "extraction": "-1.4e-19",
        "prediction": "-0.0",
        "true_false": false
    },
    "834": {
        "question": "Among the states that border Georgia , does Florida have the lowest value ?",
        "image": "images/834.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "834",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 785,
            "img_height": 610,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Among the states that border Georgia , does Florida have the lowest value ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bordering_states = {\n    'Georgia': ['Alabama', 'Florida', 'South Carolina', 'Tennessee']\n}\n\nstate_values = {\n    'Alabama': 10,\n    'Florida': 5,\n    'South Carolina': 8,\n    'Tennessee': 7\n}\n\nflorida_value = state_values['Florida']\n\nlowest_value = min(state_values.values())\n\nif florida_value == lowest_value:\n    answer = 'Yes'\nelse:\n    answer = 'No'\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "835": {
        "question": "What percent of people are wearing blue?",
        "image": "images/835.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "835",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percent of people are wearing blue?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_people = 100\nblue_people = 30\n\npercent_blue = (blue_people / total_people) * 100\nprint(percent_blue)",
        "execution": "30.0",
        "error": "None",
        "extraction": "30",
        "prediction": "30",
        "true_false": false
    },
    "836": {
        "question": "What is the smallest species shown?",
        "image": "images/836.jpg",
        "choices": [
            "chinlea",
            "arganodus",
            "semionotus",
            "xenacanthus"
        ],
        "unit": null,
        "precision": null,
        "answer": "semionotus",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "836",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1500,
            "img_height": 1076,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the smallest species shown?\nChoices:\n(A) chinlea\n(B) arganodus\n(C) semionotus\n(D) xenacanthus\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "smallest_species = 'chinlea'\nchoices = ['chinlea', 'arganodus', 'semionotus', 'xenacanthus']\n\nprint(smallest_species)",
        "execution": "chinlea",
        "error": "None",
        "extraction": "chinlea",
        "prediction": "chinlea",
        "true_false": false
    },
    "837": {
        "question": "Are there fewer tiny red motorbikes than big red choppers?",
        "image": "images/837.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "837",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there fewer tiny red motorbikes than big red choppers?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_red_motorbikes = 5\nbig_red_choppers = 8\n\nif tiny_red_motorbikes < big_red_choppers:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "838": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/838.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "838",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1600,
            "img_height": 1200,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "839": {
        "question": "How many years have value less than 10%?",
        "image": "images/839.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "839",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many years have value less than 10%?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "years = [0.05, 0.12, 0.08, 0.15, 0.09, 0.11, 0.07, 0.06, 0.13, 0.10]\ncount = 0\n\nfor year in years:\n    if year < 0.10:\n        count += 1\n\nprint(count)",
        "execution": "5",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "840": {
        "question": "From which item can you get the most protein?",
        "image": "images/840.jpg",
        "choices": [
            "salami",
            "wine",
            "cheese",
            "bread"
        ],
        "unit": null,
        "precision": null,
        "answer": "salami",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "840",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 375,
            "img_height": 500,
            "source": "A-OKVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: From which item can you get the most protein?\nChoices:\n(A) salami\n(B) wine\n(C) cheese\n(D) bread\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "protein_content = {\n    'salami': 15,\n    'wine': 0,\n    'cheese': 10,\n    'bread': 2\n}\n\nmax_protein = max(protein_content, key=protein_content.get)\nprint(max_protein)",
        "execution": "salami",
        "error": "None",
        "extraction": "salami",
        "prediction": "salami",
        "true_false": true
    },
    "841": {
        "question": "Some friends compared the sizes of their stuffed animal collections. What is the median of the numbers?'",
        "image": "images/841.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "841",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 265,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Some friends compared the sizes of their stuffed animal collections. What is the median of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [10, 15, 20, 25, 30]\nnumbers.sort()\nlength = len(numbers)\nif length % 2 == 0:\n    median = (numbers[length//2 - 1] + numbers[length//2]) / 2\nelse:\n    median = numbers[length//2]\nprint(median)",
        "execution": "20",
        "error": "None",
        "extraction": "22.5",
        "prediction": null,
        "true_false": false
    },
    "842": {
        "question": "At a certain moment, there is a passenger ship at sea point P, and lighthouse A is measured in the direction 30.0 north by east of P, and is 50.0 nautical miles away. The passenger ship sails at the speed of 60.0 nautical mile/hour in the direction of 60.0 from north by west for $\\frac{2.0}{3.0}$hours to reach point B, then tan\u2220BAP = ()",
        "image": "images/842.jpg",
        "choices": [
            "\\frac{4}{5}",
            "\\frac{6}{5}",
            "\\frac{\u221a{5}}{5}",
            "\\frac{2\u221a{5}}{5}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{4}{5}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "842",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 154,
            "img_height": 115,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: At a certain moment, there is a passenger ship at sea point P, and lighthouse A is measured in the direction 30.0 north by east of P, and is 50.0 nautical miles away. The passenger ship sails at the speed of 60.0 nautical mile/hour in the direction of 60.0 from north by west for $\\frac{2.0}{3.0}$hours to reach point B, then tan\u2220BAP = ()\nChoices:\n(A) \\frac{4}{5}\n(B) \\frac{6}{5}\n(C) \\frac{\u221a{5}}{5}\n(D) \\frac{2\u221a{5}}{5}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_tan_angle():\n    angle_A = math.radians(30.0)\n    distance_AP = 50.0\n    speed = 60.0\n    time = 2.0/3.0\n\n    distance_AB = speed * time\n    distance_BP = math.sqrt(distance_AP**2 + distance_AB**2 - 2 * distance_AP * distance_AB * math.cos(angle_A))\n\n    tan_angle_BAP = distance_AB / distance_BP\n\n    return tan_angle_BAP\n\nprint(find_tan_angle())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "4/5",
        "prediction": "\\frac{4}{5}",
        "true_false": true
    },
    "843": {
        "question": "Is Aqua greater than Red?",
        "image": "images/843.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "843",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 752,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Aqua greater than Red?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "aqua = 10\nred = 5\n\nif aqua > red:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "844": {
        "question": "Is the larger window shaped like the smaller window?",
        "image": "images/844.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "844",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the larger window shaped like the smaller window?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_window_shapes(larger_window, smaller_window):\n    if larger_window == smaller_window:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nlarger_window = \"rectangle\"\nsmaller_window = \"circle\"\n\nprint(compare_window_shapes(larger_window, smaller_window))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "845": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/845.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "845",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 550,
            "img_height": 390,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "846": {
        "question": "Is Brown the high median?",
        "image": "images/846.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "846",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 758,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Brown the high median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_high_median(median, data):\n    if median in data:\n        index = data.index(median)\n        if index == len(data) // 2:\n            return \"yes\"\n    return \"no\"\n\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nmedian = 5\n\nprint(is_high_median(median, data))",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "847": {
        "question": "Which function grows the fastest as x increases?",
        "image": "images/847.jpg",
        "choices": [
            "red",
            "purple",
            "blue"
        ],
        "unit": null,
        "precision": null,
        "answer": "red",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "847",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1706,
            "img_height": 1294,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which function grows the fastest as x increases?\nChoices:\n(A) red\n(B) purple\n(C) blue\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 10, 100)\nred = x**2\npurple = 2**x\nblue = np.exp(x)\n\nplt.plot(x, red, label='red')\nplt.plot(x, purple, label='purple')\nplt.plot(x, blue, label='blue')\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Growth Comparison')\nplt.show()",
        "execution": "",
        "error": "None",
        "extraction": "C",
        "prediction": "blue",
        "true_false": false
    },
    "848": {
        "question": "In how many years, is the tuberculosis treatment success rate in Bulgaria greater than the average tuberculosis treatment success rate in Bulgaria taken over all years ?",
        "image": "images/848.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "848",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1091,
            "img_height": 700,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the tuberculosis treatment success rate in Bulgaria greater than the average tuberculosis treatment success rate in Bulgaria taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_success_rate(success_rates):\n    avg_success_rate = sum(success_rates) / len(success_rates)\n    years = 0\n    for rate in success_rates:\n        if rate > avg_success_rate:\n            years += 1\n    return years\n\nsuccess_rates = [80, 85, 90, 75, 95]\nprint(years_greater_success_rate(success_rates))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "849": {
        "question": "The 4 8x8 images shown below are encoded with JPEG coding. Based on their expected DCT (Discrete Cosine Transform) coefficients, Which image has the most non-zero AC coefficients? (a): Image A, (b): Image B, (c): Image C, (d): Image D.",
        "image": "images/849.jpg",
        "choices": [
            "(c)",
            "(d)",
            "(a)",
            "(b)",
            "(e)"
        ],
        "unit": null,
        "precision": null,
        "answer": "(b)",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "849",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 940,
            "img_height": 282,
            "source": "TheoremQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The 4 8x8 images shown below are encoded with JPEG coding. Based on their expected DCT (Discrete Cosine Transform) coefficients, Which image has the most non-zero AC coefficients? (a): Image A, (b): Image B, (c): Image C, (d): Image D.\nChoices:\n(A) (c)\n(B) (d)\n(C) (a)\n(D) (b)\n(E) (e)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\n\n# Define the DCT coefficients for each image\nimage_a = np.array([[1, 2, 3, 4, 5, 6, 7, 8],\n                    [2, 3, 4, 5, 6, 7, 8, 9],\n                    [3, 4, 5, 6, 7, 8, 9, 10],\n                    [4, 5, 6, 7, 8, 9, 10, 11],\n                    [5, 6, 7, 8, 9, 10, 11, 12],\n                    [6, 7, 8, 9, 10, 11, 12, 13],\n                    [7, 8, 9, 10, 11, 12, 13, 14],\n                    [8, 9, 10, 11, 12, 13, 14, 15]])\n\nimage_b = np.array([[1, 0, 0, 0, 0, 0, 0, 0],\n                    [0, 2, 0, 0, 0, 0, 0, 0],\n                    [0, 0, 3, 0, 0, 0, 0, 0],\n                    [0, 0, 0, 4, 0, 0, 0, 0],\n                    [0, 0, 0, 0, 5, 0, 0, 0],\n                    [0, 0, 0, 0, 0, 6, 0, 0],\n                    [0, 0, 0, 0, 0, 0, 7, 0],\n                    [0, 0, 0, 0, 0, 0, 0, 8]])\n\nimage_c = np.array([[1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1]])\n\nimage_d = np.array([[1, 2, 3, 4, 5, 6, 7, 8],\n                    [2, 3, 4, 5, 6, 7, 8, 9],\n                    [3, 4, 5, 6, 7, 8, 9, 10],\n                    [4, 5, 6, 7, 8, 9, 10, 11],\n                    [5, 6, 7, 8, 9, 10, 11, 12],\n                    [6, 7, 8, 9, 10, 11, 12, 13],\n                    [7, 8, 9, 10, 11, 12, 13, 14],\n                    [8, 9, 10, 11, 12, 13, 14, 15]])\n\n# Calculate the number of non-zero AC coefficients for each image\nnum_nonzero_a = np.count_nonzero(image_a[1:, 1:])\nnum_nonzero_b = np.count_nonzero(image_b[1:, 1:])\nnum_nonzero_c = np.count_nonzero(image_c[1:, 1:])\nnum_nonzero_d = np.count_nonzero(image_d[1:, 1:])\n\n# Determine the image with the most non-zero AC coefficients\nif num_nonzero_a > num_nonzero_b and num_nonzero_a > num_nonzero_c and num_nonzero_a > num_nonzero_d:\n    result = \"(a)\"\nelif num_nonzero_b > num_nonzero_a and num_nonzero_b > num_nonzero_c and num_nonzero_b > num_nonzero_d:\n    result = \"(b)\"\nelif num_nonzero_c > num_nonzero_a and num_nonzero_c > num_nonzero_b and num_nonzero_c",
        "execution": "",
        "error": "invalid syntax (<string>, line 51)",
        "extraction": "(c)",
        "prediction": "(a)",
        "true_false": false
    },
    "850": {
        "question": "Is the number of cars in front of the tiny metal thing less than the number of large matte things in front of the cyan rubber road bike?",
        "image": "images/850.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "850",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of cars in front of the tiny metal thing less than the number of large matte things in front of the cyan rubber road bike?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_objects(num_cars, num_large_mattes, num_cyan_rubber_road_bikes):\n    if num_cars < num_large_mattes:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_cars = 5\nnum_large_mattes = 3\nnum_cyan_rubber_road_bikes = 2\n\nprint(compare_objects(num_cars, num_large_mattes, num_cyan_rubber_road_bikes))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "851": {
        "question": "In how many years, is the net concessional disbursements from imf greater than 32000000 US$?",
        "image": "images/851.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "851",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1139,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the net concessional disbursements from imf greater than 32000000 US$?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_than(amount):\n    net_concessional_disbursements = [25000000, 28000000, 30000000, 32000000, 34000000, 36000000]\n    years = 0\n    for disbursement in net_concessional_disbursements:\n        if disbursement > amount:\n            return years\n        years += 1\n    return years\n\namount = 32000000\nprint(years_greater_than(amount))",
        "execution": "4",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "852": {
        "question": "Which number is missing?",
        "image": "images/852.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "40",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "852",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 612,
            "img_height": 598,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number is missing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [1, 2, 3, 5, 6, 7, 8, 9, 10]\n\nmissing_number = None\nfor i in range(1, 11):\n    if i not in numbers:\n        missing_number = i\n        break\n\nprint(missing_number)",
        "execution": "4",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "853": {
        "question": "As shown in the figure, in the diamond ABCD, \u2220BAD = 120.0, the length of the diagonal AC is 3.0, then the perimeter of the diamond ABCD is ()",
        "image": "images/853.jpg",
        "choices": [
            "3",
            "6",
            "9",
            "12"
        ],
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "853",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 169,
            "img_height": 98,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in the diamond ABCD, \u2220BAD = 120.0, the length of the diagonal AC is 3.0, then the perimeter of the diamond ABCD is ()\nChoices:\n(A) 3\n(B) 6\n(C) 9\n(D) 12\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nangle_BAD = 120.0\ndiagonal_AC = 3.0\n\nside_AB = diagonal_AC / math.sqrt(3)\nperimeter = 4 * side_AB\n\nprint(perimeter)",
        "execution": "6.92820323027551",
        "error": "None",
        "extraction": "9",
        "prediction": "9",
        "true_false": false
    },
    "854": {
        "question": "If the pelicans in the community were eradicated, which population feel the most direct effect?",
        "image": "images/854.jpg",
        "choices": [
            "Plant",
            "Phyto-plankton",
            "Fish",
            "Lizard"
        ],
        "unit": null,
        "precision": null,
        "answer": "Fish",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "854",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 947,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If the pelicans in the community were eradicated, which population feel the most direct effect?\nChoices:\n(A) Plant\n(B) Phyto-plankton\n(C) Fish\n(D) Lizard\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def direct_effect(populations):\n    effects = {\n        'pelicans': ['Fish', 'Lizard'],\n        'Fish': ['Phyto-plankton'],\n        'Phyto-plankton': ['Plant']\n    }\n\n    for population in populations:\n        if population in effects:\n            return effects[population][0]\n    return \"\"\n\npopulations = ['pelicans', 'Fish', 'Phyto-plankton', 'Plant']\nprint(direct_effect(populations))",
        "execution": "Fish",
        "error": "None",
        "extraction": "Fish",
        "prediction": "Fish",
        "true_false": true
    },
    "855": {
        "question": "Find $x$ so that $a \u2225 b$.",
        "image": "images/855.jpg",
        "choices": [
            "2.5",
            "14",
            "15",
            "16"
        ],
        "unit": null,
        "precision": null,
        "answer": "14",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "855",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 536,
            "img_height": 250,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $x$ so that $a \u2225 b$.\nChoices:\n(A) 2.5\n(B) 14\n(C) 15\n(D) 16\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\na = sp.Symbol('a')\nb = sp.Symbol('b')\nx = sp.Symbol('x')\n\neq1 = sp.Eq((2*a + 3)/(4*a - 5), (3*b + 2)/(5*b - 7))\neq2 = sp.Eq(x, sp.solve(eq1, x)[0])\n\nprint(eq2)",
        "execution": "",
        "error": "list index out of range",
        "extraction": "14",
        "prediction": "14",
        "true_false": true
    },
    "856": {
        "question": "Which picture has the least leaves?",
        "image": "images/856.jpg",
        "choices": [
            "Both",
            "Compound",
            "Simple",
            "Neither"
        ],
        "unit": null,
        "precision": null,
        "answer": "Simple",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "856",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 400,
            "img_height": 300,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which picture has the least leaves?\nChoices:\n(A) Both\n(B) Compound\n(C) Simple\n(D) Neither\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def least_leaves(pictures):\n    leaves_count = {\n        'Both': 10,\n        'Compound': 5,\n        'Simple': 3,\n        'Neither': 0\n    }\n\n    least_leaves_picture = ''\n    least_leaves_count = float('inf')\n\n    for picture in pictures:\n        if leaves_count[picture] < least_leaves_count:\n            least_leaves_picture = picture\n            least_leaves_count = leaves_count[picture]\n\n    return least_leaves_picture\n\nchoices = ['Both', 'Compound', 'Simple', 'Neither']\nprint(least_leaves(choices))",
        "execution": "Neither",
        "error": "None",
        "extraction": "Simple",
        "prediction": "Simple",
        "true_false": true
    },
    "857": {
        "question": "What is the value of the largest bar?",
        "image": "images/857.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "857",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the largest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_bar(bars):\n    max_value = max(bars)\n    return max_value\n\nbars = [5, 8, 3, 10, 6]\nprint(largest_bar(bars))",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "858": {
        "question": "On the basis of the given food web, which organism will increase in number if there were no seals?",
        "image": "images/858.jpg",
        "choices": [
            "Shark",
            "Small Shrimp",
            "Octopus",
            "Mysid Shrimp"
        ],
        "unit": null,
        "precision": null,
        "answer": "Octopus",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "858",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1162,
            "img_height": 764,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: On the basis of the given food web, which organism will increase in number if there were no seals?\nChoices:\n(A) Shark\n(B) Small Shrimp\n(C) Octopus\n(D) Mysid Shrimp\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "organisms = {\n    'Seals': 10,\n    'Sharks': 5,\n    'Small Shrimp': 20,\n    'Octopus': 15,\n    'Mysid Shrimp': 25\n}\n\nif 'Seals' in organisms:\n    del organisms['Seals']\n\nmax_population = max(organisms.values())\n\nfor organism, population in organisms.items():\n    if population == max_population:\n        print(organism)",
        "execution": "Mysid Shrimp",
        "error": "None",
        "extraction": "Small Shrimp",
        "prediction": "Small Shrimp",
        "true_false": false
    },
    "859": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/859.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "27",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "859",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 750,
            "img_height": 603,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "860": {
        "question": "Miss Foley ran a sit-up competition among her P.E. students and monitored how many sit-ups each students could do. What is the largest number of sit-ups done? (Unit: sit-ups)",
        "image": "images/860.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "86",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "860",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 291,
            "img_height": 246,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Miss Foley ran a sit-up competition among her P.E. students and monitored how many sit-ups each students could do. What is the largest number of sit-ups done? (Unit: sit-ups)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sit_ups = [10, 15, 20, 25, 30]\nlargest_number = max(sit_ups)\nprint(largest_number)",
        "execution": "30",
        "error": "None",
        "extraction": "30",
        "prediction": "30",
        "true_false": false
    },
    "861": {
        "question": "Is Crimson less than Gray?",
        "image": "images/861.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "no",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "861",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 680,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Crimson less than Gray?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "crimson = 5\ngray = 10\n\nif crimson < gray:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": false
    },
    "862": {
        "question": "One of the most dramatic videos on the web (but entirely fictitious) supposedly shows a man sliding along a long water slide and then being launched into the air to land in a water pool. Let's attach some reasonable numbers to such a flight to calculate the velocity with which the man would have hit the water. Figure indicates the launch and landing sites and includes a superimposed coordinate system with its origin conveniently located at the launch site. From the video we take the horizontal flight distance as $D=20.0 \\mathrm{~m}$, the flight time as $t=2.50 \\mathrm{~s}$, and the launch angle as $\\theta_0=40.0^{\\circ}$. Find the magnitude of the velocity at launch and at landing.",
        "image": "images/862.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "10.44",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "862",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1302,
            "img_height": 600,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: One of the most dramatic videos on the web (but entirely fictitious) supposedly shows a man sliding along a long water slide and then being launched into the air to land in a water pool. Let's attach some reasonable numbers to such a flight to calculate the velocity with which the man would have hit the water. Figure indicates the launch and landing sites and includes a superimposed coordinate system with its origin conveniently located at the launch site. From the video we take the horizontal flight distance as $D=20.0 \\mathrm{~m}$, the flight time as $t=2.50 \\mathrm{~s}$, and the launch angle as $\\theta_0=40.0^{\\circ}$. Find the magnitude of the velocity at launch and at landing.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nD = 20.0\nt = 2.50\ntheta_0 = 40.0\n\n# Calculate the horizontal velocity at launch\nv_x = D / t\n\n# Calculate the vertical velocity at launch\nv_y = v_x * math.tan(math.radians(theta_0))\n\n# Calculate the magnitude of the velocity at launch\nv_launch = math.sqrt(v_x**2 + v_y**2)\n\n# Calculate the magnitude of the velocity at landing\nv_landing = v_x\n\nprint(\"Magnitude of velocity at launch:\", v_launch)\nprint(\"Magnitude of velocity at landing:\", v_landing)",
        "execution": "Magnitude of velocity at launch: 10.443258314658229\nMagnitude of velocity at landing: 8.0",
        "error": "None",
        "extraction": "Magnitude of velocity at launch: 8.0\nMagnitude of velocity at landing: 8.0",
        "prediction": null,
        "true_false": false
    },
    "863": {
        "question": "Does Rhode Island have the lowest value in the USA ?",
        "image": "images/863.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "863",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 500,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Rhode Island have the lowest value in the USA ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "rhode_island_value = 100\nlowest_value = 50\n\nif rhode_island_value == lowest_value:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "864": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/864.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "16",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "864",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2480,
            "img_height": 1738,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "865": {
        "question": "Does Hot Pink have the lowest value?",
        "image": "images/865.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "865",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 512,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Hot Pink have the lowest value?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "hot_pink_value = 5\nred_value = 7\nblue_value = 3\n\nif hot_pink_value < red_value and hot_pink_value < blue_value:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "866": {
        "question": "For trapezoid $Q R S T, A$ and $B$ are midpoints of the legs. Find $m \\angle S$",
        "image": "images/866.jpg",
        "choices": [
            "45",
            "60",
            "120",
            "135"
        ],
        "unit": null,
        "precision": null,
        "answer": "135",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "866",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 359,
            "img_height": 169,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For trapezoid $Q R S T, A$ and $B$ are midpoints of the legs. Find $m \\angle S$\nChoices:\n(A) 45\n(B) 60\n(C) 120\n(D) 135\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(Qx, Qy, Rx, Ry, Sx, Sy, Tx, Ty):\n    # Calculate the lengths of the sides\n    QR = math.sqrt((Rx - Qx)**2 + (Ry - Qy)**2)\n    ST = math.sqrt((Tx - Sx)**2 + (Ty - Sy)**2)\n    QS = math.sqrt((Sx - Qx)**2 + (Sy - Qy)**2)\n    RT = math.sqrt((Tx - Rx)**2 + (Ty - Ry)**2)\n    \n    # Calculate the angle using the law of cosines\n    cos_angle = (QR**2 + ST**2 - QS**2 - RT**2) / (2 * QR * ST)\n    angle = math.degrees(math.acos(cos_angle))\n    \n    return angle\n\nQx = 0\nQy = 0\nRx = 4\nRy = 0\nSx = 1\nSy = 2\nTx = 3\nTy = 2\n\nangle_S = find_angle(Qx, Qy, Rx, Ry, Sx, Sy, Tx, Ty)\nprint(angle_S)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "120",
        "prediction": "120",
        "true_false": false
    },
    "867": {
        "question": "A food industry researcher compiled the revenues of several pizzerias. How much did Dan's Deep Dish make from pizza sales? (Unit: $)",
        "image": "images/867.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "22",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "867",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 465,
            "img_height": 187,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A food industry researcher compiled the revenues of several pizzerias. How much did Dan's Deep Dish make from pizza sales? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dan_revenue = 5000.00\nmike_revenue = 3000.00\nsarah_revenue = 4000.00\njoe_revenue = 6000.00\n\ndan_pizza_sales = dan_revenue\nprint(dan_pizza_sales)",
        "execution": "5000.0",
        "error": "None",
        "extraction": "5000.00",
        "prediction": null,
        "true_false": false
    },
    "868": {
        "question": "Subtract all big green cylinders. Subtract all rubber cylinders. How many objects are left?",
        "image": "images/868.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "868",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big green cylinders. Subtract all rubber cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_green_cylinders = 5\nrubber_cylinders = 3\n\nobjects_left = big_green_cylinders - rubber_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "869": {
        "question": "Subtract all large yellow matte cubes. Subtract all metal things. How many objects are left?",
        "image": "images/869.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "869",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large yellow matte cubes. Subtract all metal things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_yellow_matte_cubes = 5\nmetal_things = 3\n\nobjects_left = large_yellow_matte_cubes - metal_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "870": {
        "question": "Are there more tiny motorbikes in front of the small cyan tandem bike than big cyan metal double buss?",
        "image": "images/870.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "870",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there more tiny motorbikes in front of the small cyan tandem bike than big cyan metal double buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_motorbikes_and_busses(tiny_motorbikes, small_cyan_tandem_bike, big_cyan_metal_double_buss):\n    if tiny_motorbikes > small_cyan_tandem_bike and tiny_motorbikes > big_cyan_metal_double_buss:\n        return \"Yes\"\n    else:\n        return \"No\"\n\ntiny_motorbikes = 5\nsmall_cyan_tandem_bike = 3\nbig_cyan_metal_double_buss = 4\n\nprint(compare_motorbikes_and_busses(tiny_motorbikes, small_cyan_tandem_bike, big_cyan_metal_double_buss))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "871": {
        "question": "Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.",
        "image": "images/871.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "871",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 200,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the nail to the nearest inch. The nail is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "nail_length = 5.75\nnearest_inch = round(nail_length)\nprint(nearest_inch)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "872": {
        "question": "Determine the next shape.",
        "image": "images/872.jpg",
        "choices": [
            "A",
            "B",
            "C",
            "D"
        ],
        "unit": null,
        "precision": null,
        "answer": "D",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "872",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1472,
            "img_height": 496,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Determine the next shape.\nChoices:\n(A) A\n(B) B\n(C) C\n(D) D\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def determine_next_shape(current_shape):\n    shapes = ['A', 'B', 'C', 'D']\n    current_index = shapes.index(current_shape)\n    next_index = (current_index + 1) % len(shapes)\n    return shapes[next_index]\n\ncurrent_shape = 'A'\nprint(determine_next_shape(current_shape))",
        "execution": "B",
        "error": "None",
        "extraction": "B",
        "prediction": "B",
        "true_false": false
    },
    "873": {
        "question": "How many groups of bars contain at least one bar with value smaller than 40?",
        "image": "images/873.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "873",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many groups of bars contain at least one bar with value smaller than 40?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_groups(bars):\n    count = 0\n    for group in bars:\n        for bar in group:\n            if bar < 40:\n                count += 1\n                break\n    return count\n\nbars = [[50, 60, 70], [30, 40, 50], [60, 70, 80], [40, 50, 60]]\nprint(count_groups(bars))",
        "execution": "1",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "874": {
        "question": "What is the value of y at x=-2.5?",
        "image": "images/874.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "874",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 479,
            "img_height": 479,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of y at x=-2.5?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_y(x):\n    y = 2*x**2 - 3*x + 1\n    return y\n\nx = -2.5\ny = find_y(x)\nprint(y)",
        "execution": "21.0",
        "error": "None",
        "extraction": "-2.625",
        "prediction": null,
        "true_false": false
    },
    "875": {
        "question": "Subtract all yellow things. Subtract all blue cylinders. How many objects are left?",
        "image": "images/875.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "875",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all yellow things. Subtract all blue cylinders. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_things = 5\nblue_cylinders = 3\n\nobjects_left = yellow_things - blue_cylinders\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "876": {
        "question": "In the figure, square $ABDC$ is inscribed in $\\odot K$. Find the measure of a central angle.",
        "image": "images/876.jpg",
        "choices": [
            "45",
            "60",
            "90",
            "180"
        ],
        "unit": null,
        "precision": null,
        "answer": "90",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "876",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 273,
            "img_height": 275,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure, square $ABDC$ is inscribed in $\\odot K$. Find the measure of a central angle.\nChoices:\n(A) 45\n(B) 60\n(C) 90\n(D) 180\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef measure_of_central_angle(side_length):\n    radius = side_length / (2 * math.sqrt(2))\n    central_angle = 2 * math.asin(side_length / (2 * radius))\n    return math.degrees(central_angle)\n\nside_length = 4\nprint(measure_of_central_angle(side_length))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "90",
        "prediction": "90",
        "true_false": true
    },
    "877": {
        "question": "What is the sum of the accuracies of the algorithms squad and warm?",
        "image": "images/877.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "877",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the accuracies of the algorithms squad and warm?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "squad_accuracy = 0.85\nwarm_accuracy = 0.92\n\nsum_of_accuracies = squad_accuracy + warm_accuracy\nprint(sum_of_accuracies)",
        "execution": "1.77",
        "error": "None",
        "extraction": "1. 13\n2. 0.6\n3. 1.45\n4. [2007, 2008]\n5. B\n6. 13.0\n7. Tokyo\n8. 1.77",
        "prediction": null,
        "true_false": false
    },
    "878": {
        "question": "\u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220ACB\uff1d90\u00b0\uff0c\u4ee5Rt\u25b3ABC\u7684\u4e09\u8fb9\u4e3a\u8fb9\u5411\u5916\u4f5c\u6b63\u65b9\u5f62\uff0c\u5176\u9762\u79ef\u5206\u522b\u4e3aS1\uff0cS2\uff0cS3\uff0c\u4e14S1\uff1d5\uff0cS3\uff1d16\uff0c\u5219S2\uff1d\uff08\uff09",
        "image": "images/878.jpg",
        "choices": [
            "6",
            "2\u221a{2}",
            "11",
            "24"
        ],
        "unit": null,
        "precision": null,
        "answer": "11",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "878",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 94,
            "img_height": 82,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728Rt\u25b3ABC\u4e2d\uff0c\u2220ACB\uff1d90\u00b0\uff0c\u4ee5Rt\u25b3ABC\u7684\u4e09\u8fb9\u4e3a\u8fb9\u5411\u5916\u4f5c\u6b63\u65b9\u5f62\uff0c\u5176\u9762\u79ef\u5206\u522b\u4e3aS1\uff0cS2\uff0cS3\uff0c\u4e14S1\uff1d5\uff0cS3\uff1d16\uff0c\u5219S2\uff1d\uff08\uff09\nChoices:\n(A) 6\n(B) 2\u221a{2}\n(C) 11\n(D) 24\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_s2(s1, s3):\n    s2 = math.sqrt(s3) - math.sqrt(s1)\n    return s2\n\ns1 = 5\ns3 = 16\n\ns2 = find_s2(s1, s3)\nprint(s2)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "2.0",
        "prediction": "24",
        "true_false": false
    },
    "879": {
        "question": "Subtract all large gray rubber things. Subtract all small blue spheres. How many objects are left?",
        "image": "images/879.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "879",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all large gray rubber things. Subtract all small blue spheres. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "large_gray_rubber_things = 5\nsmall_blue_spheres = 3\n\nobjects_left = large_gray_rubber_things - small_blue_spheres\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "880": {
        "question": "What's the total add up value of largest and smallest bar?",
        "image": "images/880.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "252.65",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "880",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What's the total add up value of largest and smallest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "largest_bar = 10\nsmallest_bar = 5\n\ntotal_value = largest_bar + smallest_bar\nprint(total_value)",
        "execution": "15",
        "error": "None",
        "extraction": "15",
        "prediction": "15.0",
        "true_false": false
    },
    "881": {
        "question": "If the population of grasshopper decreases, the population of mouse will most likely do what?",
        "image": "images/881.jpg",
        "choices": [
            "decrease",
            "remain the same",
            "increase",
            "NA"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "881",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 600,
            "img_height": 375,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If the population of grasshopper decreases, the population of mouse will most likely do what?\nChoices:\n(A) decrease\n(B) remain the same\n(C) increase\n(D) NA\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def population_change(grasshopper_population):\n    if grasshopper_population < 0:\n        return \"NA\"\n    elif grasshopper_population == 0:\n        return \"remain the same\"\n    else:\n        return \"decrease\"\n\nprint(population_change(-100))\nprint(population_change(0))\nprint(population_change(100))",
        "execution": "NA\nremain the same\ndecrease",
        "error": "None",
        "extraction": "decrease",
        "prediction": "decrease",
        "true_false": true
    },
    "882": {
        "question": "Is Lawn Green the low median?",
        "image": "images/882.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "882",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 677,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Lawn Green the low median?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "lawn_green = [2, 4, 6, 8, 10]\nlow_median = sorted(lawn_green)[len(lawn_green)//2 - 1]\nif low_median == 6:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "883": {
        "question": "Which number is missing?",
        "image": "images/883.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "15",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "883",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 868,
            "img_height": 207,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number is missing?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [1, 2, 3, 4, 6, 7, 8, 9, 10]\n\nmissing_number = None\nfor i in range(1, 11):\n    if i not in numbers:\n        missing_number = i\n        break\n\nprint(missing_number)",
        "execution": "5",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "884": {
        "question": "What is the blue kite in the lower right corner shaped like?",
        "image": "images/884.jpg",
        "choices": [
            "ferret",
            "cat",
            "cloud",
            "octopus"
        ],
        "unit": null,
        "precision": null,
        "answer": "octopus",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "884",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "A-OKVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "geometry reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the blue kite in the lower right corner shaped like?\nChoices:\n(A) ferret\n(B) cat\n(C) cloud\n(D) octopus\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def kite_shape(color):\n    shapes = {\n        'blue': 'octopus',\n        'red': 'cat',\n        'yellow': 'cloud',\n        'green': 'ferret'\n    }\n    return shapes[color]\n\ncolor = 'blue'\nprint(kite_shape(color))",
        "execution": "octopus",
        "error": "None",
        "extraction": "octopus",
        "prediction": "octopus",
        "true_false": true
    },
    "885": {
        "question": "Grayson counted the number of pieces of pepperoni on each pizza he made. What is the smallest number of pieces of pepperoni? (Unit: pieces of pepperoni)",
        "image": "images/885.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "18",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "885",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 225,
            "img_height": 136,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Grayson counted the number of pieces of pepperoni on each pizza he made. What is the smallest number of pieces of pepperoni? (Unit: pieces of pepperoni)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "pepperoni_counts = [8, 6, 10, 7, 9]\nmin_pepperoni = min(pepperoni_counts)\nprint(min_pepperoni)",
        "execution": "6",
        "error": "None",
        "extraction": "6",
        "prediction": "6",
        "true_false": false
    },
    "886": {
        "question": "A newspaper researched how many grocery stores there are in each town. What is the median of the numbers?'",
        "image": "images/886.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "886",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 235,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A newspaper researched how many grocery stores there are in each town. What is the median of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "grocery_stores = [10, 15, 20, 25, 30, 35, 40, 45, 50]\n\ngrocery_stores.sort()\nn = len(grocery_stores)\nif n % 2 == 0:\n    median = (grocery_stores[n//2 - 1] + grocery_stores[n//2]) / 2\nelse:\n    median = grocery_stores[n//2]\n\nprint(median)",
        "execution": "30",
        "error": "None",
        "extraction": "25",
        "prediction": "25",
        "true_false": false
    },
    "887": {
        "question": "As shown in the figure, \u25b3ABC is the inscribed triangle of \u2299O. If \u2220ABC = 70.0, then the degree of \u2220AOC is equal to ()",
        "image": "images/887.jpg",
        "choices": [
            "140\u00b0",
            "130\u00b0",
            "120\u00b0",
            "110\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "140\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "887",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 119,
            "img_height": 106,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, \u25b3ABC is the inscribed triangle of \u2299O. If \u2220ABC = 70.0, then the degree of \u2220AOC is equal to ()\nChoices:\n(A) 140\u00b0\n(B) 130\u00b0\n(C) 120\u00b0\n(D) 110\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_ABC):\n    angle_AOC = 2 * angle_ABC\n    return angle_AOC\n\nangle_ABC = 70.0\nangle_AOC = find_angle(angle_ABC)\nprint(angle_AOC)",
        "execution": "140.0",
        "error": "None",
        "extraction": "140.0",
        "prediction": "140\u00b0",
        "true_false": true
    },
    "888": {
        "question": "Subtract all small green shiny balls. Subtract all small metallic things. How many objects are left?",
        "image": "images/888.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "888",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small green shiny balls. Subtract all small metallic things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_green_shiny_balls = 5\nsmall_metallic_things = 3\n\nobjects_left = small_green_shiny_balls - small_metallic_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "889": {
        "question": "Is Purple the minimum?",
        "image": "images/889.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "889",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 472,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "pie chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Purple the minimum?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_purple_minimum(colors):\n    if \"purple\" in colors:\n        return \"no\"\n    else:\n        return \"yes\"\n\ncolors = [\"red\", \"blue\", \"green\"]\nprint(is_purple_minimum(colors))",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "890": {
        "question": "Which is larger the moon or the sun?",
        "image": "images/890.jpg",
        "choices": [
            "Sun",
            "It varies",
            "They are equal in size",
            "Moon"
        ],
        "unit": null,
        "precision": null,
        "answer": "Sun",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "890",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1500,
            "img_height": 844,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which is larger the moon or the sun?\nChoices:\n(A) Sun\n(B) It varies\n(C) They are equal in size\n(D) Moon\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef compare_size():\n    moon_radius = 1737.1 # in kilometers\n    sun_radius = 696340 # in kilometers\n\n    moon_area = 4 * math.pi * (moon_radius ** 2)\n    sun_area = 4 * math.pi * (sun_radius ** 2)\n\n    if moon_area > sun_area:\n        return \"Moon\"\n    elif moon_area < sun_area:\n        return \"Sun\"\n    else:\n        return \"They are equal in size\"\n\nprint(compare_size())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "They are equal in size",
        "prediction": "They are equal in size",
        "true_false": false
    },
    "891": {
        "question": "How many algorithms have accuracy lower than 8 in at least one dataset?",
        "image": "images/891.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "891",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many algorithms have accuracy lower than 8 in at least one dataset?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_lower_accuracy(algorithms):\n    count = 0\n    for algorithm in algorithms:\n        for dataset in algorithm['datasets']:\n            if algorithm['accuracy'][dataset] < 8:\n                count += 1\n                break\n    return count\n\nalgorithms = [\n    {\n        'name': 'Algorithm 1',\n        'datasets': ['Dataset 1', 'Dataset 2', 'Dataset 3'],\n        'accuracy': {\n            'Dataset 1': 7,\n            'Dataset 2': 9,\n            'Dataset 3': 6\n        }\n    },\n    {\n        'name': 'Algorithm 2',\n        'datasets': ['Dataset 1', 'Dataset 2', 'Dataset 3'],\n        'accuracy': {\n            'Dataset 1': 8,\n            'Dataset 2': 7,\n            'Dataset 3': 9\n        }\n    },\n    {\n        'name': 'Algorithm 3',\n        'datasets': ['Dataset 1', 'Dataset 2', 'Dataset 3'],\n        'accuracy': {\n            'Dataset 1': 9,\n            'Dataset 2': 10,\n            'Dataset 3': 8\n        }\n    }\n]\n\nprint(count_lower_accuracy(algorithms))",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "892": {
        "question": "Does New Jersey have a higher value than Georgia ?",
        "image": "images/892.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "892",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 500,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does New Jersey have a higher value than Georgia ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "new_jersey_value = 10\ngeorgia_value = 8\n\nif new_jersey_value > georgia_value:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "893": {
        "question": "What is the limit of the blue function as x approaches negative infinity?",
        "image": "images/893.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "893",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 327,
            "img_height": 331,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the limit of the blue function as x approaches negative infinity?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\nf = (3*x**2 - 2*x + 5) / (2*x**2 + 4*x + 1)\n\nlimit = sp.limit(f, x, -sp.oo)\nprint(limit)",
        "execution": "3/2",
        "error": "None",
        "extraction": "-3/2",
        "prediction": null,
        "true_false": false
    },
    "894": {
        "question": "What is the sum of the accuracies of the algorithms fat and acre?",
        "image": "images/894.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "894",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the accuracies of the algorithms fat and acre?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "fat_accuracy = 0.85\nacre_accuracy = 0.92\n\nsum_accuracy = fat_accuracy + acre_accuracy\nprint(sum_accuracy)",
        "execution": "1.77",
        "error": "None",
        "extraction": "1.45\nTokyo\n1.77",
        "prediction": null,
        "true_false": false
    },
    "895": {
        "question": "Which model has the lowest Audio-Audio Similarity and Text-Audio Similarity scores overall?",
        "image": "images/895.jpg",
        "choices": [
            "MusicLDM (mix-up)",
            "MusicLDM (original)",
            "MusicLDM (BLM)",
            "MusicLDM (BAM)",
            "MuBERT"
        ],
        "unit": null,
        "precision": null,
        "answer": "MuBERT",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "895",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1882,
            "img_height": 682,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "violin plot",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which model has the lowest Audio-Audio Similarity and Text-Audio Similarity scores overall?\nChoices:\n(A) MusicLDM (mix-up)\n(B) MusicLDM (original)\n(C) MusicLDM (BLM)\n(D) MusicLDM (BAM)\n(E) MuBERT\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "model_scores = {\n    'MusicLDM (mix-up)': {'Audio-Audio Similarity': 0.75, 'Text-Audio Similarity': 0.80},\n    'MusicLDM (original)': {'Audio-Audio Similarity': 0.70, 'Text-Audio Similarity': 0.85},\n    'MusicLDM (BLM)': {'Audio-Audio Similarity': 0.65, 'Text-Audio Similarity': 0.75},\n    'MusicLDM (BAM)': {'Audio-Audio Similarity': 0.60, 'Text-Audio Similarity': 0.70},\n    'MuBERT': {'Audio-Audio Similarity': 0.80, 'Text-Audio Similarity': 0.90}\n}\n\nlowest_score = float('inf')\nlowest_model = \"\"\n\nfor model, scores in model_scores.items():\n    audio_similarity = scores['Audio-Audio Similarity']\n    text_similarity = scores['Text-Audio Similarity']\n    overall_score = audio_similarity + text_similarity\n    \n    if overall_score < lowest_score:\n        lowest_score = overall_score\n        lowest_model = model\n\nprint(lowest_model)",
        "execution": "MusicLDM (BAM)",
        "error": "None",
        "extraction": "MusicLDM (BAM)",
        "prediction": "MusicLDM (BAM)",
        "true_false": false
    },
    "896": {
        "question": "Approximately, what percentage of jewelry sales in January were Rings?",
        "image": "images/896.jpg",
        "choices": [
            "Around 21%",
            "Around 27%",
            "Around 31%",
            "Around 37%"
        ],
        "unit": null,
        "precision": null,
        "answer": "Around 31%",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "896",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 758,
            "img_height": 464,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Approximately, what percentage of jewelry sales in January were Rings?\nChoices:\n(A) Around 21%\n(B) Around 27%\n(C) Around 31%\n(D) Around 37%\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "january_jewelry_sales = {\n    'Rings': 210,\n    'Necklaces': 150,\n    'Bracelets': 120,\n    'Earrings': 90\n}\n\ntotal_sales = sum(january_jewelry_sales.values())\nring_sales = january_jewelry_sales['Rings']\n\npercentage = (ring_sales / total_sales) * 100\npercentage = round(percentage)\n\nif percentage < 25:\n    answer = \"(A) Around 21%\"\nelif percentage < 30:\n    answer = \"(B) Around 27%\"\nelif percentage < 35:\n    answer = \"(C) Around 31%\"\nelse:\n    answer = \"(D) Around 37%\"\n\nprint(answer)",
        "execution": "(D) Around 37%",
        "error": "None",
        "extraction": "(C) Around 31%",
        "prediction": "Around 31%",
        "true_false": true
    },
    "897": {
        "question": "Use a calculator to find the measure of $\u2220J$ to the nearest degree.",
        "image": "images/897.jpg",
        "choices": [
            "33",
            "40",
            "50",
            "57"
        ],
        "unit": null,
        "precision": null,
        "answer": "40",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "897",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 352,
            "img_height": 223,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Use a calculator to find the measure of $\u2220J$ to the nearest degree.\nChoices:\n(A) 33\n(B) 40\n(C) 50\n(D) 57\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(side1, side2, side3):\n    angle = math.degrees(math.acos((side1**2 + side2**2 - side3**2) / (2 * side1 * side2)))\n    return round(angle)\n\nside1 = 5\nside2 = 7\nside3 = 8\n\nangle_J = find_angle(side1, side2, side3)\nprint(angle_J)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "57",
        "prediction": "57",
        "true_false": false
    },
    "898": {
        "question": "As shown in the figure, A, B, and C are the three points on \u2299O, if \u2220C = 35.0, then the degree of \u2220OAB is ()",
        "image": "images/898.jpg",
        "choices": [
            "35\u00b0",
            "55\u00b0",
            "65\u00b0",
            "70\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "55\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "898",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 112,
            "img_height": 109,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, A, B, and C are the three points on \u2299O, if \u2220C = 35.0, then the degree of \u2220OAB is ()\nChoices:\n(A) 35\u00b0\n(B) 55\u00b0\n(C) 65\u00b0\n(D) 70\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_OAB(angle_C):\n    angle_OAB = 180 - angle_C\n    return angle_OAB\n\nangle_C = 35.0\nangle_OAB = angle_OAB(angle_C)\nprint(angle_OAB)",
        "execution": "145.0",
        "error": "None",
        "extraction": "145",
        "prediction": "35\u00b0",
        "true_false": false
    },
    "899": {
        "question": "Which number comes next?",
        "image": "images/899.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2123",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "899",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 406,
            "img_height": 185,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which number comes next?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_next_number(numbers):\n    if len(numbers) < 3:\n        return None\n\n    for i in range(len(numbers) - 2):\n        if numbers[i] + numbers[i+1] == numbers[i+2]:\n            return numbers[i+2]\n\n    return None\n\nnumbers = [1, 2, 3, 5, 8, 13]\nprint(find_next_number(numbers))",
        "execution": "3",
        "error": "None",
        "extraction": "21",
        "prediction": "21",
        "true_false": false
    },
    "900": {
        "question": "Is the number of rubber cars less than the number of brown jets?",
        "image": "images/900.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "900",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of rubber cars less than the number of brown jets?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "rubber_cars = 10\nbrown_jets = 15\n\nif rubber_cars < brown_jets:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": true
    },
    "901": {
        "question": "Subtract all shiny spheres. Subtract all big red matte spheres. How many objects are left?",
        "image": "images/901.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "901",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all shiny spheres. Subtract all big red matte spheres. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "shiny_spheres = 5\nbig_red_matte_spheres = 3\n\nobjects_left = shiny_spheres - big_red_matte_spheres\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "902": {
        "question": "If the leaf base has an angle greater than 90 degrees, what is it called?",
        "image": "images/902.jpg",
        "choices": [
            "obtuse",
            "decurrent",
            "cuneate",
            "acute"
        ],
        "unit": null,
        "precision": null,
        "answer": "obtuse",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "902",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1500,
            "img_height": 1429,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: If the leaf base has an angle greater than 90 degrees, what is it called?\nChoices:\n(A) obtuse\n(B) decurrent\n(C) cuneate\n(D) acute\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def leaf_base_angle(angle):\n    if angle > 90:\n        return \"obtuse\"\n    elif angle == 90:\n        return \"decurrent\"\n    elif angle < 90:\n        return \"acute\"\n    else:\n        return \"\"\n\nangle = 100\nprint(leaf_base_angle(angle))",
        "execution": "obtuse",
        "error": "None",
        "extraction": "obtuse",
        "prediction": "obtuse",
        "true_false": true
    },
    "903": {
        "question": "As shown in the figure, if \u2220ABC = 30.0, then the degree of \u2220AOC is ()",
        "image": "images/903.jpg",
        "choices": [
            "30\u00b0",
            "45\u00b0",
            "60\u00b0",
            "70\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "60\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "903",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 110,
            "img_height": 112,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, if \u2220ABC = 30.0, then the degree of \u2220AOC is ()\nChoices:\n(A) 30\u00b0\n(B) 45\u00b0\n(C) 60\u00b0\n(D) 70\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle(angle_ABC):\n    angle_AOC = 180 - angle_ABC\n    return angle_AOC\n\nangle_ABC = 30.0\nangle_AOC = find_angle(angle_ABC)\nprint(angle_AOC)",
        "execution": "150.0",
        "error": "None",
        "extraction": "150",
        "prediction": "45\u00b0",
        "true_false": false
    },
    "904": {
        "question": "Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.",
        "image": "images/904.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "904",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 633,
            "img_height": 204,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Fill in the blank to describe the model. The model has 9 dots divided into 3 equal groups. There are (_) dots in each group.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "dots_in_each_group = 9 // 3\nprint(dots_in_each_group)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": true
    },
    "905": {
        "question": "Is the number of large red cars behind the metal car less than the number of blue matte tandem bikes that are behind the big blue rubber utility bike?",
        "image": "images/905.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "905",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of large red cars behind the metal car less than the number of blue matte tandem bikes that are behind the big blue rubber utility bike?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(large_red_cars, metal_car, blue_matte_tandem_bikes, big_blue_rubber_utility_bike):\n    if large_red_cars < blue_matte_tandem_bikes:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nlarge_red_cars = 5\nmetal_car = 3\nblue_matte_tandem_bikes = 7\nbig_blue_rubber_utility_bike = 2\n\nprint(compare_numbers(large_red_cars, metal_car, blue_matte_tandem_bikes, big_blue_rubber_utility_bike))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "906": {
        "question": "Is the sum of smallest two value is greater then then largest value?",
        "image": "images/906.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "906",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the sum of smallest two value is greater then then largest value?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def sum_of_smallest_two_greater_than_largest(a, b, c):\n    smallest = min(a, b, c)\n    largest = max(a, b, c)\n    sum_of_smallest_two = a + b + c - largest\n    return sum_of_smallest_two > largest\n\na = 5\nb = 10\nc = 15\n\nprint(sum_of_smallest_two_greater_than_largest(a, b, c))",
        "execution": "False",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "907": {
        "question": "When the military expenditure value was lower than 0.2%?",
        "image": "images/907.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1970",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "907",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 850,
            "img_height": 600,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: When the military expenditure value was lower than 0.2%?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import pandas as pd\n\n# Assuming the military expenditure data is stored in a dataframe called 'df'\n# Assuming the military expenditure value is stored in a column called 'expenditure'\n# Assuming the year is stored in a column called 'year'\n\n# Filter the dataframe to get rows where the military expenditure value is lower than 0.2%\nfiltered_df = df[df['expenditure'] < 0.2]\n\n# Get the year when the military expenditure value was lower than 0.2%\nyear = filtered_df['year'].min()\n\nprint(year)",
        "execution": "",
        "error": "name 'df' is not defined",
        "extraction": "year",
        "prediction": null,
        "true_false": false
    },
    "908": {
        "question": "which organism would most likely have a decrease in its population if decrease the population of ant base of above diagram?",
        "image": "images/908.jpg",
        "choices": [
            "plant",
            "human",
            "lizard",
            "snake"
        ],
        "unit": null,
        "precision": null,
        "answer": "lizard",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "908",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 312,
            "img_height": 497,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: which organism would most likely have a decrease in its population if decrease the population of ant base of above diagram?\nChoices:\n(A) plant\n(B) human\n(C) lizard\n(D) snake\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def decrease_population(population, organism):\n    if organism == \"ant\":\n        population -= 1\n    return population\n\npopulation = {\n    \"plant\": 10,\n    \"human\": 20,\n    \"lizard\": 5,\n    \"snake\": 8,\n    \"ant\": 15\n}\n\norganism = \"ant\"\n\nnew_population = decrease_population(population[organism], organism)\nprint(new_population)",
        "execution": "14",
        "error": "None",
        "extraction": "14",
        "prediction": "plant",
        "true_false": false
    },
    "909": {
        "question": "As shown in the figure, in \u25b3ABC, DE \u2225 BC, if AD = 1.0, DB = 2.0, then the value of \\frac ADAB is ()",
        "image": "images/909.jpg",
        "choices": [
            "\\frac{2}{3}",
            "\\frac{1}{4}",
            "\\frac{1}{3}",
            "\\frac{1}{2}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\\frac{1}{3}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "909",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 132,
            "img_height": 118,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in \u25b3ABC, DE \u2225 BC, if AD = 1.0, DB = 2.0, then the value of \\frac ADAB is ()\nChoices:\n(A) \\frac{2}{3}\n(B) \\frac{1}{4}\n(C) \\frac{1}{3}\n(D) \\frac{1}{2}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "AD = 1.0\nDB = 2.0\n\nADAB = AD / (AD + DB)\nprint(ADAB)",
        "execution": "0.3333333333333333",
        "error": "None",
        "extraction": "0.3333333333333333",
        "prediction": "\\frac{2}{3}",
        "true_false": false
    },
    "910": {
        "question": "Subtract all blue metal balls. Subtract all large matte things. How many objects are left?",
        "image": "images/910.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "910",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all blue metal balls. Subtract all large matte things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blue_metal_balls = 5\nlarge_matte_things = 3\n\nobjects_left = blue_metal_balls - large_matte_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "911": {
        "question": "Is the smaller picture below the larger picture?",
        "image": "images/911.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "911",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the smaller picture below the larger picture?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def is_smaller_picture_below(larger_picture, smaller_picture):\n    if smaller_picture < larger_picture:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nlarger_picture = 10\nsmaller_picture = 5\n\nprint(is_smaller_picture_below(larger_picture, smaller_picture))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "912": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/912.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "912",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 629,
            "img_height": 413,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "913": {
        "question": "Does Dark Cyan have the maximum area under the curve?",
        "image": "images/913.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "913",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 763,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Dark Cyan have the maximum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the x values\nx = np.linspace(0, 10, 100)\n\n# Define the y values for each color\ndark_cyan = np.sin(x)\nlight_cyan = np.cos(x)\nblue = np.tan(x)\n\n# Plot the curves\nplt.plot(x, dark_cyan, label='Dark Cyan')\nplt.plot(x, light_cyan, label='Light Cyan')\nplt.plot(x, blue, label='Blue')\n\n# Find the maximum area under the curve\ndark_cyan_area = np.trapz(dark_cyan, x)\nlight_cyan_area = np.trapz(light_cyan, x)\nblue_area = np.trapz(blue, x)\n\n# Check if Dark Cyan has the maximum area\nif dark_cyan_area > light_cyan_area and dark_cyan_area > blue_area:\n    print(\"Dark Cyan has the maximum area under the curve\")\nelse:\n    print(\"Dark Cyan does not have the maximum area under the curve\")\n\n# Show the legend and plot\nplt.legend()\nplt.show()",
        "execution": "Dark Cyan has the maximum area under the curve",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "914": {
        "question": "Subtract all tiny purple shiny cubes. Subtract all large purple balls. How many objects are left?",
        "image": "images/914.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "914",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny purple shiny cubes. Subtract all large purple balls. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_purple_shiny_cubes = 5\nlarge_purple_balls = 3\n\nobjects_left = tiny_purple_shiny_cubes - large_purple_balls\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "915": {
        "question": "What would happen to the Lion population if the Gum Tree population decreased?",
        "image": "images/915.jpg",
        "choices": [
            "Unable to determine.",
            "Nothing would happen.",
            "It would also decrease.",
            "It would increase."
        ],
        "unit": null,
        "precision": null,
        "answer": "It would also decrease.",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "915",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 528,
            "img_height": 740,
            "source": "TQA",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would happen to the Lion population if the Gum Tree population decreased?\nChoices:\n(A) Unable to determine.\n(B) Nothing would happen.\n(C) It would also decrease.\n(D) It would increase.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def lion_population(gum_tree_population):\n    if gum_tree_population < 0:\n        return \"Invalid input\"\n    elif gum_tree_population == 0:\n        return \"Nothing would happen\"\n    else:\n        return \"It would decrease\"\n\ngum_tree_population = 100\nprint(lion_population(gum_tree_population))",
        "execution": "It would decrease",
        "error": "None",
        "extraction": "It would decrease",
        "prediction": "It would increase.",
        "true_false": false
    },
    "916": {
        "question": "As shown in the figure, in Rt\u25b3ABC, \u2220C = 90.0, \u2220A = 30.0, BC = 2.0, the radius of \u2299C is 1.0, point P is the point on the hypotenuse AB, passing point P is a tangent PQ of \u2299C (Point Q is the tangent point), then the minimum value of the line segment PQ is ()",
        "image": "images/916.jpg",
        "choices": [
            "2",
            "\u221a{3}",
            "\u221a{2}",
            "2-\\frac{\u221a{3}}{3}"
        ],
        "unit": null,
        "precision": null,
        "answer": "\u221a{2}",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "916",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 112,
            "img_height": 145,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, in Rt\u25b3ABC, \u2220C = 90.0, \u2220A = 30.0, BC = 2.0, the radius of \u2299C is 1.0, point P is the point on the hypotenuse AB, passing point P is a tangent PQ of \u2299C (Point Q is the tangent point), then the minimum value of the line segment PQ is ()\nChoices:\n(A) 2\n(B) \u221a{3}\n(C) \u221a{2}\n(D) 2-\\frac{\u221a{3}}{3}\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef minimum_PQ():\n    angle_A = 30.0\n    BC = 2.0\n    radius_C = 1.0\n\n    angle_P = math.radians(angle_A)\n    PQ = BC - (2 * radius_C * math.sin(angle_P))\n    return PQ\n\nprint(minimum_PQ())",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "2.0",
        "prediction": "2",
        "true_false": false
    },
    "917": {
        "question": "What is the ratio of the number of procedures to register a business in 2004 to that in 2007?",
        "image": "images/917.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "917",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 939,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the ratio of the number of procedures to register a business in 2004 to that in 2007?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "procedures_2004 = 10\nprocedures_2007 = 5\n\nratio = procedures_2004 / procedures_2007\nprint(ratio)",
        "execution": "2.0",
        "error": "None",
        "extraction": "2.0",
        "prediction": null,
        "true_false": false
    },
    "918": {
        "question": "Calculate the missing item.",
        "image": "images/918.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "918",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 538,
            "img_height": 492,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Calculate the missing item.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "missing_item = 10 - 4 - 3\nprint(missing_item)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "919": {
        "question": "How many items sold more than 3 units in at least one store?",
        "image": "images/919.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "919",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many items sold more than 3 units in at least one store?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "items_sold = {\n    'item1': [2, 4, 1, 3],\n    'item2': [5, 2, 6, 1],\n    'item3': [3, 2, 4, 5],\n    'item4': [1, 2, 3, 4]\n}\n\ncount = 0\nfor item in items_sold:\n    if max(items_sold[item]) > 3:\n        count += 1\n\nprint(count)",
        "execution": "4",
        "error": "None",
        "extraction": "4",
        "prediction": "4",
        "true_false": false
    },
    "920": {
        "question": "The measure of angle BAC equals x*\\degree. What is the value of x?",
        "image": "images/920.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "30",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "920",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 388,
            "img_height": 310,
            "source": "GEOS",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The measure of angle BAC equals x*\\degree. What is the value of x?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.Symbol('x')\neq = sp.Eq(x, sp.symbols('x'))\nsol = sp.solve(eq, x)\nprint(sol)",
        "execution": "[]",
        "error": "None",
        "extraction": "x",
        "prediction": null,
        "true_false": false
    },
    "921": {
        "question": "Find x to the nearest tenth. Assume that segments that appear to be tangent are tangent.",
        "image": "images/921.jpg",
        "choices": [
            "5",
            "8.1",
            "10.3",
            "21.6"
        ],
        "unit": null,
        "precision": null,
        "answer": "21.6",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "921",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 226,
            "img_height": 170,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find x to the nearest tenth. Assume that segments that appear to be tangent are tangent.\nChoices:\n(A) 5\n(B) 8.1\n(C) 10.3\n(D) 21.6\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_x(radius, distance):\n    x = math.sqrt(radius**2 - distance**2)\n    return round(x, 1)\n\nradius = 10\ndistance = 8\n\nprint(find_x(radius, distance))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "8.2",
        "prediction": "8.1",
        "true_false": false
    },
    "922": {
        "question": "What is the value of the smallest individual element in the whole chart?",
        "image": "images/922.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "922",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the smallest individual element in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = [\n    [5, 10, 15],\n    [20, 25, 30],\n    [35, 40, 45]\n]\n\nsmallest_element = chart[0][0]\nfor row in chart:\n    for element in row:\n        if element < smallest_element:\n            smallest_element = element\n\nprint(smallest_element)",
        "execution": "5",
        "error": "None",
        "extraction": "4.0",
        "prediction": null,
        "true_false": false
    },
    "923": {
        "question": "Which model achieves the highest score in terms of Rec?",
        "image": "images/923.jpg",
        "choices": [
            "Transformers Agent (GPT-4)",
            "LLaMA-Adapter v2-7B",
            "LLaVA-7B",
            "Otter-9B ",
            "MM-ReAct-GPT-3.5",
            "LLaVA-13B (LLaMA-2)",
            "MM-ReAct-GPT-4"
        ],
        "unit": null,
        "precision": null,
        "answer": "LLaVA-13B (LLaMA-2)",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "923",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1910,
            "img_height": 1056,
            "source": "PaperQA",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "table",
            "grade": "college",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which model achieves the highest score in terms of Rec?\nChoices:\n(A) Transformers Agent (GPT-4)\n(B) LLaMA-Adapter v2-7B\n(C) LLaVA-7B\n(D) Otter-9B \n(E) MM-ReAct-GPT-3.5\n(F) LLaVA-13B (LLaMA-2)\n(G) MM-ReAct-GPT-4\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "rec_scores = {\n    'Transformers Agent (GPT-4)': 0.85,\n    'LLaMA-Adapter v2-7B': 0.78,\n    'LLaVA-7B': 0.82,\n    'Otter-9B': 0.79,\n    'MM-ReAct-GPT-3.5': 0.81,\n    'LLaVA-13B (LLaMA-2)': 0.83,\n    'MM-ReAct-GPT-4': 0.86\n}\n\nhighest_score = max(rec_scores.values())\nhighest_model = [model for model, score in rec_scores.items() if score == highest_score]\n\nprint(highest_model)",
        "execution": "",
        "error": "name 'highest_score' is not defined",
        "extraction": "['MM-ReAct-GPT-4']",
        "prediction": "MM-ReAct-GPT-4",
        "true_false": false
    },
    "924": {
        "question": "Does Periwinkle have the maximum area under the curve?",
        "image": "images/924.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "924",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 587,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Periwinkle have the maximum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-10, 10, 100)\ny1 = x**2\ny2 = x**3\n\nplt.plot(x, y1, label='Periwinkle')\nplt.plot(x, y2, label='Other Curve')\nplt.legend()\n\nmax_area = np.max(y1)\nif max_area == np.max(y2):\n    answer = 'no'\nelse:\n    answer = 'yes'\n\nprint(answer)",
        "execution": "yes",
        "error": "None",
        "extraction": "yes",
        "prediction": "yes",
        "true_false": true
    },
    "925": {
        "question": "Haley went to the store. She bought 3+9/10 pounds of pumpernickel bread crumbs. How much did she spend? (Unit: $)",
        "image": "images/925.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "19.5",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "925",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 334,
            "img_height": 130,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Haley went to the store. She bought 3+9/10 pounds of pumpernickel bread crumbs. How much did she spend? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "pounds_of_pumpernickel_bread_crumbs = 3 + 9/10\nprice_per_pound = 2.50\n\ntotal_cost = pounds_of_pumpernickel_bread_crumbs * price_per_pound\nprint(total_cost)",
        "execution": "9.75",
        "error": "None",
        "extraction": "27.25",
        "prediction": "27.2",
        "true_false": false
    },
    "926": {
        "question": "What is the size of the shaded area under the curve? Round the answer to 2 decimal places",
        "image": "images/926.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "7.07",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "926",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 433,
            "img_height": 312,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the size of the shaded area under the curve? Round the answer to 2 decimal places\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nfrom scipy.integrate import quad\n\ndef f(x):\n    return x**2 + 2*x + 1\n\na = 0\nb = 2\n\nresult, error = quad(f, a, b)\nshaded_area = round(result, 2)\nprint(shaded_area)",
        "execution": "8.67",
        "error": "None",
        "extraction": "2.67",
        "prediction": "2.67",
        "true_false": false
    },
    "927": {
        "question": "\u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0cAB\u7684\u5782\u76f4\u5e73\u5206\u7ebf\u4ea4AB\u4e8e\u70b9D\uff0c\u4ea4BC\u4e8e\u70b9E\uff0c\u8fde\u63a5AE\uff0e\u82e5AB\uff1d6\uff0c\u25b3ACE\u7684\u5468\u957f\u4e3a13\uff0c\u5219\u25b3ABC\u7684\u5468\u957f\u4e3a\uff08\uff09",
        "image": "images/927.jpg",
        "choices": [
            "19",
            "16",
            "29",
            "18"
        ],
        "unit": null,
        "precision": null,
        "answer": "19",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "927",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 199,
            "img_height": 152,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0cAB\u7684\u5782\u76f4\u5e73\u5206\u7ebf\u4ea4AB\u4e8e\u70b9D\uff0c\u4ea4BC\u4e8e\u70b9E\uff0c\u8fde\u63a5AE\uff0e\u82e5AB\uff1d6\uff0c\u25b3ACE\u7684\u5468\u957f\u4e3a13\uff0c\u5219\u25b3ABC\u7684\u5468\u957f\u4e3a\uff08\uff09\nChoices:\n(A) 19\n(B) 16\n(C) 29\n(D) 18\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef triangle_perimeter(AB, ACE_perimeter):\n    # Calculate the length of AC using the perimeter of triangle ACE\n    AC = ACE_perimeter / 2 - AB\n    \n    # Calculate the length of BC using the Pythagorean theorem\n    BC = math.sqrt(AC**2 + AB**2)\n    \n    # Calculate the perimeter of triangle ABC\n    ABC_perimeter = AB + AC + BC\n    \n    return ABC_perimeter\n\nAB = 6\nACE_perimeter = 13\n\nprint(triangle_perimeter(AB, ACE_perimeter))",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "16",
        "prediction": "16",
        "true_false": false
    },
    "928": {
        "question": "How much more does a navy blue bath mat cost than a yellow bath towel? (Unit: $)",
        "image": "images/928.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "928",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 234,
            "img_height": 160,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much more does a navy blue bath mat cost than a yellow bath towel? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "navy_blue_bath_mat_price = 15.00\nyellow_bath_towel_price = 10.00\n\ndifference = navy_blue_bath_mat_price - yellow_bath_towel_price\nprint(difference)",
        "execution": "5.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": null,
        "true_false": false
    },
    "929": {
        "question": "How much money does Tim need to buy a mystery game and a toy rocket? (Unit: $)",
        "image": "images/929.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "85",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "929",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 226,
            "img_height": 192,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much money does Tim need to buy a mystery game and a toy rocket? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "mystery_game_price = 10.00\ntoy_rocket_price = 5.00\n\nans = mystery_game_price + toy_rocket_price\nprint(ans)",
        "execution": "15.0",
        "error": "None",
        "extraction": "15.0",
        "prediction": null,
        "true_false": false
    },
    "930": {
        "question": "\u5982\u56fe\uff0cF\u662f\u25b3ABC\u7684\u89d2\u5e73\u5206\u7ebfCD\u548cBE\u7684\u4ea4\u70b9\uff0cCG\u22a5AB\u4e8e\u70b9G\uff0e\u82e5\u2220ACG\uff1d32\u00b0\uff0c\u5219\u2220BFC\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/930.jpg",
        "choices": [
            "119\u00b0",
            "122\u00b0",
            "148\u00b0",
            "150\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "119\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "930",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 113,
            "img_height": 79,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cF\u662f\u25b3ABC\u7684\u89d2\u5e73\u5206\u7ebfCD\u548cBE\u7684\u4ea4\u70b9\uff0cCG\u22a5AB\u4e8e\u70b9G\uff0e\u82e5\u2220ACG\uff1d32\u00b0\uff0c\u5219\u2220BFC\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 119\u00b0\n(B) 122\u00b0\n(C) 148\u00b0\n(D) 150\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_ACG = 32\n    angle_CGF = 90\n    angle_BFC = 180 - angle_ACG - angle_CGF\n    return angle_BFC\n\nprint(find_angle())",
        "execution": "58",
        "error": "None",
        "extraction": "122",
        "prediction": "122\u00b0",
        "true_false": false
    },
    "931": {
        "question": "As shown in the figure, \u25b3ABC is the inscribed triangle of \u2299O, AB is the diameter of \u2299O, point D is a point on \u2299O, if \u2220ACD = 40.0, then the size of \u2220BAD is ()",
        "image": "images/931.jpg",
        "choices": [
            "35\u00b0",
            "50\u00b0",
            "40\u00b0",
            "60\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "50\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "931",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 124,
            "img_height": 123,
            "source": "UniGeo",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: As shown in the figure, \u25b3ABC is the inscribed triangle of \u2299O, AB is the diameter of \u2299O, point D is a point on \u2299O, if \u2220ACD = 40.0, then the size of \u2220BAD is ()\nChoices:\n(A) 35\u00b0\n(B) 50\u00b0\n(C) 40\u00b0\n(D) 60\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef angle_BAD(angle_ACD):\n    angle_BAC = 90\n    angle_ADC = 180 - angle_ACD\n    angle_BAD = angle_BAC - angle_ADC\n    return angle_BAD\n\nangle_ACD = 40.0\nangle_BAD = angle_BAD(angle_ACD)\nprint(angle_BAD)",
        "execution": "-50.0",
        "error": "None",
        "extraction": "50",
        "prediction": "50\u00b0",
        "true_false": true
    },
    "932": {
        "question": "What would happen to the phytoplankton if krill increased?",
        "image": "images/932.jpg",
        "choices": [
            "decrease",
            "increase",
            "can't be predicted",
            "stay the same"
        ],
        "unit": null,
        "precision": null,
        "answer": "decrease",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "932",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 750,
            "img_height": 350,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would happen to the phytoplankton if krill increased?\nChoices:\n(A) decrease\n(B) increase\n(C) can't be predicted\n(D) stay the same\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "phytoplankton = \"increase\"\nkrill = \"increase\"\n\nif krill == \"increase\":\n    phytoplankton = \"increase\"\nelse:\n    phytoplankton = \"stay the same\"\n\nprint(phytoplankton)",
        "execution": "increase",
        "error": "None",
        "extraction": "increase",
        "prediction": "increase",
        "true_false": false
    },
    "933": {
        "question": "How much money does Hector need to buy a European vacation package and an Australian vacation package? (Unit: $)",
        "image": "images/933.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9606",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "933",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 344,
            "img_height": 160,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How much money does Hector need to buy a European vacation package and an Australian vacation package? (Unit: $)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "european_package_price = 2000.00\naustralian_package_price = 3000.00\n\ntotal_cost = european_package_price + australian_package_price\nprint(total_cost)",
        "execution": "5000.0",
        "error": "None",
        "extraction": "5000.0",
        "prediction": null,
        "true_false": false
    },
    "934": {
        "question": "What is the value of the largest bar?",
        "image": "images/934.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "10000",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "934",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of the largest bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def largest_bar(bars):\n    max_value = max(bars)\n    return max_value\n\nbars = [5, 8, 3, 10, 6]\nprint(largest_bar(bars))",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "935": {
        "question": "\u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0cAD\uff1d6\uff0cAB\uff1d4\uff0cDE\u5e73\u5206\u2220ADC\u4ea4BC\u4e8e\u70b9E\uff0c\u5219BE\u7684\u957f\u662f\uff08\uff09",
        "image": "images/935.jpg",
        "choices": [
            "2",
            "3",
            "4",
            "5"
        ],
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "935",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 140,
            "img_height": 81,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728ABCD\u4e2d\uff0cAD\uff1d6\uff0cAB\uff1d4\uff0cDE\u5e73\u5206\u2220ADC\u4ea4BC\u4e8e\u70b9E\uff0c\u5219BE\u7684\u957f\u662f\uff08\uff09\nChoices:\n(A) 2\n(B) 3\n(C) 4\n(D) 5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_BE_length(AD, AB):\n    DE = (AD**2 + AB**2) / (2 * AD)\n    BE = math.sqrt(AB**2 - DE**2)\n    return BE\n\nAD = 6\nAB = 4\n\nBE_length = find_BE_length(AD, AB)\nprint(BE_length)",
        "execution": "",
        "error": "name 'math' is not defined",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "936": {
        "question": "How many people in the image were born after the end of World War II?",
        "image": "images/936.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "936",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 710,
            "img_height": 892,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people in the image were born after the end of World War II?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "birth_years = [1940, 1955, 1962, 1978, 1985, 1990, 2000, 2010]\nend_of_ww2 = 1945\n\ncount = 0\nfor year in birth_years:\n    if year > end_of_ww2:\n        count += 1\n\nprint(count)",
        "execution": "7",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "937": {
        "question": "Is Dark Periwinkle the roughest?",
        "image": "images/937.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "937",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 785,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Dark Periwinkle the roughest?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "answer = \"no\"\nprint(answer)",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "938": {
        "question": "In the figure, $m \u22209 = 75$. Find the measure of $\\angle 6$.",
        "image": "images/938.jpg",
        "choices": [
            "75",
            "85",
            "95",
            "105"
        ],
        "unit": null,
        "precision": null,
        "answer": "105",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "938",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 417,
            "img_height": 278,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In the figure, $m \u22209 = 75$. Find the measure of $\\angle 6$.\nChoices:\n(A) 75\n(B) 85\n(C) 95\n(D) 105\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "m_angle_9 = 75\nm_angle_6 = 180 - m_angle_9\nprint(m_angle_6)",
        "execution": "105",
        "error": "None",
        "extraction": "105",
        "prediction": "105",
        "true_false": true
    },
    "939": {
        "question": "What would be most affected if the clams all died?",
        "image": "images/939.jpg",
        "choices": [
            "squid",
            "lantern fish",
            "octopus",
            "sea horse"
        ],
        "unit": null,
        "precision": null,
        "answer": "octopus",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "939",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1162,
            "img_height": 764,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What would be most affected if the clams all died?\nChoices:\n(A) squid\n(B) lantern fish\n(C) octopus\n(D) sea horse\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def most_affected(clams_alive):\n    if clams_alive == 0:\n        return \"squid\"\n    elif clams_alive < 10:\n        return \"lantern fish\"\n    elif clams_alive < 100:\n        return \"octopus\"\n    else:\n        return \"sea horse\"\n\nclams_alive = 0\nprint(most_affected(clams_alive))",
        "execution": "squid",
        "error": "None",
        "extraction": "squid",
        "prediction": "squid",
        "true_false": false
    },
    "940": {
        "question": "Subtract all big red things. Subtract all metallic things. How many objects are left?",
        "image": "images/940.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "940",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big red things. Subtract all metallic things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_red_things = 5\nmetallic_things = 3\n\nobjects_left = big_red_things - metallic_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "941": {
        "question": "Which is the next number in the series?",
        "image": "images/941.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "941",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 271,
            "img_height": 327,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which is the next number in the series?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_next_number(series):\n    if len(series) < 3:\n        return None\n\n    diff = series[1] - series[0]\n    for i in range(2, len(series)):\n        if series[i] - series[i-1] != diff:\n            return None\n\n    return series[-1] + diff\n\nseries = [2, 4, 6, 8, 10]\nnext_number = find_next_number(series)\nprint(next_number)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "942": {
        "question": "What is the value of f(0)?",
        "image": "images/942.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "0",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "942",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 395,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the value of f(0)?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def f(x):\n    return 2*x + 3\n\nvalue = f(0)\nprint(value)",
        "execution": "3",
        "error": "None",
        "extraction": "3",
        "prediction": "3",
        "true_false": false
    },
    "943": {
        "question": "What is the difference between two consecutive major ticks on the Y-axis ?",
        "image": "images/943.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "943",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1258,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the difference between two consecutive major ticks on the Y-axis ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import matplotlib.pyplot as plt\n\n# Generate a sample plot\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 30, 40, 50]\nplt.plot(x, y)\n\n# Get the major ticks on the Y-axis\ny_ticks = plt.gca().get_yticks()\n\n# Calculate the difference between two consecutive major ticks\ndifference = y_ticks[1] - y_ticks[0]\n\nprint(difference)",
        "execution": "5000.0",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "944": {
        "question": "What is the perimeter of the shape?",
        "image": "images/944.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "944",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 258,
            "img_height": 241,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "geometry diagram",
            "grade": "elementary school",
            "skills": [
                "geometry reasoning",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the perimeter of the shape?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "side1 = 5\nside2 = 7\nside3 = 3\nside4 = 4\n\nperimeter = side1 + side2 + side3 + side4\nprint(perimeter)",
        "execution": "19",
        "error": "None",
        "extraction": "19",
        "prediction": "19",
        "true_false": false
    },
    "945": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/945.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "945",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 610,
            "img_height": 451,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "946": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/946.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "16",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "946",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 560,
            "img_height": 373,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 10)\nperson2_birthdate = date(1985, 9, 15)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "947": {
        "question": "\u5982\u56fe\uff0cAB\u2225CD\uff0cBC\u2225DE\uff0c\u2220A\uff1d45\u00b0\uff0c\u2220C\uff1d110\u00b0\uff0c\u5219\u2220AED\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/947.jpg",
        "choices": [
            "95\u00b0",
            "105\u00b0",
            "115\u00b0",
            "125\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "115\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "947",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 170,
            "img_height": 118,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0cAB\u2225CD\uff0cBC\u2225DE\uff0c\u2220A\uff1d45\u00b0\uff0c\u2220C\uff1d110\u00b0\uff0c\u5219\u2220AED\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 95\u00b0\n(B) 105\u00b0\n(C) 115\u00b0\n(D) 125\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_A = 45\n    angle_C = 110\n\n    angle_B = 180 - angle_A\n    angle_D = 180 - angle_C\n\n    angle_E = 180 - angle_B - angle_D\n\n    return angle_E\n\nprint(find_angle())",
        "execution": "-25",
        "error": "None",
        "extraction": "115",
        "prediction": "115\u00b0",
        "true_false": true
    },
    "948": {
        "question": "Some students compared how many blocks they live from school. What is the mean of the numbers?'",
        "image": "images/948.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "11",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "948",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 207,
            "img_height": 311,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Some students compared how many blocks they live from school. What is the mean of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blocks = [2, 4, 6, 8, 10]\n\nmean = sum(blocks) / len(blocks)\nprint(mean)",
        "execution": "6.0",
        "error": "None",
        "extraction": "5.0",
        "prediction": null,
        "true_false": false
    },
    "949": {
        "question": "What is the combined percentage of  Lowest ROI and Medium ROI in SEO?",
        "image": "images/949.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "56",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "949",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the combined percentage of  Lowest ROI and Medium ROI in SEO?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "lowest_roi_percentage = 10.00\nmedium_roi_percentage = 20.00\n\ncombined_percentage = lowest_roi_percentage + medium_roi_percentage\nprint(combined_percentage)",
        "execution": "30.0",
        "error": "None",
        "extraction": "30.0",
        "prediction": null,
        "true_false": false
    },
    "950": {
        "question": "The slope of f(x) at x=0 is ____",
        "image": "images/950.jpg",
        "choices": [
            "positive",
            "negative",
            "zero",
            "undefined"
        ],
        "unit": null,
        "precision": null,
        "answer": "positive",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "950",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1114,
            "img_height": 744,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The slope of f(x) at x=0 is ____\nChoices:\n(A) positive\n(B) negative\n(C) zero\n(D) undefined\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def slope_at_x0(f):\n    slope = (f(0 + 0.0001) - f(0)) / 0.0001\n    if slope > 0:\n        return \"positive\"\n    elif slope < 0:\n        return \"negative\"\n    else:\n        return \"zero\"\n\ndef f(x):\n    return 2*x + 3\n\nprint(slope_at_x0(f))",
        "execution": "positive",
        "error": "None",
        "extraction": "positive",
        "prediction": "positive",
        "true_false": true
    },
    "951": {
        "question": "Find $x$.",
        "image": "images/951.jpg",
        "choices": [
            "10.25",
            "12.75",
            "18.75",
            "25.5"
        ],
        "unit": null,
        "precision": null,
        "answer": "12.75",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "951",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 487,
            "img_height": 427,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Find $x$.\nChoices:\n(A) 10.25\n(B) 12.75\n(C) 18.75\n(D) 25.5\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x = 2 * (3 + 4) - 5\nprint(x)",
        "execution": "9",
        "error": "None",
        "extraction": "11",
        "prediction": "10.25",
        "true_false": false
    },
    "952": {
        "question": "Base your answers on the food web below and on your knowledge of biology. A decrease in the Aquatic crustaceans population will most immediately decrease the available energy for the",
        "image": "images/952.jpg",
        "choices": [
            "Minnows",
            "Ducks",
            "Fish",
            "Raccoons"
        ],
        "unit": null,
        "precision": null,
        "answer": "Fish",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "952",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 456,
            "img_height": 258,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Base your answers on the food web below and on your knowledge of biology. A decrease in the Aquatic crustaceans population will most immediately decrease the available energy for the\nChoices:\n(A) Minnows\n(B) Ducks\n(C) Fish\n(D) Raccoons\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "aquatic_crustaceans_population = 100\nminnows_population = 50\nducks_population = 20\nfish_population = 30\nraccoons_population = 10\n\naquatic_crustaceans_population -= 10\n\navailable_energy_for_minnows = minnows_population * 0.1 * aquatic_crustaceans_population\navailable_energy_for_ducks = ducks_population * 0.2 * aquatic_crustaceans_population\navailable_energy_for_fish = fish_population * 0.3 * aquatic_crustaceans_population\navailable_energy_for_raccoons = raccoons_population * 0.4 * aquatic_crustaceans_population\n\nprint(\"Available energy for Minnows:\", available_energy_for_minnows)\nprint(\"Available energy for Ducks:\", available_energy_for_ducks)\nprint(\"Available energy for Fish:\", available_energy_for_fish)\nprint(\"Available energy for Raccoons:\", available_energy_for_raccoons)",
        "execution": "Available energy for Minnows: 450.0\nAvailable energy for Ducks: 360.0\nAvailable energy for Fish: 810.0\nAvailable energy for Raccoons: 360.0",
        "error": "None",
        "extraction": "Available energy for Minnows: 40.0\nAvailable energy for Ducks: 80.0\nAvailable energy for Fish: 120.0\nAvailable energy for Raccoons: 160.0",
        "prediction": "Raccoons",
        "true_false": false
    },
    "953": {
        "question": "What percentage of trees have leaves?",
        "image": "images/953.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "50",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "953",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What percentage of trees have leaves?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "total_trees = 100\ntrees_with_leaves = 75\n\npercentage = (trees_with_leaves / total_trees) * 100\nprint(percentage)",
        "execution": "75.0",
        "error": "None",
        "extraction": "75",
        "prediction": "75",
        "true_false": false
    },
    "954": {
        "question": "A partial food web is shown below. Which of the following will most likely happen if the snake population decreases?",
        "image": "images/954.jpg",
        "choices": [
            "Cricket will increase",
            "Mouse will increase",
            "Rabbit will increase",
            "All of above"
        ],
        "unit": null,
        "precision": null,
        "answer": "All of above",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "954",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 475,
            "img_height": 277,
            "source": "AI2D",
            "category": "general-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "high school",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A partial food web is shown below. Which of the following will most likely happen if the snake population decreases?\nChoices:\n(A) Cricket will increase\n(B) Mouse will increase\n(C) Rabbit will increase\n(D) All of above\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "food_web = {\n    'snake': ['mouse', 'rabbit'],\n    'mouse': ['cricket'],\n    'rabbit': []\n}\n\ndef snake_population_decrease(food_web):\n    if 'snake' in food_web:\n        food_web.pop('snake')\n    \n    if 'mouse' in food_web:\n        food_web['mouse'].remove('snake')\n    \n    if 'rabbit' in food_web:\n        food_web['rabbit'].remove('snake')\n    \n    return food_web\n\nresult = snake_population_decrease(food_web)\n\nif len(result['mouse']) > 0 and len(result['rabbit']) > 0:\n    print(\"D) All of above\")\nelif len(result['mouse']) > 0:\n    print(\"B) Mouse will increase\")\nelif len(result['rabbit']) > 0:\n    print(\"C) Rabbit will increase\")\nelse:\n    print(\"A) Cricket will increase\")",
        "execution": "",
        "error": "list.remove(x): x not in list",
        "extraction": "D",
        "prediction": "All of above",
        "true_false": true
    },
    "955": {
        "question": "\u5982\u56fe\uff0e\u70b9O\u662f\u6b63\u4e94\u8fb9\u5f62ABCDE\u7684\u4e2d\u5fc3\uff0c\u2299O\u662f\u6b63\u4e94\u8fb9\u5f62\u7684\u5916\u63a5\u5706\uff0c\u2220ADE\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/955.jpg",
        "choices": [
            "30\u00b0",
            "32\u00b0",
            "36\u00b0",
            "40\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "36\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "955",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 136,
            "img_height": 136,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0e\u70b9O\u662f\u6b63\u4e94\u8fb9\u5f62ABCDE\u7684\u4e2d\u5fc3\uff0c\u2299O\u662f\u6b63\u4e94\u8fb9\u5f62\u7684\u5916\u63a5\u5706\uff0c\u2220ADE\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 30\u00b0\n(B) 32\u00b0\n(C) 36\u00b0\n(D) 40\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    # Calculate the angle of ADE in a regular pentagon\n    angle = 360 / 5\n    \n    return angle\n\nangle = find_angle()\nprint(angle)",
        "execution": "72.0",
        "error": "None",
        "extraction": "36",
        "prediction": "36\u00b0",
        "true_false": true
    },
    "956": {
        "question": "Subtract all small blue rubber objects. Subtract all brown shiny balls. How many objects are left?",
        "image": "images/956.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "956",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all small blue rubber objects. Subtract all brown shiny balls. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "small_blue_rubber_objects = 5\nbrown_shiny_balls = 3\n\nobjects_left = small_blue_rubber_objects - brown_shiny_balls\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "957": {
        "question": "Is the number of big brown buss behind the gray matte aeroplane greater than the number of yellow shiny scooters?",
        "image": "images/957.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "Yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "957",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of big brown buss behind the gray matte aeroplane greater than the number of yellow shiny scooters?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(big_brown_buses, gray_matte_airplane, yellow_shiny_scooters):\n    if big_brown_buses > yellow_shiny_scooters:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nbig_brown_buses = 5\ngray_matte_airplane = 2\nyellow_shiny_scooters = 3\n\nprint(compare_numbers(big_brown_buses, gray_matte_airplane, yellow_shiny_scooters))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": false
    },
    "958": {
        "question": "Choose the missing letters from below to form a word, using all letters presented",
        "image": "images/958.jpg",
        "choices": [
            "A, R, N",
            "R, D, N",
            "I, A, M",
            "H, O, W"
        ],
        "unit": null,
        "precision": null,
        "answer": "R, D, N",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "958",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 945,
            "img_height": 773,
            "source": "IQTest",
            "category": "math-targeted-vqa",
            "task": "figure question answering",
            "context": "puzzle test",
            "grade": "elementary school",
            "skills": [
                "logical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Choose the missing letters from below to form a word, using all letters presented\nChoices:\n(A) A, R, N\n(B) R, D, N\n(C) I, A, M\n(D) H, O, W\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import itertools\n\ndef find_word(letters):\n    words = ['RAIN', 'RAND', 'MAIN', 'MIND', 'HAND', 'HARD', 'WORD', 'WARD']\n    \n    for word in words:\n        if set(word) == set(letters):\n            return word\n    \n    return \"\"\n\nletters = ['R', 'A', 'N', 'D']\nprint(find_word(letters))",
        "execution": "RAND",
        "error": "None",
        "extraction": "RAND",
        "prediction": "R, D, N",
        "true_false": true
    },
    "959": {
        "question": "The teachers at an elementary school counted how many desks they had in their classrooms. What is the median of the numbers?'",
        "image": "images/959.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "32",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "959",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 230,
            "img_height": 218,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The teachers at an elementary school counted how many desks they had in their classrooms. What is the median of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def median(numbers):\n    sorted_numbers = sorted(numbers)\n    length = len(sorted_numbers)\n    if length % 2 == 0:\n        middle_index = length // 2\n        median_value = (sorted_numbers[middle_index - 1] + sorted_numbers[middle_index]) / 2\n    else:\n        middle_index = length // 2\n        median_value = sorted_numbers[middle_index]\n    return median_value\n\ndesks = [20, 25, 30, 35, 40]\nprint(median(desks))",
        "execution": "30",
        "error": "None",
        "extraction": "32.5",
        "prediction": null,
        "true_false": false
    },
    "960": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/960.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "4",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "960",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2048,
            "img_height": 1365,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = person1_birthdate.year - person2_birthdate.year\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "961": {
        "question": "What is the lowest value in blue bar?",
        "image": "images/961.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "961",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the lowest value in blue bar?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blue_bar_values = [10, 15, 8, 12, 9]\nlowest_value = min(blue_bar_values)\nprint(lowest_value)",
        "execution": "8",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "962": {
        "question": "The value of y at x=10 is ____ that at x=70.",
        "image": "images/962.jpg",
        "choices": [
            "larger than",
            "equal to",
            "smaller than"
        ],
        "unit": null,
        "precision": null,
        "answer": "smaller than",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "962",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 387,
            "img_height": 301,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The value of y at x=10 is ____ that at x=70.\nChoices:\n(A) larger than\n(B) equal to\n(C) smaller than\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "x1 = 10\ny1 = 5*x1 + 3\n\nx2 = 70\ny2 = 5*x2 + 3\n\nif y1 > y2:\n    ans = \"(A) larger than\"\nelif y1 == y2:\n    ans = \"(B) equal to\"\nelse:\n    ans = \"(C) smaller than\"\n\nprint(\"The value of y at x=10 is\", ans, \"that at x=70.\")",
        "execution": "The value of y at x=10 is (C) smaller than that at x=70.",
        "error": "None",
        "extraction": "(A) larger than",
        "prediction": "larger than",
        "true_false": false
    },
    "963": {
        "question": "For what x does f reach its local maximum?",
        "image": "images/963.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "963",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 441,
            "img_height": 397,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: For what x does f reach its local maximum?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\nx = sp.symbols('x')\nf = x**2 - 4*x + 3\n\nf_prime = sp.diff(f, x)\ncritical_points = sp.solve(f_prime, x)\n\nlocal_maxima = []\nfor point in critical_points:\n    if sp.diff(f_prime, x).subs(x, point) < 0:\n        local_maxima.append(point)\n\nlocal_maxima",
        "execution": "",
        "error": "None",
        "extraction": "[2]",
        "prediction": null,
        "true_false": false
    },
    "964": {
        "question": "Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.",
        "image": "images/964.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "964",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 342,
            "img_height": 70,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the line to the nearest centimeter. The line is about (_) centimeters long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "length_of_line = 12.5\nnearest_centimeter = round(length_of_line)\nprint(nearest_centimeter)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "965": {
        "question": "whats the lowest number yard line that you can see?",
        "image": "images/965.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "30",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "965",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1024,
            "img_height": 690,
            "source": "TextVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: whats the lowest number yard line that you can see?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "lowest_number_yard_line = 1\nprint(lowest_number_yard_line)",
        "execution": "1",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "966": {
        "question": "Move the ruler to measure the length of the pencil to the nearest inch. The pencil is about (_) inches long.",
        "image": "images/966.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "3",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "966",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 438,
            "img_height": 166,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Move the ruler to measure the length of the pencil to the nearest inch. The pencil is about (_) inches long.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "pencil_length = 7.5\nnearest_inch = round(pencil_length)\nprint(nearest_inch)",
        "execution": "8",
        "error": "None",
        "extraction": "8",
        "prediction": "8",
        "true_false": false
    },
    "967": {
        "question": "In how many years, is the amount earned from national visitors greater than the average amount earned from national visitors taken over all years ?",
        "image": "images/967.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "967",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 1146,
            "img_height": 650,
            "source": "PlotQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In how many years, is the amount earned from national visitors greater than the average amount earned from national visitors taken over all years ?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def years_greater_than_average(earnings):\n    average = sum(earnings) / len(earnings)\n    years = 0\n    total_earnings = 0\n\n    while total_earnings <= average:\n        total_earnings += earnings[years]\n        years += 1\n\n    return years\n\nearnings = [1000, 2000, 3000, 4000, 5000]\nprint(years_greater_than_average(earnings))",
        "execution": "3",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "968": {
        "question": "Subtract all blue balls. Subtract all big yellow rubber balls. How many objects are left?",
        "image": "images/968.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "968",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all blue balls. Subtract all big yellow rubber balls. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "blue_balls = 5\nbig_yellow_rubber_balls = 3\n\nobjects_left = blue_balls - big_yellow_rubber_balls\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "969": {
        "question": "Does Yellow Green have the maximum area under the curve?",
        "image": "images/969.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "969",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 587,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "scatter plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Does Yellow Green have the maximum area under the curve?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\ncolors = ['blue', 'orange', 'green', 'red', 'purple', 'yellow', 'cyan', 'magenta', 'lime', 'pink']\nareas = []\n\nfor i in range(len(colors)):\n    plt.fill_between(x, y, color=colors[i], alpha=0.5)\n    areas.append(np.trapz(y, x))\n\nmax_area = max(areas)\nmax_area_color = colors[areas.index(max_area)]\n\nif max_area_color == 'yellow':\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "no",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "970": {
        "question": "\u5982\u56fe\uff0c\u4e24\u76f4\u7ebfa\uff0cb\u88ab\u76f4\u7ebfc\u6240\u622a\uff0c\u5df2\u77e5a\u2225b\uff0c\u22201\uff1d62\u00b0\uff0c\u5219\u22202\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/970.jpg",
        "choices": [
            "62\u00b0",
            "108\u00b0",
            "118\u00b0",
            "128\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "118\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "970",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 135,
            "img_height": 141,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u4e24\u76f4\u7ebfa\uff0cb\u88ab\u76f4\u7ebfc\u6240\u622a\uff0c\u5df2\u77e5a\u2225b\uff0c\u22201\uff1d62\u00b0\uff0c\u5219\u22202\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 62\u00b0\n(B) 108\u00b0\n(C) 118\u00b0\n(D) 128\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Define the angles\nangle1 = sp.Symbol('angle1')\nangle2 = sp.Symbol('angle2')\n\n# Define the equation\neq = sp.Eq(angle1, 62)\neq2 = sp.Eq(angle1 + angle2, 180)\n\n# Solve the equation\nsolution = sp.solve((eq, eq2), (angle1, angle2))\n\n# Print the solution\nprint(solution[angle2])",
        "execution": "118",
        "error": "None",
        "extraction": "118",
        "prediction": "118\u00b0",
        "true_false": true
    },
    "971": {
        "question": "Can the boy reach the highest book?",
        "image": "images/971.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "971",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 400,
            "source": "VQA-AS",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "abstract scene",
            "grade": "daily life",
            "skills": [
                "numeric commonsense"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Can the boy reach the highest book?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def can_reach_highest_book(boy_height, book_heights):\n    highest_book = max(book_heights)\n    if boy_height >= highest_book:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nboy_height = 150\nbook_heights = [120, 130, 140, 160, 170]\nprint(can_reach_highest_book(boy_height, book_heights))",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "972": {
        "question": "Is the number of yellow shiny utility bikes greater than the number of brown metallic cruisers?",
        "image": "images/972.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "972",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of yellow shiny utility bikes greater than the number of brown metallic cruisers?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "yellow_shiny_utility_bikes = 10\nbrown_metallic_cruisers = 8\n\nif yellow_shiny_utility_bikes > brown_metallic_cruisers:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "973": {
        "question": "How many zeros does this function have?",
        "image": "images/973.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "973",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 2560,
            "img_height": 2039,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many zeros does this function have?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def count_zeros(function):\n    zeros = 0\n    for i in range(1, 1001):\n        if function(i) == 0:\n            zeros += 1\n    return zeros\n\n# Example function\ndef example_function(x):\n    return x**2 - 4*x + 4\n\nprint(count_zeros(example_function))",
        "execution": "1",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "974": {
        "question": "Are there the same number of big blue trucks and large purple metal double buss?",
        "image": "images/974.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "974",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Are there the same number of big blue trucks and large purple metal double buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_blue_trucks = 5\nlarge_purple_metal_double_buss = 5\n\nif big_blue_trucks == large_purple_metal_double_buss:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "975": {
        "question": "Subtract all brown matte objects. Subtract all blue metallic objects. How many objects are left?",
        "image": "images/975.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "6",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "975",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all brown matte objects. Subtract all blue metallic objects. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "brown_matte_objects = 5\nblue_metallic_objects = 3\n\nobjects_left = brown_matte_objects - blue_metallic_objects\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "976": {
        "question": "Is the number of metal biplanes behind the purple shiny object less than the number of purple school buss behind the big red object?",
        "image": "images/976.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "976",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of metal biplanes behind the purple shiny object less than the number of purple school buss behind the big red object?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def compare_numbers(num_metal_biplanes, num_purple_school_busses):\n    if num_metal_biplanes < num_purple_school_busses:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nnum_metal_biplanes = 5\nnum_purple_school_busses = 8\n\nprint(compare_numbers(num_metal_biplanes, num_purple_school_busses))",
        "execution": "Yes",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "977": {
        "question": "\u5982\u56fe\uff0c\u5df2\u77e5AB\u2225CD\uff0cAF\u4e0eCD\u4ea4\u4e8e\u70b9E\uff0cBE\u22a5AF\uff0c\u2220B\uff1d65\u00b0\uff0c\u5219\u2220DEF\u7684\u5ea6\u6570\u662f\uff08\uff09",
        "image": "images/977.jpg",
        "choices": [
            "65\u00b0",
            "5\u00b0",
            "15\u00b0",
            "25\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "25\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "977",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 250,
            "img_height": 129,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5df2\u77e5AB\u2225CD\uff0cAF\u4e0eCD\u4ea4\u4e8e\u70b9E\uff0cBE\u22a5AF\uff0c\u2220B\uff1d65\u00b0\uff0c\u5219\u2220DEF\u7684\u5ea6\u6570\u662f\uff08\uff09\nChoices:\n(A) 65\u00b0\n(B) 5\u00b0\n(C) 15\u00b0\n(D) 25\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_B = 65\n    angle_A = 180 - angle_B\n    angle_E = 180 - angle_A\n    angle_D = angle_E\n    angle_F = 180 - angle_D\n    angle_DEF = 180 - angle_F\n    return angle_DEF\n\nprint(find_angle())",
        "execution": "65",
        "error": "None",
        "extraction": "25",
        "prediction": "25\u00b0",
        "true_false": true
    },
    "978": {
        "question": "Allie kept a written log of how many miles she biked during the past 7 days. What is the range of the numbers?'",
        "image": "images/978.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "7",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "978",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 230,
            "img_height": 280,
            "source": "TabMWP",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "table",
            "grade": "high school",
            "skills": [
                "arithmetic reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Allie kept a written log of how many miles she biked during the past 7 days. What is the range of the numbers?'\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "miles_biked = [10, 15, 12, 8, 20, 17, 14]\nrange_of_miles = max(miles_biked) - min(miles_biked)\nprint(range_of_miles)",
        "execution": "12",
        "error": "None",
        "extraction": "12",
        "prediction": "12",
        "true_false": false
    },
    "979": {
        "question": "What number is shown?",
        "image": "images/979.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9079",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "979",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 634,
            "img_height": 279,
            "source": "IconQA",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "abstract scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What number is shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "number = 42\nprint(number)",
        "execution": "42",
        "error": "None",
        "extraction": "42",
        "prediction": "42",
        "true_false": false
    },
    "980": {
        "question": "What is the highest number shown?",
        "image": "images/980.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "12",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "980",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 429,
            "img_height": 640,
            "source": "VQA2.0",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest number shown?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "numbers = [5, 8, 2, 10, 6]\nhighest_number = max(numbers)\nprint(highest_number)",
        "execution": "10",
        "error": "None",
        "extraction": "10",
        "prediction": "10",
        "true_false": false
    },
    "981": {
        "question": "What is the sum of 2002, 2003 and 2004?",
        "image": "images/981.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "70.4",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "981",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of 2002, 2003 and 2004?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "sum = 2002 + 2003 + 2004\nprint(sum)",
        "execution": "6009",
        "error": "None",
        "extraction": "2009",
        "prediction": "2009.0",
        "true_false": false
    },
    "982": {
        "question": "Among the states that border Wyoming , does South Dakota have the highest value ?",
        "image": "images/982.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "982",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 700,
            "img_height": 500,
            "source": "MapQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "map chart",
            "grade": "high school",
            "skills": [
                "scientific reasoning",
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Among the states that border Wyoming , does South Dakota have the highest value ?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bordering_states = {\n    'Wyoming': ['Montana', 'South Dakota', 'Nebraska', 'Colorado', 'Utah', 'Idaho'],\n    'South Dakota': ['North Dakota', 'Minnesota', 'Iowa', 'Nebraska', 'Wyoming', 'Montana']\n}\n\nstate_values = {\n    'Wyoming': 100,\n    'Montana': 200,\n    'South Dakota': 150,\n    'Nebraska': 120,\n    'Colorado': 180,\n    'Utah': 160,\n    'Idaho': 140,\n    'North Dakota': 130,\n    'Minnesota': 110,\n    'Iowa': 90\n}\n\nhighest_value = True\n\nfor state in bordering_states['Wyoming']:\n    if state_values[state] > state_values['South Dakota']:\n        highest_value = False\n        break\n\nif highest_value:\n    print(\"(A) Yes\")\nelse:\n    print(\"(B) No\")",
        "execution": "(B) No",
        "error": "None",
        "extraction": "(B) No",
        "prediction": "No",
        "true_false": true
    },
    "983": {
        "question": "What is the highest accuracy reported in the whole chart?",
        "image": "images/983.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "8",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "983",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the highest accuracy reported in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart = {\n    'Model A': {\n        'Accuracy': 0.85,\n        'Precision': 0.90,\n        'Recall': 0.80\n    },\n    'Model B': {\n        'Accuracy': 0.92,\n        'Precision': 0.88,\n        'Recall': 0.95\n    },\n    'Model C': {\n        'Accuracy': 0.78,\n        'Precision': 0.85,\n        'Recall': 0.75\n    }\n}\n\nhighest_accuracy = 0\n\nfor model in chart:\n    accuracy = chart[model]['Accuracy']\n    if accuracy > highest_accuracy:\n        highest_accuracy = accuracy\n\nprint(highest_accuracy)",
        "execution": "0.92",
        "error": "None",
        "extraction": "0.92",
        "prediction": null,
        "true_false": false
    },
    "984": {
        "question": "Is the number of gray cars less than the number of small metallic minivans?",
        "image": "images/984.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "984",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of gray cars less than the number of small metallic minivans?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "gray_cars = 10\nsmall_metallic_minivans = 8\n\nif gray_cars < small_metallic_minivans:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "985": {
        "question": "What is the smallest percentage value recorded in the chart?",
        "image": "images/985.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "5",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "985",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the smallest percentage value recorded in the chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "chart_values = [0.05, 0.1, 0.15, 0.2, 0.25]\n\nmin_value = min(chart_values)\nprint(min_value)",
        "execution": "0.05",
        "error": "None",
        "extraction": "0.05",
        "prediction": null,
        "true_false": false
    },
    "986": {
        "question": "\u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0cAD\u662f\u89d2\u5e73\u5206\u7ebf\uff0cAE\u662f\u9ad8\uff0e\u82e5\u2220B\uff1d40\u00b0\uff0c\u2220C\uff1d70\u00b0\uff0c\u5219\u2220EAD\u7684\u5ea6\u6570\u4e3a\uff08\uff09",
        "image": "images/986.jpg",
        "choices": [
            "10\u00b0",
            "15\u00b0",
            "17.5\u00b0",
            "20\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "15\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "986",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 101,
            "img_height": 68,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff0c\u5728\u25b3ABC\u4e2d\uff0cAD\u662f\u89d2\u5e73\u5206\u7ebf\uff0cAE\u662f\u9ad8\uff0e\u82e5\u2220B\uff1d40\u00b0\uff0c\u2220C\uff1d70\u00b0\uff0c\u5219\u2220EAD\u7684\u5ea6\u6570\u4e3a\uff08\uff09\nChoices:\n(A) 10\u00b0\n(B) 15\u00b0\n(C) 17.5\u00b0\n(D) 20\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\ndef find_angle():\n    angle_B = 40\n    angle_C = 70\n\n    angle_A = 180 - angle_B - angle_C\n\n    angle_EAD = angle_A / 2\n\n    return angle_EAD\n\nprint(find_angle())",
        "execution": "35.0",
        "error": "None",
        "extraction": "17.5",
        "prediction": "17.5\u00b0",
        "true_false": false
    },
    "987": {
        "question": "A cross-section of an airplane wing is shown. Measurements of the thickness of the wing, in centimeters, at 20-centimeter intervals are 5.8, 20.3, 26.7, 29.0, 27.6, 27.3, 23.8, 20.5, 15.1, 8.7, and 2.8. Use the Midpoint Rule to estimate the area of the wing's cross-section.",
        "image": "images/987.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "4232",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "987",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 946,
            "img_height": 338,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "arithmetic reasoning",
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: A cross-section of an airplane wing is shown. Measurements of the thickness of the wing, in centimeters, at 20-centimeter intervals are 5.8, 20.3, 26.7, 29.0, 27.6, 27.3, 23.8, 20.5, 15.1, 8.7, and 2.8. Use the Midpoint Rule to estimate the area of the wing's cross-section.\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "thickness = [5.8, 20.3, 26.7, 29.0, 27.6, 27.3, 23.8, 20.5, 15.1, 8.7, 2.8]\ninterval = 20\n\narea = 0\nfor i in range(len(thickness)-1):\n    area += (thickness[i] + thickness[i+1]) / 2 * interval\n\nprint(area)",
        "execution": "4066.0",
        "error": "None",
        "extraction": "The estimated area of the wing's cross-section is 282.5.",
        "prediction": null,
        "true_false": false
    },
    "988": {
        "question": "What is the age gap between these two people in image?",
        "image": "images/988.jpg",
        "choices": null,
        "unit": "years",
        "precision": null,
        "answer": "1",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "988",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 500,
            "img_height": 333,
            "source": "KVQA",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "natural image",
            "grade": "daily life",
            "skills": [
                "numeric commonsense",
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the age gap between these two people in image? (Unit: years)\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "from datetime import date\n\nperson1_birthdate = date(1990, 5, 15)\nperson2_birthdate = date(1985, 10, 20)\n\nage_gap = abs(person1_birthdate.year - person2_birthdate.year)\nprint(age_gap)",
        "execution": "5",
        "error": "None",
        "extraction": "5",
        "prediction": "5",
        "true_false": false
    },
    "989": {
        "question": "How many people like the most preferred object in the whole chart?",
        "image": "images/989.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "989",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 448,
            "img_height": 448,
            "source": "DVQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: How many people like the most preferred object in the whole chart?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "data = {\n    'object1': 10,\n    'object2': 15,\n    'object3': 8,\n    'object4': 12,\n    'object5': 20\n}\n\nmax_likes = max(data.values())\ncount = 0\n\nfor likes in data.values():\n    if likes == max_likes:\n        count += 1\n\nprint(count)",
        "execution": "1",
        "error": "None",
        "extraction": "1",
        "prediction": "1",
        "true_false": false
    },
    "990": {
        "question": "In $\\odot S$, $m \\widehat {PQR}=98$, Find $m \\widehat {PQ}$.",
        "image": "images/990.jpg",
        "choices": [
            "45",
            "49",
            "90",
            "98"
        ],
        "unit": null,
        "precision": null,
        "answer": "49",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "990",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 544,
            "img_height": 452,
            "source": "Geometry3K",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: In $\\odot S$, $m \\widehat {PQR}=98$, Find $m \\widehat {PQ}$.\nChoices:\n(A) 45\n(B) 49\n(C) 90\n(D) 98\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def find_angle(m_angle_PQR):\n    m_angle_PQ = 180 - m_angle_PQR\n    return m_angle_PQ\n\nm_angle_PQR = 98\nm_angle_PQ = find_angle(m_angle_PQR)\nprint(m_angle_PQ)",
        "execution": "82",
        "error": "None",
        "extraction": "82",
        "prediction": "45",
        "true_false": false
    },
    "991": {
        "question": "Which functions have no zeros?",
        "image": "images/991.jpg",
        "choices": [
            "green and red",
            "blue and orange",
            "purple and grey"
        ],
        "unit": null,
        "precision": null,
        "answer": "purple and grey",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "991",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 616,
            "img_height": 383,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Which functions have no zeros?\nChoices:\n(A) green and red\n(B) blue and orange\n(C) purple and grey\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "def no_zeros(functions):\n    no_zeros_functions = []\n    for function in functions:\n        zeros = []\n        for x in range(-10, 11):\n            if function(x) == 0:\n                zeros.append(x)\n        if len(zeros) == 0:\n            no_zeros_functions.append(function)\n    return no_zeros_functions\n\ndef green(x):\n    return x + 2\n\ndef red(x):\n    return x - 3\n\ndef blue(x):\n    return x**2 + 1\n\ndef orange(x):\n    return x**3 - 2*x\n\ndef purple(x):\n    return x**2 - 4*x + 4\n\ndef grey(x):\n    return x**2 + 2*x + 1\n\nfunctions = [green, red, blue, orange, purple, grey]\nno_zeros_functions = no_zeros(functions)\n\nfor function in no_zeros_functions:\n    if function == green:\n        print(\"Green\")\n    elif function == red:\n        print(\"Red\")\n    elif function == blue:\n        print(\"Blue\")\n    elif function == orange:\n        print(\"Orange\")\n    elif function == purple:\n        print(\"Purple\")\n    elif function == grey:\n        print(\"Grey\")",
        "execution": "Blue",
        "error": "None",
        "extraction": "[Green, Red]",
        "prediction": "green and red",
        "true_false": false
    },
    "992": {
        "question": "Is the number of purple metallic things that are behind the small green motorbike less than the number of blue metal articulated buss?",
        "image": "images/992.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "992",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 640,
            "img_height": 480,
            "source": "Super-CLEVR",
            "category": "general-vqa",
            "task": "visual question answering",
            "context": "synthetic scene",
            "grade": "daily life",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is the number of purple metallic things that are behind the small green motorbike less than the number of blue metal articulated buss?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "purple_metallic_things_behind_motorbike = 5\nsmall_green_motorbike = 1\nblue_metal_articulated_busses = 10\n\nif purple_metallic_things_behind_motorbike < blue_metal_articulated_busses:\n    answer = \"Yes\"\nelse:\n    answer = \"No\"\n\nprint(answer)",
        "execution": "Yes",
        "error": "None",
        "extraction": "Yes",
        "prediction": "Yes",
        "true_false": false
    },
    "993": {
        "question": "Subtract all tiny yellow matte cylinders. Subtract all small blue rubber spheres. How many objects are left?",
        "image": "images/993.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "993",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all tiny yellow matte cylinders. Subtract all small blue rubber spheres. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "tiny_yellow_matte_cylinders = 5\nsmall_blue_rubber_spheres = 3\n\nobjects_left = tiny_yellow_matte_cylinders - small_blue_rubber_spheres\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    },
    "994": {
        "question": "Is Magenta greater than Web Maroon?",
        "image": "images/994.jpg",
        "choices": [
            "yes",
            "no"
        ],
        "unit": null,
        "precision": null,
        "answer": "yes",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "994",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 548,
            "img_height": 400,
            "source": "FigureQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "line plot",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is Magenta greater than Web Maroon?\nChoices:\n(A) yes\n(B) no\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "magenta = (255, 0, 255)\nweb_maroon = (128, 0, 0)\n\nif magenta > web_maroon:\n    print(\"yes\")\nelse:\n    print(\"no\")",
        "execution": "yes",
        "error": "None",
        "extraction": "no",
        "prediction": "no",
        "true_false": false
    },
    "995": {
        "question": "What is the sum of the two bars in  18 to 21?",
        "image": "images/995.jpg",
        "choices": null,
        "unit": null,
        "precision": 2,
        "answer": "18.27",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "995",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 800,
            "img_height": 557,
            "source": "ChartQA",
            "category": "general-vqa",
            "task": "figure question answering",
            "context": "bar chart",
            "grade": "daily life",
            "skills": [
                "statistical reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: What is the sum of the two bars in  18 to 21?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "bar1 = 18\nbar2 = 21\n\nsum_of_bars = bar1 + bar2\nprint(sum_of_bars)",
        "execution": "39",
        "error": "None",
        "extraction": "39",
        "prediction": "39.0",
        "true_false": false
    },
    "996": {
        "question": "Subtract all big shiny balls. Subtract all blue rubber blocks. How many objects are left?",
        "image": "images/996.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "2",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "996",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all big shiny balls. Subtract all blue rubber blocks. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "big_shiny_balls = 5\nblue_rubber_blocks = 3\n\nobjects_left = big_shiny_balls - blue_rubber_blocks\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": true
    },
    "997": {
        "question": "Is kx^2/2 larger than E at x=0?",
        "image": "images/997.jpg",
        "choices": [
            "Yes",
            "No"
        ],
        "unit": null,
        "precision": null,
        "answer": "No",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "997",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 537,
            "img_height": 197,
            "source": "FunctionQA",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "function plot",
            "grade": "college",
            "skills": [
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Is kx^2/2 larger than E at x=0?\nChoices:\n(A) Yes\n(B) No\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "k = 2.5\nE = 3.0\nx = 0\n\nresult = k * (x ** 2) / 2\n\nif result > E:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "execution": "No",
        "error": "None",
        "extraction": "No",
        "prediction": "No",
        "true_false": true
    },
    "998": {
        "question": "\u5982\u56fe\uff1a\u2220AOB\uff1a\u2220BOC\uff1a\u2220COD\uff1d2\uff1a3\uff1a4\uff0c\u5c04\u7ebfOM\u3001ON\uff0c\u5206\u522b\u5e73\u5206\u2220AOB\u4e0e\u2220COD\uff0c\u53c8\u2220MON\uff1d84\u00b0\uff0c\u5219\u2220AOB\u4e3a\uff08\uff09",
        "image": "images/998.jpg",
        "choices": [
            "28\u00b0",
            "30\u00b0",
            "32\u00b0",
            "38\u00b0"
        ],
        "unit": null,
        "precision": null,
        "answer": "28\u00b0",
        "question_type": "multi_choice",
        "answer_type": "text",
        "pid": "998",
        "metadata": {
            "split": "testmini",
            "language": "chinese",
            "img_width": 181,
            "img_height": 118,
            "source": "GeoQA+",
            "category": "math-targeted-vqa",
            "task": "geometry problem solving",
            "context": "geometry diagram",
            "grade": "high school",
            "skills": [
                "geometry reasoning",
                "algebraic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: \u5982\u56fe\uff1a\u2220AOB\uff1a\u2220BOC\uff1a\u2220COD\uff1d2\uff1a3\uff1a4\uff0c\u5c04\u7ebfOM\u3001ON\uff0c\u5206\u522b\u5e73\u5206\u2220AOB\u4e0e\u2220COD\uff0c\u53c8\u2220MON\uff1d84\u00b0\uff0c\u5219\u2220AOB\u4e3a\uff08\uff09\nChoices:\n(A) 28\u00b0\n(B) 30\u00b0\n(C) 32\u00b0\n(D) 38\u00b0\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import sympy as sp\n\n# Let x be the measure of angle AOB\nx = sp.Symbol('x')\n\n# Given that angle AOB : angle BOC : angle COD = 2 : 3 : 4\nangle_BOC = 3 * x / 2\nangle_COD = 4 * x / 2\n\n# Since angle MON = 84\u00b0, angle MOB + angle BOC + angle COD = 84\u00b0\nangle_MOB = 84 - angle_BOC - angle_COD\n\n# Since angle MOB and angle NOC are bisectors of angle AOB and angle COD respectively,\n# angle MOB = angle NOC = x / 2\nangle_NOC = x / 2\n\n# Since angle MON = angle MOB + angle NOC, we can solve for x\nequation = sp.Eq(angle_MOB + angle_NOC, 84)\nsolution = sp.solve(equation, x)\n\n# The solution will be in radians, so we convert it to degrees\nangle_AOB = sp.deg(solution[0])\n\nprint(angle_AOB)",
        "execution": "0",
        "error": "None",
        "extraction": "30\u00b0",
        "prediction": "30\u00b0",
        "true_false": false
    },
    "999": {
        "question": "The magnitude of the acceleration vector a is $10 \\mathrm{~cm} / \\mathrm{s}^2$. Use the figure to estimate the tangential components of $\\mathbf{a}$.\r\n",
        "image": "images/999.jpg",
        "choices": null,
        "unit": null,
        "precision": 1,
        "answer": "4.5",
        "question_type": "free_form",
        "answer_type": "float",
        "pid": "999",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 478,
            "img_height": 484,
            "source": "SciBench",
            "category": "math-targeted-vqa",
            "task": "textbook question answering",
            "context": "scientific figure",
            "grade": "college",
            "skills": [
                "scientific reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: The magnitude of the acceleration vector a is $10 \\mathrm{~cm} / \\mathrm{s}^2$. Use the figure to estimate the tangential components of $\\mathbf{a}$.\r\n\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "import math\n\nmagnitude = 10\nangle = 30\n\ntangential_component = magnitude * math.sin(math.radians(angle))\nprint(tangential_component)",
        "execution": "4.999999999999999",
        "error": "None",
        "extraction": "5.0",
        "prediction": "5.0",
        "true_false": false
    },
    "1000": {
        "question": "Subtract all brown matte cylinders. Subtract all big purple matte things. How many objects are left?",
        "image": "images/1000.jpg",
        "choices": null,
        "unit": null,
        "precision": null,
        "answer": "9",
        "question_type": "free_form",
        "answer_type": "integer",
        "pid": "1000",
        "metadata": {
            "split": "testmini",
            "language": "english",
            "img_width": 320,
            "img_height": 240,
            "source": "CLEVR-Math",
            "category": "math-targeted-vqa",
            "task": "math word problem",
            "context": "synthetic scene",
            "grade": "elementary school",
            "skills": [
                "arithmetic reasoning"
            ]
        },
        "caption": "",
        "ocr": [],
        "query": "Question: How much money does Ruth need to buy a baking dish, a casserole dish, and an ice cream scoop? (Unit: $)\nPython code: baking_dish_price = 4.00\ncasserole_dish_price = 3.00\nice_cream_scoop_price = 6.00\n\nans = baking_dish_price + casserole_dish_price + ice_cream_scoop_price\nprint(ans)\n\nQuestion: What is the largest city in the nation where this plane is headquartered?\nChoices:\n(A) hong kong\n(B) osaka\n(C) shanghai\n(D) tokyo\nPython code: def largest_city(caption, choices):\n    countries_largest_cities = {\n        'Japan': 'tokyo',\n        'China': 'shanghai'\n    }\n\n    if \"Japan\" in caption:\n        country = 'Japan'\n    elif \"China\" in caption:\n        country = 'China'\n\n    for choice in choices:\n        if choice == countries_largest_cities[country]:\n            return choice\n    return \"\"\n\nchoices = ['hong kong', 'osaka', 'shanghai', 'tokyo']\ncaption = \"The image shows a large passenger jet parked on a tarmac at an airport. The jet is white with red trim and has a red tail. It is sitting on top of a tarmac next to a building. The jet is being loaded with passengers and cargo. The text on the image says 'Japan. Endless Discovery'.\"\n\nprint(largest_city(caption, choices))\n\nQuestion: Subtract all brown matte cylinders. Subtract all big purple matte things. How many objects are left?\nHint: Please generate a python code to solve the problem\nPython code:",
        "response": "brown_matte_cylinders = 5\nbig_purple_matte_things = 3\n\nobjects_left = brown_matte_cylinders - big_purple_matte_things\nprint(objects_left)",
        "execution": "2",
        "error": "None",
        "extraction": "2",
        "prediction": "2",
        "true_false": false
    }
}